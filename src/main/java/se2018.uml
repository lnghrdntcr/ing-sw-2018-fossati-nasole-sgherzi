<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:PapyrusJava="http://www.eclipse.org/papyrus/PapyrusJava/1" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:standard="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_BCqlAIB2EeiyN7Yq9bqbrA" name="se2018">
    <packageImport xmi:type="uml:PackageImport" xmi:id="_BMGN0IB2EeiyN7Yq9bqbrA">
      <importedPackage xmi:type="uml:Model" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#_0"/>
    </packageImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_ImkbUIB2EeiyN7Yq9bqbrA" name="ing-sw-2018-fossati-nasole-sgherzi">
      <packagedElement xmi:type="uml:Package" xmi:id="_IpmhMIB2EeiyN7Yq9bqbrA" name="it">
        <packagedElement xmi:type="uml:Package" xmi:id="_IpnIQIB2EeiyN7Yq9bqbrA" name="polimi">
          <packagedElement xmi:type="uml:Package" xmi:id="_IpnIQYB2EeiyN7Yq9bqbrA" name="se2018">
            <packagedElement xmi:type="uml:Class" xmi:id="_Ipo9cIB2EeiyN7Yq9bqbrA" name="App" visibility="public">
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ItLZoIB2EeiyN7Yq9bqbrA" name="main" specification="_Is6T4IB2EeiyN7Yq9bqbrA">
                <language>JAVA</language>
                <body>
    CLIPrinter.setup();
    if (args.length &lt;= 0) {
        Log.e(&quot;You have to pass at least one parameter&quot;);
        printUsage();
        return;
    }
    switch(args[0]) {
        case &quot;server&quot;:
            if (args.length &lt;= 1) {
                Log.e(&quot;Missing parameter: players&quot;);
                printUsage();
                return;
            }
            try {
                loadConfigAndStartServer(args);
            } catch (NumberFormatException e) {
                Log.e(&quot;Players not a number!&quot;);
                printUsage();
                return;
            } catch (RemoteException e) {
                Log.w(&quot;Couldn't start server.&quot;);
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
            break;
        case &quot;client&quot;:
            Client.startClient();
            break;
        default:
            printUsage();
            /*I'M ONE STEP CLOSER TO THE EDGE, AND I'M ABOUT TO */
            break;
    }
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ItUjkIB2EeiyN7Yq9bqbrA" name="loadConfigAndStartServer" specification="_ItNO0IB2EeiyN7Yq9bqbrA">
                <language>JAVA</language>
                <body>
    int numPlayers = Integer.parseInt(args[1]);
    String path = null;
    if (args.length == 4) {
        // It means that also the external config file is passed as an argument... maybe.
        if (args[2].equals(&quot;--config&quot;) || args[2].startsWith(&quot;-c &quot;)) {
            path = args[3];
        }
    }
    File configFile = null;
    if (path == null) {
        try {
            configFile = new File((new App()).getClass().getClassLoader().getResource(&quot;defaultConfig.json&quot;).toURI());
        } catch (URISyntaxException e) {
            CLIPrinter.printError(&quot;Could not load the default configuration file!&quot;);
        }
    } else {
        configFile = new File(path);
    }
    FileInputStream fileInputStream = new FileInputStream(configFile);
    BufferedInputStream bufferedInputStream = new BufferedInputStream(fileInputStream);
    StringBuilder builder;
    try (Scanner scanner = new Scanner(bufferedInputStream)) {
        builder = new StringBuilder();
        //read all lines
        while (scanner.hasNextLine()) {
            builder.append(scanner.nextLine());
        }
    }
    //now we have the whole file loaded, let's parse the JSON
    JSONObject root = new JSONObject(builder.toString());
    Log.d(root.toString());
    // Setting schema card path
    Settings.setSchemaCardDatabase(root.getString(&quot;customSchemaCardPath&quot;));
    new Server(root.getInt(&quot;serverTimeout&quot;), root.getInt(&quot;actionTimeout&quot;), root.getString(&quot;customSchemaCardPath&quot;)).startServer();
</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_ItWYwIB2EeiyN7Yq9bqbrA" name="printUsage" specification="_ItVxsIB2EeiyN7Yq9bqbrA">
                <language>JAVA</language>
                <body>
    System.out.println(&quot;Usage: sagrada.jar [server players|client]&quot;);
</body>
              </ownedBehavior>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_Is6T4IB2EeiyN7Yq9bqbrA" name="main" visibility="public" isStatic="true" method="_ItLZoIB2EeiyN7Yq9bqbrA" raisedException="_ItBBkIB2EeiyN7Yq9bqbrA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_Is8wIIB2EeiyN7Yq9bqbrA" name="args" type="_IptO4IB2EeiyN7Yq9bqbrA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Is9XMIB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Is9-QIB2EeiyN7Yq9bqbrA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ItNO0IB2EeiyN7Yq9bqbrA" name="loadConfigAndStartServer" visibility="private" isStatic="true" method="_ItUjkIB2EeiyN7Yq9bqbrA" raisedException="_ItQSIIB2EeiyN7Yq9bqbrA">
                <ownedParameter xmi:type="uml:Parameter" xmi:id="_ItN14IB2EeiyN7Yq9bqbrA" name="args" type="_IptO4IB2EeiyN7Yq9bqbrA">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ItOc8IB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_ItPEAIB2EeiyN7Yq9bqbrA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:type="uml:Operation" xmi:id="_ItVxsIB2EeiyN7Yq9bqbrA" name="printUsage" visibility="private" isStatic="true" method="_ItWYwIB2EeiyN7Yq9bqbrA"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_ItfisIB2EeiyN7Yq9bqbrA" name="controller">
              <packagedElement xmi:type="uml:Class" xmi:id="_ItgJwIB2EeiyN7Yq9bqbrA" name="Controller" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_IthX4IB2EeiyN7Yq9bqbrA" general="_Itgw0IB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_ItvaUIB2EeiyN7Yq9bqbrA" name="matchBeginTime" visibility="private" isLeaf="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_8heigBydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_ItwocYB2EeiyN7Yq9bqbrA" name="model" visibility="private" type="_ItwocIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_ItxPgYB2EeiyN7Yq9bqbrA" name="state" visibility="private" type="_ItxPgIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_ItzEsIB2EeiyN7Yq9bqbrA" name="views" visibility="private" type="_ItydoIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_ItzrwIB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_It0S0IB2EeiyN7Yq9bqbrA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_It054IB2EeiyN7Yq9bqbrA" name="gameStarted" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_It1g8IB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>false</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_It7AgIB2EeiyN7Yq9bqbrA" name="outboundEventLoop" visibility="private" type="_It3WIIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_It7AgYB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new ConcurrentLinkedQueue&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_It7nkIB2EeiyN7Yq9bqbrA" name="inboundEventLoop" visibility="private" type="_It3WIIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_It7nkYB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new ConcurrentLinkedQueue&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_It8OoIB2EeiyN7Yq9bqbrA" name="isGameEnded" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_It9cwIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>false</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_It-D0IB2EeiyN7Yq9bqbrA" name="actionTimeout" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_8heigBydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_It_R8IB2EeiyN7Yq9bqbrA" name="beginTime" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_8heigBydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_IuEKcIB2EeiyN7Yq9bqbrA" name="actionTimeoutThread" visibility="private" type="_It_5AIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_IuEKcYB2EeiyN7Yq9bqbrA" name="timeoutCommunicationThread" visibility="private" type="_It_5AIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_IuExgIB2EeiyN7Yq9bqbrA" name="eventLoopHandlerThread" visibility="private" type="_It_5AIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_ItlpUIB2EeiyN7Yq9bqbrA" name="Controller implements Observer" client="_ItgJwIB2EeiyN7Yq9bqbrA" supplier="_Ith-8IB2EeiyN7Yq9bqbrA" contract="_Ith-8IB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuLfMIB2EeiyN7Yq9bqbrA" name="Controller" specification="_IuExgYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.actionTimeout = actionTimeout;
    this.views = viewArrayList;
    ArrayList&lt;String> pln = new ArrayList&lt;>();
    //register the Controller as an observer
    //and the view as an observer of the controller
    viewArrayList.forEach(( view) -> {
        view.register(this);
        this.register(view);
        pln.add(view.getPlayer());
    });
    model = new GameTableMultiplayer(pickPublicObjectives(), pln.toArray(new String[viewArrayList.size()]), pickToolCards());
    viewArrayList.forEach( view -> model.register(view));
    Log.i(&quot;Game created with &quot; + pln.size() + &quot; players&quot;);
    matchBeginTime = System.currentTimeMillis() / 1000;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuNUYIB2EeiyN7Yq9bqbrA" name="start" specification="_IuMtUIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (state != null)
        throw new IllegalStateException(&quot;Game already started!&quot;);
    Log.d(&quot;Starting timeout...&quot;);
    state = new GameSetupState(this, model);
    this.startEventLoopHandlerThread();
    this.startActionTimeout();
    model.onGameStart();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuOigYB2EeiyN7Yq9bqbrA" name="getTimeout" specification="_IuN7cIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return (int) ((System.currentTimeMillis() - this.beginTime) / 1000L);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuPwoYB2EeiyN7Yq9bqbrA" name="pickToolCards" specification="_IuPJkIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    ArrayList&lt;String> tools = new ArrayList&lt;>();
    // TESTED on GUI
    tools.add(&quot;CircularCutter&quot;);
    // TESTED on gui
    tools.add(&quot;CopperReamer&quot;);
    // TESTED On GUI
    tools.add(&quot;CorkRow&quot;);
    // tested on gui
    tools.add(&quot;DiamondPad&quot;);
    // Tested on gui
    tools.add(&quot;EglomiseBrush&quot;);
    // Tested on gui
    tools.add(&quot;FirmPastaDiluent&quot;);
    // Tested on gui
    tools.add(&quot;FirmPastaBrush&quot;);
    // Strange behaviour
    tools.add(&quot;Gavel&quot;);
    // Tested on gui
    tools.add(&quot;Lathekin&quot;);
    // Tested on GUI
    tools.add(&quot;ManualCutter&quot;);
    // Tested on GUI
    tools.add(&quot;RoughingNipper&quot;);
    // Tested on gui
    tools.add(&quot;WheeledPincer&quot;);
    Collections.shuffle(tools);
    return tools.subList(0, Settings.TOOLCARDS_N).toArray(new String[Settings.TOOLCARDS_N]);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuRl0YB2EeiyN7Yq9bqbrA" name="pickPublicObjectives" specification="_IuPwooB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    ArrayList&lt;PublicObjective> publicObjectives = new ArrayList&lt;>();
    publicObjectives.add(new ColoredDiagonals());
    publicObjectives.add(new ColorVariety());
    publicObjectives.add(new DarkShades());
    publicObjectives.add(new DifferentColumnColor());
    publicObjectives.add(new DifferentColumnShades());
    publicObjectives.add(new DifferentRowColor());
    publicObjectives.add(new DifferentRowShades());
    publicObjectives.add(new LightShades());
    publicObjectives.add(new MediumShades());
    Collections.shuffle(publicObjectives);
    return publicObjectives.subList(0, Settings.POBJECTIVES_N).toArray(new PublicObjective[Settings.POBJECTIVES_N]);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuUpIIB2EeiyN7Yq9bqbrA" name="update" specification="_IuTbAIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    // that?
    if (message.getPlayerName().equals(getModel().getCurrentPlayerName()))
        this.beginTime = System.currentTimeMillis();
    this.inboundEventLoop.add(message);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuV3QIB2EeiyN7Yq9bqbrA" name="startActionTimeout" specification="_IuVQMIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.actionTimeoutThread = new Thread(() -> {
        while (true) {
            this.beginTime = System.currentTimeMillis();
            while ((System.currentTimeMillis() - this.beginTime) &lt; this.actionTimeout) {
                this.outboundEventLoop.add(new TimeoutCommunicationEvent(this.getClass().getName(), &quot;&quot;, this.model.getCurrentPlayerName(), (int) (this.actionTimeout / 1000L - this.getTimeout())));
                try {
                    Thread.sleep(1000);
                    Log.i(&quot;[ACTION_TIMEOUT_THREAD] Remaining &quot; + (this.actionTimeout / 1000L - this.getTimeout()) + &quot; seconds&quot;);
                } catch (InterruptedException e) {
                    Log.d(&quot;ActionTimeoutThread was interrupted, well... This may be a problem.&quot;);
                    e.printStackTrace();
                }
            }
            this.outboundEventLoop.add(new PlayerTimeoutEvent(this.getClass().getName(), &quot;&quot;, this.model.getCurrentPlayerName()));
            this.inboundEventLoop.add(new ViewPlayerTimeoutEvent(this.getClass().getName(), &quot;&quot;, this.getModel().getCurrentPlayerName()));
        }
    }, &quot;ActionTimeoutThread&quot;);
    this.actionTimeoutThread.start();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuXscIB2EeiyN7Yq9bqbrA" name="startEventLoopHandlerThread" specification="_IuXFYIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.eventLoopHandlerThread = new Thread(() -> {
        while (true) {
            while (!this.outboundEventLoop.isEmpty()) {
                this.notify(this.outboundEventLoop.poll());
            }
            while (!this.inboundEventLoop.isEmpty()) {
                ViewEvent inboundEvent = this.inboundEventLoop.poll();
                this.state = state.handleEvent(inboundEvent, this.model);
                if (!getModel().hasNextTurn() &amp;&amp; !isGameEnded) {
                    isGameEnded = true;
                    this.state = new GameEndState(this, getModel());
                }
                Log.d(getClass().getName() + &quot; Going in new state: &quot; + state + &quot; event: &quot; + inboundEvent);
                Log.d(getClass().getName() + &quot;JSON:&quot; + inboundEvent.toJSON());
            }
            try {
                Thread.sleep(50);
            } catch (InterruptedException ignored) {
                Log.d(&quot;eventLoopHandlerThread was interrupted&quot;);
            }
        }
    }, &quot;EventLoopHandler&quot;);
    this.eventLoopHandlerThread.start();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuY6kYB2EeiyN7Yq9bqbrA" name="isPlayerDisconnected" specification="_IuYTgIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    for (View v : this.views) {
        if (playerName.equals(v.getPlayer()) &amp;&amp; !v.isConnected())
            return true;
    }
    return false;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuZhoIB2EeiyN7Yq9bqbrA" name="isMoreThanOnePlayerConnected" specification="_IuY6koB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    int i = 0;
    for (View v : this.views) {
        if (v.isConnected())
            i++;
    }
    return i > 1;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuZho4B2EeiyN7Yq9bqbrA" name="getModel" specification="_IuZhoYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return model;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IubW0YB2EeiyN7Yq9bqbrA" name="getPlayersList" specification="_IuaIsIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return model.getPlayersName();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IudzEIB2EeiyN7Yq9bqbrA" name="dispatchEvent" specification="_Iuck8YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.outboundEventLoop.add(toDispatchEvent);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuhdcIB2EeiyN7Yq9bqbrA" name="reconnectPlayer" specification="_IufoQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    for (View v : this.views) {
        if (v.getPlayer().equals(playerName) &amp;&amp; !v.isConnected()) {
            ((VirtualView) v).connect(localProxy);
            new Thread(() -> {
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
                getModel().sync(playerName);
                state.syncPlayer(playerName);
            }).start();
            Log.d(&quot;Player &quot; + playerName + &quot; reconnected successfully &quot;);
        }
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuiEgoB2EeiyN7Yq9bqbrA" name="setGameEnded" specification="_IuiEgIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    isGameEnded = gameEnded;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuirkoB2EeiyN7Yq9bqbrA" name="isGameStarted" specification="_IuirkIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return gameStarted;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IujSoYB2EeiyN7Yq9bqbrA" name="setGameStarted" specification="_IujSoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.gameStarted = true;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IujSpIB2EeiyN7Yq9bqbrA" name="getMatchBeginTime" specification="_IujSooB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return matchBeginTime;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IuExgYB2EeiyN7Yq9bqbrA" name="Controller" visibility="public" method="_IuLfMIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuJC8IB2EeiyN7Yq9bqbrA" name="viewArrayList" type="_ItydoIB2EeiyN7Yq9bqbrA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_IuJqAIB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IuKREIB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuK4IIB2EeiyN7Yq9bqbrA" name="actionTimeout">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_8heigBydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IuMtUIB2EeiyN7Yq9bqbrA" name="start" visibility="public" method="_IuNUYIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IuN7cIB2EeiyN7Yq9bqbrA" name="getTimeout" visibility="public" method="_IuOigYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuOigIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IuPJkIB2EeiyN7Yq9bqbrA" name="pickToolCards" visibility="private" method="_IuPwoYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuPJkYB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_IuPJkoB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IuPwoIB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IuPwooB2EeiyN7Yq9bqbrA" name="pickPublicObjectives" visibility="private" method="_IuRl0YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuQXsYB2EeiyN7Yq9bqbrA" type="_IuQXsIB2EeiyN7Yq9bqbrA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_IuQ-wIB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IuRl0IB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IuTbAIB2EeiyN7Yq9bqbrA" name="update" visibility="public" method="_IuUpIIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuUCEIB2EeiyN7Yq9bqbrA" name="message" type="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IuVQMIB2EeiyN7Yq9bqbrA" name="startActionTimeout" visibility="private" method="_IuV3QIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IuXFYIB2EeiyN7Yq9bqbrA" name="startEventLoopHandlerThread" visibility="private" method="_IuXscIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IuYTgIB2EeiyN7Yq9bqbrA" name="isPlayerDisconnected" visibility="public" method="_IuY6kYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuYTgYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuY6kIB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IuY6koB2EeiyN7Yq9bqbrA" name="isMoreThanOnePlayerConnected" visibility="public" method="_IuZhoIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuY6k4B2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IuZhoYB2EeiyN7Yq9bqbrA" name="getModel" visibility="public" method="_IuZho4B2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuZhooB2EeiyN7Yq9bqbrA" type="_ItwocIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IuaIsIB2EeiyN7Yq9bqbrA" name="getPlayersList" visibility="public" method="_IubW0YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuaIsYB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_IuavwIB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IubW0IB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Iuck8YB2EeiyN7Yq9bqbrA" name="dispatchEvent" visibility="public" method="_IudzEIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IudMAIB2EeiyN7Yq9bqbrA" name="toDispatchEvent" type="_Iuck8IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IufoQIB2EeiyN7Yq9bqbrA" name="reconnectPlayer" visibility="public" method="_IuhdcIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IugPUIB2EeiyN7Yq9bqbrA" name="localProxy" type="_IufBMYB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iug2YIB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IuiEgIB2EeiyN7Yq9bqbrA" name="setGameEnded" visibility="public" method="_IuiEgoB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuiEgYB2EeiyN7Yq9bqbrA" name="gameEnded">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IuirkIB2EeiyN7Yq9bqbrA" name="isGameStarted" visibility="public" method="_IuirkoB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuirkYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IujSoIB2EeiyN7Yq9bqbrA" name="setGameStarted" visibility="public" method="_IujSoYB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IujSooB2EeiyN7Yq9bqbrA" name="getMatchBeginTime" visibility="public" method="_IujSpIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IujSo4B2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_8heigBydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Itgw0IB2EeiyN7Yq9bqbrA" name="Observable"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_Ith-8IB2EeiyN7Yq9bqbrA" name="Observer"/>
              <packagedElement xmi:type="uml:Package" xmi:id="_ItwocoB2EeiyN7Yq9bqbrA" name="states">
                <packagedElement xmi:type="uml:Class" xmi:id="_ItxPgIB2EeiyN7Yq9bqbrA" name="State" visibility="public" isAbstract="true">
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_IxEbIIB2EeiyN7Yq9bqbrA" name="controller" visibility="private" type="_ItgJwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_IxFCMIB2EeiyN7Yq9bqbrA" name="model" visibility="private" type="_ItwocIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxIFgYB2EeiyN7Yq9bqbrA" name="State" specification="_IxFpQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    this.controller = controller;
    this.model = model;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxJ6sYB2EeiyN7Yq9bqbrA" name="handleEvent" specification="_IxIskYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return event.visit(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxMW8YB2EeiyN7Yq9bqbrA" name="handleToolcardEvent" specification="_IxLv4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.i(getClass().getCanonicalName() + &quot;: cannot handle ToolcardEvent here!&quot;);
    return this;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxOMIIB2EeiyN7Yq9bqbrA" name="handleEndTurnEvent" specification="_IxM-AYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.i(getClass().getCanonicalName() + &quot;: cannot handle EndTurnEvent here!&quot;);
    return this;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxPaQYB2EeiyN7Yq9bqbrA" name="handlePlaceDiceEvent" specification="_IxOzMYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.i(getClass().getCanonicalName() + &quot;: cannot handle PlaceDiceEvent here!&quot;);
    return this;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxRPcIB2EeiyN7Yq9bqbrA" name="handleSchemaCardSelectedEvent" specification="_IxQBUYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.i(getClass().getCanonicalName() + &quot;: cannot handle SchemaCardSelectedEvent here!&quot;);
    return this;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxSdkIB2EeiyN7Yq9bqbrA" name="handleUserTimeOutEvent" specification="_IxR2gIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.i(this.getClass().getCanonicalName() + &quot;: cannot handle PlayerTimeoutEvent here&quot;);
    return this;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxTEoYB2EeiyN7Yq9bqbrA" name="getController" specification="_IxSdkYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return controller;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxUSwIB2EeiyN7Yq9bqbrA" name="getModel" specification="_IxTrsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return model;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxWH8IB2EeiyN7Yq9bqbrA" name="handlePlayerDisconnected" specification="_IxU50YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return this;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxWvAYB2EeiyN7Yq9bqbrA" name="handleUserCancelEvent" specification="_IxWH8YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.i(this.getClass().getCanonicalName() + &quot;: Cannot handle UserCancelEvent here.&quot;);
    return this;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxFpQIB2EeiyN7Yq9bqbrA" name="State" visibility="public" method="_IxIFgYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxHecIB2EeiyN7Yq9bqbrA" name="controller" type="_ItgJwIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxIFgIB2EeiyN7Yq9bqbrA" name="model" type="_ItwocIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxIskYB2EeiyN7Yq9bqbrA" name="handleEvent" visibility="public" isLeaf="true" method="_IxJ6sYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxJToIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxJToYB2EeiyN7Yq9bqbrA" name="event" type="_IxIskIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxJ6sIB2EeiyN7Yq9bqbrA" name="model" type="_ItwocIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxKhwIB2EeiyN7Yq9bqbrA" name="syncPlayer" visibility="public" isAbstract="true">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxLI0IB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxLv4IB2EeiyN7Yq9bqbrA" name="handleToolcardEvent" visibility="public" method="_IxMW8YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxLv4YB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxMW8IB2EeiyN7Yq9bqbrA" name="event" type="_IxLI0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxM-AYB2EeiyN7Yq9bqbrA" name="handleEndTurnEvent" visibility="public" method="_IxOMIIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxNlEIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxNlEYB2EeiyN7Yq9bqbrA" name="event" type="_IxM-AIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxOzMYB2EeiyN7Yq9bqbrA" name="handlePlaceDiceEvent" visibility="public" method="_IxPaQYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxOzMoB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxPaQIB2EeiyN7Yq9bqbrA" name="event" type="_IxOzMIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxQBUYB2EeiyN7Yq9bqbrA" name="handleSchemaCardSelectedEvent" visibility="public" method="_IxRPcIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxQoYIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxQoYYB2EeiyN7Yq9bqbrA" name="event" type="_IxQBUIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxR2gIB2EeiyN7Yq9bqbrA" name="handleUserTimeOutEvent" visibility="public" method="_IxSdkIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxR2gYB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxSdkYB2EeiyN7Yq9bqbrA" name="getController" visibility="public" method="_IxTEoYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxTEoIB2EeiyN7Yq9bqbrA" type="_ItgJwIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxTrsIB2EeiyN7Yq9bqbrA" name="getModel" visibility="public" method="_IxUSwIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxTrsYB2EeiyN7Yq9bqbrA" type="_ItwocIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxU50YB2EeiyN7Yq9bqbrA" name="handlePlayerDisconnected" visibility="public" method="_IxWH8IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxVg4IB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxVg4YB2EeiyN7Yq9bqbrA" name="playerDisconnectedEvent" type="_IxU50IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxWH8YB2EeiyN7Yq9bqbrA" name="handleUserCancelEvent" visibility="public" method="_IxWvAYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxWvAIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_IxIskIB2EeiyN7Yq9bqbrA" name="ViewEvent"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_IxLI0YB2EeiyN7Yq9bqbrA" name="UseToolcardEvent"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_IxM-AIB2EeiyN7Yq9bqbrA" name="EndTurnEvent"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_IxOzMIB2EeiyN7Yq9bqbrA" name="PlaceDiceEvent"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_IxQBUIB2EeiyN7Yq9bqbrA" name="SchemaCardSelectedEvent"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_IxU50IB2EeiyN7Yq9bqbrA" name="PlayerDisconnectedEvent"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_IxZLQIB2EeiyN7Yq9bqbrA" name="GameEndState" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_IxZyUIB2EeiyN7Yq9bqbrA" general="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ixc1oIB2EeiyN7Yq9bqbrA" name="GameEndState" specification="_IxZyUYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(controller, model);
    controller.setGameEnded(true);
    this.computeScore();
// TODO: Figure out a slightly better idea to end the game.
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxeDwIB2EeiyN7Yq9bqbrA" name="syncPlayer" specification="_IxdcsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ixeq0YB2EeiyN7Yq9bqbrA" name="computeScore" specification="_Ixeq0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (getModel() == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Model cannot be null.&quot;);
    ArrayList&lt;ScoreHolder> scoreHolders = getModel().computeAllScores();
    if (scoreHolders.isEmpty())
        throw new IllegalStateException(this.getClass().getCanonicalName() + &quot;: There are no players on which compute the score.&quot;);
    if (scoreHolders.size() != 1) {
        Collections.sort(scoreHolders);
        Collections.reverse(scoreHolders);
    }
    scoreHolders.forEach( el -> {
        System.out.println(el);
    });
    File file = new File(&quot;leaderboad.json&quot;);
    try {
        if (file.createNewFile()) {
            try (OutputStreamWriter os = new OutputStreamWriter(new FileOutputStream(file))) {
                os.write(&quot;{}&quot;);
                os.flush();
            }
        }
        InputStream is = new FileInputStream(file);
        JSONTokener tokener = new JSONTokener(is);
        JSONObject root = new JSONObject(tokener);
        for (ScoreHolder sh : scoreHolders) {
            JSONObject player = null;
            try {
                player = (JSONObject) root.getJSONObject(sh.getPlayerName());
            } catch (JSONException ignored) {
                player = new JSONObject();
            }
            if (sh.equals(scoreHolders.get(0))) {
                player.put(&quot;victories&quot;, player.optInt(&quot;victories&quot;, 0) + 1);
            } else {
                player.put(&quot;losses&quot;, player.optInt(&quot;losses&quot;, 0) + 1);
            }
            player.put(&quot;totalTimePlayed&quot;, player.optInt(&quot;totalTimePlayed&quot;, 0) + (System.currentTimeMillis() / 1000) - getController().getMatchBeginTime());
            root.put(sh.getPlayerName(), player);
        }
        try (OutputStreamWriter os = new OutputStreamWriter(new FileOutputStream(file))) {
            os.write(root.toString());
            os.flush();
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
    this.getController().dispatchEvent(new EndGameEvent(this.getClass().getName(), &quot;&quot;, &quot;&quot;, scoreHolders));
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxZyUYB2EeiyN7Yq9bqbrA" name="GameEndState" visibility="public" method="_Ixc1oIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxcOkIB2EeiyN7Yq9bqbrA" name="controller" type="_ItgJwIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxcOkYB2EeiyN7Yq9bqbrA" name="model" type="_ItwocIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxdcsIB2EeiyN7Yq9bqbrA" name="syncPlayer" visibility="public" method="_IxeDwIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxdcsYB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Ixeq0IB2EeiyN7Yq9bqbrA" name="computeScore" visibility="private" method="_Ixeq0YB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_IxhHEIB2EeiyN7Yq9bqbrA" name="PlaceRedrawnDiceState" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_IxhuIIB2EeiyN7Yq9bqbrA" general="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_IxhuIYB2EeiyN7Yq9bqbrA" name="oldState" visibility="private" isLeaf="true" type="_ItxPgIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Ixi8QYB2EeiyN7Yq9bqbrA" name="redrawnDiceFace" visibility="private" isLeaf="true" type="_Ixi8QIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxnNsoB2EeiyN7Yq9bqbrA" name="PlaceRedrawnDiceState" specification="_IxkKYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(controller, model);
    this.oldState = oldState;
    this.redrawnDiceFace = redrawnDiceFace;
    getController().dispatchEvent(new AskPlaceRedrawDiceEvent(getClass().getCanonicalName(), playerName, playerName, diceNumberOnDraftBoard));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxpC4IB2EeiyN7Yq9bqbrA" name="syncPlayer" specification="_Ixn0wIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    this.oldState.syncPlayer(playerName);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ixq4EIB2EeiyN7Yq9bqbrA" name="handleToolcardEvent" specification="_Ixpp8YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(getClass().getCanonicalName() + &quot; handling ToolcardEvent&quot;);
    try {
        PlaceAnotherDiceEvent ev = (PlaceAnotherDiceEvent) event;
        //checks if user is placing the redrawn face
        if (getModel().getDiceFaceByIndex(ev.getDiceFaceIndex()).equals(redrawnDiceFace)) {
            if (getModel().isDiceAllowed(ev.getPlayerName(), ev.getPoint(), redrawnDiceFace, SchemaCardFace.Ignore.NOTHING)) {
                getModel().placeDice(ev.getPlayerName(), ev.getDiceFaceIndex(), ev.getPoint());
                getController().dispatchEvent(new LogEvent(this.getClass().getName(), event.getPlayerName(), &quot;&quot;, event.getPlayerName() + &quot; has used &quot; + getModel().getToolCardByPosition(event.getToolCardIndex()).getName()));
                return oldState;
            } else {
                Log.w(getClass().getCanonicalName() + &quot;: the dice face can't be placed here!&quot;);
                return this;
            }
        } else {
            Log.w(getClass().getCanonicalName() + &quot;: only the redrawn face can be placed&quot;);
            return this;
        }
    } catch (Exception e) {
        Log.w(getClass().getCanonicalName() + &quot;: there was an exception: &quot; + e.getMessage());
        return this;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxsGMYB2EeiyN7Yq9bqbrA" name="handleUserCancelEvent" specification="_IxrfIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(&quot;User Cancelled current action&quot;);
    return oldState;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxtUUYB2EeiyN7Yq9bqbrA" name="handleUserTimeOutEvent" specification="_IxstQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(getClass().getCanonicalName() + &quot; handling UserTimeoutEvent&quot;);
    //if the user timed out, simply do not let him place any dice
    return oldState;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ixt7Y4B2EeiyN7Yq9bqbrA" name="handlePlayerDisconnected" specification="_Ixt7YIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (playerDisconnectedEvent.getPlayerName().equals(getModel().getCurrentPlayerName())) {
        return oldState.handlePlayerDisconnected(playerDisconnectedEvent);
    }
    return super.handlePlayerDisconnected(playerDisconnectedEvent);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxkKYIB2EeiyN7Yq9bqbrA" name="PlaceRedrawnDiceState" visibility="public" method="_IxnNsoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ixl_kIB2EeiyN7Yq9bqbrA" name="controller" type="_ItgJwIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxmmoIB2EeiyN7Yq9bqbrA" name="model" type="_ItwocIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxmmoYB2EeiyN7Yq9bqbrA" name="oldState" type="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxmmooB2EeiyN7Yq9bqbrA" name="redrawnDiceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxnNsIB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxnNsYB2EeiyN7Yq9bqbrA" name="diceNumberOnDraftBoard">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Ixn0wIB2EeiyN7Yq9bqbrA" name="syncPlayer" visibility="public" method="_IxpC4IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ixob0IB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Ixpp8YB2EeiyN7Yq9bqbrA" name="handleToolcardEvent" visibility="public" method="_Ixq4EIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxqRAIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxqRAYB2EeiyN7Yq9bqbrA" name="event" type="_Ixpp8IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxrfIIB2EeiyN7Yq9bqbrA" name="handleUserCancelEvent" visibility="public" method="_IxsGMYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxsGMIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxstQIB2EeiyN7Yq9bqbrA" name="handleUserTimeOutEvent" visibility="public" method="_IxtUUYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxtUUIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Ixt7YIB2EeiyN7Yq9bqbrA" name="handlePlayerDisconnected" visibility="public" method="_Ixt7Y4B2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ixt7YYB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ixt7YoB2EeiyN7Yq9bqbrA" name="playerDisconnectedEvent" type="_IxtUUoB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_IxvwkIB2EeiyN7Yq9bqbrA" name="PlaceRedrawnWithNumberDiceState" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_IxvwkYB2EeiyN7Yq9bqbrA" general="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_IxwXoIB2EeiyN7Yq9bqbrA" name="oldState" visibility="private" isLeaf="true" type="_ItxPgIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ix1QIIB2EeiyN7Yq9bqbrA" name="PlaceRedrawnWithNumberDiceState" specification="_Ixw-sIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(controller, model);
    this.oldState = oldState;
    getController().dispatchEvent(new AskPlaceRedrawDiceWithNumberSelectionEvent(getClass().getCanonicalName(), playerName, playerName, diceNumberOnDraftBoard));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ix2eQYB2EeiyN7Yq9bqbrA" name="syncPlayer" specification="_Ix13MIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    this.oldState.syncPlayer(playerName);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ix3sYoB2EeiyN7Yq9bqbrA" name="handleToolcardEvent" specification="_Ix3FUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(getClass().getCanonicalName() + &quot; handling ToolcardEvent&quot;);
    try {
        PlaceAnotherDiceSelectingNumberEvent ev = (PlaceAnotherDiceSelectingNumberEvent) event;
        //checks if user is placing the redrawn face
        if (ev.getDiceFaceIndex() == getModel().getDiceNumberOnDraftBoard() - 1) {
            getModel().changeDiceNumber(ev.getDiceFaceIndex(), ev.getNumber());
            if (getModel().isDiceAllowed(ev.getPlayerName(), ev.getPoint(), getModel().getDiceFaceByIndex(getModel().getDiceNumberOnDraftBoard() - 1), SchemaCardFace.Ignore.NOTHING)) {
                getModel().placeDice(ev.getPlayerName(), ev.getDiceFaceIndex(), ev.getPoint());
                getController().dispatchEvent(new LogEvent(this.getClass().getName(), event.getPlayerName(), &quot;&quot;, event.getPlayerName() + &quot; has used &quot; + getModel().getToolCardByPosition(event.getToolCardIndex()).getName()));
                return oldState;
            } else {
                Log.w(getClass().getCanonicalName() + &quot;: the dice face can't be placed here!&quot;);
                return this;
            }
        } else {
            Log.w(getClass().getCanonicalName() + &quot;: only the redrawn face can be placed&quot;);
            return this;
        }
    } catch (Exception e) {
        Log.w(getClass().getCanonicalName() + &quot;: there was an exception: &quot; + e.getMessage());
        return this;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ix4TcYB2EeiyN7Yq9bqbrA" name="handleUserCancelEvent" specification="_Ix3sY4B2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(&quot;User Cancelled current action&quot;);
    return oldState;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ix5hkYB2EeiyN7Yq9bqbrA" name="handleUserTimeOutEvent" specification="_Ix46gIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(getClass().getCanonicalName() + &quot; handling UserTimeoutEvent&quot;);
    //If the user disconnected or timed out, simply return, leaving the dice as it is
    return oldState;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ix6vsYB2EeiyN7Yq9bqbrA" name="handlePlayerDisconnected" specification="_Ix6IoIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (playerDisconnectedEvent.getPlayerName().equals(getModel().getCurrentPlayerName())) {
        return oldState.handlePlayerDisconnected(playerDisconnectedEvent);
    }
    return super.handlePlayerDisconnected(playerDisconnectedEvent);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Ixw-sIB2EeiyN7Yq9bqbrA" name="PlaceRedrawnWithNumberDiceState" visibility="public" method="_Ix1QIIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ixza8IB2EeiyN7Yq9bqbrA" name="controller" type="_ItgJwIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ixza8YB2EeiyN7Yq9bqbrA" name="model" type="_ItwocIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ix0CAIB2EeiyN7Yq9bqbrA" name="oldState" type="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ix0pEIB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ix0pEYB2EeiyN7Yq9bqbrA" name="diceNumberOnDraftBoard">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Ix13MIB2EeiyN7Yq9bqbrA" name="syncPlayer" visibility="public" method="_Ix2eQYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ix2eQIB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Ix3FUIB2EeiyN7Yq9bqbrA" name="handleToolcardEvent" visibility="public" method="_Ix3sYoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ix3sYIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ix3sYYB2EeiyN7Yq9bqbrA" name="event" type="_Ixpp8IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Ix3sY4B2EeiyN7Yq9bqbrA" name="handleUserCancelEvent" visibility="public" method="_Ix4TcYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ix4TcIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Ix46gIB2EeiyN7Yq9bqbrA" name="handleUserTimeOutEvent" visibility="public" method="_Ix5hkYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ix5hkIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Ix6IoIB2EeiyN7Yq9bqbrA" name="handlePlayerDisconnected" visibility="public" method="_Ix6vsYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ix6IoYB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ix6vsIB2EeiyN7Yq9bqbrA" name="playerDisconnectedEvent" type="_IxtUUoB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_IyD5oIB2EeiyN7Yq9bqbrA" name="TurnState" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_IyD5oYB2EeiyN7Yq9bqbrA" general="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_IyGV4IB2EeiyN7Yq9bqbrA" name="isToolCardUsable" visibility="private" isLeaf="true" type="_IyEgsIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_IyG88IB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new HashMap&lt;>()</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_IyHkAIB2EeiyN7Yq9bqbrA" name="useToolcard" visibility="private" isLeaf="true" type="_IyEgsIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_IyILEIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new HashMap&lt;>()</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_IyIyIIB2EeiyN7Yq9bqbrA" name="hasPlacedDice" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_IyJZMIB2EeiyN7Yq9bqbrA" name="hasUsedToolcard" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IyORsIB2EeiyN7Yq9bqbrA" name="TurnState" specification="_IyKAQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(controller, model);
    while (getController().isPlayerDisconnected(getModel().getCurrentPlayerName()) &amp;&amp; getModel().hasNextTurn()) {
        int oldTurn = getModel().getRound();
        getModel().nextTurn();
        if (oldTurn != getModel().getRound()) {
            Log.i(&quot;New round started! Putting back dices&quot;);
            getModel().endTurn();
        }
    }
    setupToolCardIsUsable();
    setupToolCardUse();
    this.hasPlacedDice = hasPlacedDice;
    this.hasUsedToolcard = hasUsedToolcard;
    if (!getController().isGameStarted()) {
        Log.d(&quot;A NEW GAME HAS STARTED!!!&quot;);
        this.getController().dispatchEvent(new GameStartEvent(this.getClass().getName(), &quot;&quot;, &quot;&quot;));
        this.getController().setGameStarted();
    }
    this.getController().dispatchEvent(new TurnChangedEvent(this.getClass().getName(), &quot;&quot;, this.getModel().getCurrentPlayerName(), this.getModel().getRound(), this.getModel().isFirstTurnInRound(), isDicePlaced(), isToolcardUsed()));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IyPf0YB2EeiyN7Yq9bqbrA" name="syncPlayer" specification="_IyO4wIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    getController().dispatchEvent(new LogEvent(this.getClass().getName(), playerName, &quot;&quot;, playerName + &quot; reconnected!&quot;));
    this.getController().dispatchEvent(new TurnChangedEvent(this.getClass().getName(), playerName, this.getModel().getCurrentPlayerName(), this.getModel().getRound(), this.getModel().isFirstTurnInRound(), isDicePlaced(), isToolcardUsed()));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IyRVAYB2EeiyN7Yq9bqbrA" name="handleToolcardEvent" specification="_IyQt8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(getClass().getCanonicalName() + &quot; handling useToolcardEvent...&quot;);
    if (event == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Event cannot be null&quot;);
    if (!getModel().getCurrentPlayerName().equals(event.getPlayerName()))
        Log.w(&quot;Only current player can use a toolcard&quot;);
    Tool tool = getModel().getToolCardByPosition(event.getToolCardIndex());
    int playerToken = getModel().getPlayerToken(event.getPlayerName());
    if (!isToolCardUsable.get(tool.getName()).get())
        Log.i(tool.getClass().getName() + &quot; not usable in this turn.&quot;);
    if (playerToken &lt; tool.getNeededTokens()) {
        Log.i(event.getPlayerName() + &quot; cannot use the &quot; + tool.getClass().getName() + &quot; toolcard:\n &quot; + &quot;Tokens needed:\t&quot; + tool.getNeededTokens() + &quot;\n Actual tokens:\t&quot; + playerToken);
        return this;
    } else {
        return useToolcard.get(tool.getName()).apply(event);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IyTKMIB2EeiyN7Yq9bqbrA" name="handlePlaceDiceEvent" specification="_IyR8EIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(getClass().getCanonicalName() + &quot; handling PlaceDiceEvent...&quot;);
    if (event == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Event cannot be null&quot;);
    if (getModel() == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Model cannot be null&quot;);
    if (!getModel().getCurrentPlayerName().equals(event.getPlayerName())) {
        Log.w(event.getPlayerName() + &quot;: Only the current player can place a dice!&quot;);
        return this;
    }
    if (this.hasPlacedDice) {
        Log.w(event.getPlayerName() + &quot; has already placed a dice.&quot;);
        return this;
    }
    if (getModel().isDiceAllowed(event.getPlayerName(), event.getPoint(), getModel().getDiceFaceByIndex(event.getDiceFaceIndex()), SchemaCardFace.Ignore.NOTHING)) {
        getModel().placeDice(event.getPlayerName(), event.getDiceFaceIndex(), event.getPoint());
        getController().dispatchEvent(new LogEvent(this.getClass().getName(), &quot;&quot;, &quot;&quot;, event.getPlayerName() + &quot; has placed a &quot; + getModel().getDiceFaceByIndex(event.getDiceFaceIndex()).getColor().toString().toLowerCase() + &quot; &quot; + getModel().getDiceFaceByIndex(event.getDiceFaceIndex()).getNumber() + &quot; in position &quot; + event.getPoint().x + &quot; &quot; + event.getPoint().y));
    } else {
        return this;
    }
    return new TurnState(this.getController(), getModel(), true, this.hasUsedToolcard);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IyUYUYB2EeiyN7Yq9bqbrA" name="handleUserTimeOutEvent" specification="_IyTxQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    getController().dispatchEvent(new LogEvent(this.getClass().getName(), &quot;&quot;, &quot;&quot;, getModel().getCurrentPlayerName() + &quot; timed out!&quot;));
    return this.handleEndTurnEvent(new EndTurnEvent(&quot;UserTimeout&quot;, getModel().getCurrentPlayerName(), this.getModel().getCurrentPlayerName()));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IyWNgIB2EeiyN7Yq9bqbrA" name="handlePlayerDisconnected" specification="_IyU_YIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (!getController().isMoreThanOnePlayerConnected()) {
        return new GameEndState(getController(), getModel());
    }
    if (playerDisconnectedEvent.getPlayerName().equals(getModel().getCurrentPlayerName())) {
        getController().dispatchEvent(new LogEvent(this.getClass().getName(), &quot;&quot;, &quot;&quot;, playerDisconnectedEvent.getPlayerName() + &quot; disconnected!&quot;));
        return this.handleEndTurnEvent(new EndTurnEvent(&quot;PlayerDisconnected&quot;, playerDisconnectedEvent.getPlayerName(), this.getModel().getCurrentPlayerName()));
    }
    getController().dispatchEvent(new LogEvent(this.getClass().getName(), &quot;&quot;, &quot;&quot;, playerDisconnectedEvent.getPlayerName() + &quot; disconnected!&quot;));
    return super.handlePlayerDisconnected(playerDisconnectedEvent);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IyYCsIB2EeiyN7Yq9bqbrA" name="handleEndTurnEvent" specification="_IyW0kIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(getClass().getCanonicalName() + &quot; handling EndTurnEvent...&quot;);
    if (getModel() == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Model cannot be null&quot;);
    if (!getModel().getCurrentPlayerName().equals(event.getPlayerName())) {
        Log.w(event.getPlayerName() + &quot;Only the current player can end its turn!&quot;);
    } else {
        if (getModel().hasNextTurn()) {
            int oldTurn = getModel().getRound();
            getModel().nextTurn();
            if (oldTurn != getModel().getRound()) {
                Log.i(&quot;New round started! Putting back dices&quot;);
                getModel().endTurn();
                getController().dispatchEvent(new LogEvent(this.getClass().getName(), &quot;&quot;, &quot;&quot;, &quot;A new round has begun!&quot;));
            }
            return new TurnState(this.getController(), getModel(), false, false);
        } else {
            return new GameEndState(this.getController(), getModel());
        }
    }
    return this;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IyZQ0YB2EeiyN7Yq9bqbrA" name="isDicePlaced" specification="_IyYpwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return this.hasPlacedDice;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iyae8YB2EeiyN7Yq9bqbrA" name="isToolcardUsed" specification="_IyZ34IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return this.hasUsedToolcard;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IybtEIB2EeiyN7Yq9bqbrA" name="setupToolCardIsUsable" specification="_IybGAIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    isToolCardUsable.clear();
    isToolCardUsable.put(&quot;CircularCutter&quot;, () -> true);
    isToolCardUsable.put(&quot;CopperReamer&quot;, () -> true);
    isToolCardUsable.put(&quot;CorkRow&quot;, () -> true);
    isToolCardUsable.put(&quot;DiamondPad&quot;, () -> true);
    isToolCardUsable.put(&quot;EglomiseBrush&quot;, () -> true);
    isToolCardUsable.put(&quot;FirmPastaDiluent&quot;, () -> true);
    isToolCardUsable.put(&quot;FirmPastaBrush&quot;, () -> true);
    isToolCardUsable.put(&quot;Gavel&quot;, () -> !getModel().isFirstTurnInRound() &amp;&amp; !isDicePlaced());
    isToolCardUsable.put(&quot;Lathekin&quot;, () -> true);
    isToolCardUsable.put(&quot;ManualCutter&quot;, () -> true);
    isToolCardUsable.put(&quot;RoughingNipper&quot;, () -> true);
    isToolCardUsable.put(&quot;WheeledPincer&quot;, (() -> getModel().isFirstTurnInRound()));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IycUIYB2EeiyN7Yq9bqbrA" name="setupToolCardUse" specification="_IycUIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    useToolcard.clear();
    useToolcard.put(&quot;CircularCutter&quot;, this::useCircularCutter);
    useToolcard.put(&quot;CopperReamer&quot;, ( event) -> useMoveDice(event, SchemaCardFace.Ignore.NUMBER));
    useToolcard.put(&quot;CorkRow&quot;, this::useCorkRow);
    useToolcard.put(&quot;DiamondPad&quot;, this::useDiamondPad);
    useToolcard.put(&quot;EglomiseBrush&quot;, ( event) -> useMoveDice(event, SchemaCardFace.Ignore.COLOR));
    useToolcard.put(&quot;FirmPastaDiluent&quot;, this::useFirmPastaDiluent);
    useToolcard.put(&quot;FirmPastaBrush&quot;, this::useFirmPastaBrush);
    useToolcard.put(&quot;Gavel&quot;, this::useGavel);
    useToolcard.put(&quot;Lathekin&quot;, this::useMoveDiceTwice);
    useToolcard.put(&quot;ManualCutter&quot;, this::useManualCutter);
    useToolcard.put(&quot;RoughingNipper&quot;, this::useRoughingNipper);
    useToolcard.put(&quot;WheeledPincer&quot;, this::useWheeledPincher);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IyeJUIB2EeiyN7Yq9bqbrA" name="useRoughingNipper" specification="_Iyc7MIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    try {
        ChangeDiceNumberEvent ev = (ChangeDiceNumberEvent) event;
        getModel().increaseDecreaseDice(ev.getDicePosition(), ev.getNumber());
        getModel().useTokenOnToolcard(event.getPlayerName(), event.getToolCardIndex());
        signalToolCardUsed(event);
        return new TurnState(getController(), getModel(), isDicePlaced(), true);
    } catch (Exception e) {
        Log.w(&quot;Unable to flip the dice: &quot; + e.getMessage());
        return this;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IyfXcYB2EeiyN7Yq9bqbrA" name="signalToolCardUsed" specification="_IyewYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    getController().dispatchEvent(new LogEvent(this.getClass().getName(), event.getPlayerName(), &quot;&quot;, event.getPlayerName() + &quot; has used &quot; + getModel().getToolCardByPosition(event.getToolCardIndex()).getName() + &quot;!&quot;));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iyjo4YB2EeiyN7Yq9bqbrA" name="useMoveDice" specification="_IyiawIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    try {
        MoveDiceEvent e = (MoveDiceEvent) event;
        String name = getModel().getCurrentPlayerName();
        Schema tempSchema = getModel().getPlayerSchemaCopy(e.getPlayerName());
        DiceFace tempDiceFace = tempSchema.removeDiceFace(e.getSource());
        if (tempSchema.isDiceAllowed(e.getDestination(), tempDiceFace, ignore)) {
            getModel().moveDice(name, e.getSource(), e.getDestination(), true);
            getModel().useTokenOnToolcard(event.getPlayerName(), e.getToolCardIndex());
            signalToolCardUsed(event);
            return new TurnState(getController(), getModel(), this.isDicePlaced(), true);
        } else {
            Log.w(&quot;Destination not allowed&quot;);
            return this;
        }
    } catch (Exception e) {
        Log.w(&quot;Unable to move dice: &quot; + e.getMessage());
        return this;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IymFIIB2EeiyN7Yq9bqbrA" name="useMoveDiceTwice" specification="_IykP8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    try {
        DoubleMoveDiceEvent ev = (DoubleMoveDiceEvent) event;
        Schema tempSchema = getModel().getPlayerSchemaCopy(ev.getPlayerName());
        DiceFace tempDice = tempSchema.removeDiceFace(ev.getSource(0));
        if (tempSchema.isDiceAllowed(ev.getDestination(0), tempDice, SchemaCardFace.Ignore.NOTHING)) {
            tempSchema.setDiceFace(ev.getDestination(0), tempDice);
            tempDice = tempSchema.removeDiceFace(ev.getSource(1));
            if (tempSchema.isDiceAllowed(ev.getDestination(1), tempDice, SchemaCardFace.Ignore.NOTHING)) {
                getModel().moveDice(ev.getPlayerName(), ev.getSource(0), ev.getDestination(0), false);
                getModel().moveDice(ev.getPlayerName(), ev.getSource(1), ev.getDestination(1), true);
                getModel().useTokenOnToolcard(event.getPlayerName(), ev.getToolCardIndex());
                signalToolCardUsed(event);
                return new TurnState(getController(), getModel(), this.isDicePlaced(), true);
            } else {
                Log.w(getClass().getCanonicalName() + &quot;: second move not allowed!&quot;);
                return this;
            }
        } else {
            Log.w(getClass().getCanonicalName() + &quot;: first move no allowed!&quot;);
            return this;
        }
    } catch (Exception e) {
        Log.w(&quot;Unable to move dices: &quot; + e.getMessage());
        return this;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IynTQYB2EeiyN7Yq9bqbrA" name="useCircularCutter" specification="_IymsMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    try {
        SwapDiceFaceWithDiceHolderEvent ev = (SwapDiceFaceWithDiceHolderEvent) event;
        getModel().swapDraftDiceWithHolder(ev.getDraftBoardIndex(), ev.getTurn(), ev.getIndexInTurn());
        getModel().useTokenOnToolcard(event.getPlayerName(), ev.getToolCardIndex());
        signalToolCardUsed(event);
        return new TurnState(getController(), getModel(), this.isDicePlaced(), true);
    } catch (Exception e) {
        Log.w(&quot;Unable to use CircularCutter: &quot; + e.getMessage());
        return this;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IypIcIB2EeiyN7Yq9bqbrA" name="useFirmPastaBrush" specification="_Iyn6UIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    try {
        DiceActionEvent ev = (DiceActionEvent) event;
        DiceFace redrawed = getModel().redrawDice(ev.getDicePosition());
        getModel().useTokenOnToolcard(event.getPlayerName(), ev.getToolCardIndex());
        if (getModel().getPlayerSchemaCopy(ev.getPlayerName()).isDiceAllowedSomewhere(redrawed, SchemaCardFace.Ignore.NOTHING)) {
            //the diceface can be placed
            return new PlaceRedrawnDiceState(getController(), getModel(), new TurnState(getController(), getModel(), isDicePlaced(), true), redrawed, ev.getPlayerName(), getModel().getDiceNumberOnDraftBoard() - 1);
        } else {
            //the diceface cannot be placed
            return new TurnState(getController(), getModel(), isDicePlaced(), true);
        }
    } catch (Exception e) {
        Log.w(getClass().getCanonicalName() + &quot;: cannot use FirmPastaBrush: &quot; + e.getMessage());
        return this;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iyq9oIB2EeiyN7Yq9bqbrA" name="useGavel" specification="_IypvgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    try {
        getModel().redrawAllDice();
        getModel().useTokenOnToolcard(event.getPlayerName(), event.getToolCardIndex());
        signalToolCardUsed(event);
        return new TurnState(getController(), getModel(), isDicePlaced(), true);
    } catch (Exception e) {
        Log.w(&quot;Use not allowed: &quot; + e.getMessage());
        return this;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IysLwYB2EeiyN7Yq9bqbrA" name="useWheeledPincher" specification="_IyrksIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    try {
        PlaceAnotherDiceEvent ev = (PlaceAnotherDiceEvent) event;
        if (getModel().isDiceAllowed(event.getPlayerName(), ev.getPoint(), getModel().getDiceFaceByIndex(ev.getDiceFaceIndex()), SchemaCardFace.Ignore.NOTHING)) {
            getModel().placeDice(event.getPlayerName(), ev.getDiceFaceIndex(), ev.getPoint());
            getModel().useTokenOnToolcard(event.getPlayerName(), event.getToolCardIndex());
        } else {
            Log.w(&quot;Cannot place a dice here: &quot;);
            return this;
        }
        getModel().playerWillDropTurn(event.getPlayerName());
        signalToolCardUsed(event);
        return new TurnState(getController(), getModel(), this.isDicePlaced(), true);
    } catch (Exception e) {
        Log.w(&quot;Cannot use WheeledPincer: &quot; + e.getMessage());
        return this;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IytZ4YB2EeiyN7Yq9bqbrA" name="useCorkRow" specification="_Iysy0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    try {
        PlaceAnotherDiceEvent e = (PlaceAnotherDiceEvent) event;
        String name = getModel().getCurrentPlayerName();
        if (getModel().isAloneDiceAllowed(name, e.getPoint(), getModel().getDiceFaceByIndex(e.getDiceFaceIndex()), SchemaCardFace.Ignore.NOTHING)) {
            getModel().placeDice(e.getPlayerName(), e.getDiceFaceIndex(), e.getPoint());
            getModel().useTokenOnToolcard(event.getPlayerName(), event.getToolCardIndex());
            signalToolCardUsed(event);
            return new TurnState(getController(), getModel(), this.isDicePlaced(), true);
        } else {
            Log.w(&quot;Destination not allowed!&quot;);
            return this;
        }
    } catch (Exception e) {
        Log.w(&quot;Cannot use CorkRow: &quot; + e.getMessage());
        return this;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IyuA8oB2EeiyN7Yq9bqbrA" name="useDiamondPad" specification="_IytZ4oB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    try {
        DiceActionEvent ev = (DiceActionEvent) event;
        getModel().flipDice(ev.getDicePosition());
        getModel().useTokenOnToolcard(event.getPlayerName(), event.getToolCardIndex());
        signalToolCardUsed(event);
        return new TurnState(getController(), getModel(), this.isDicePlaced(), true);
    } catch (Exception e) {
        Log.w(&quot;Unable to flip the dice: &quot; + e.getMessage());
        return this;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iyv2IIB2EeiyN7Yq9bqbrA" name="useFirmPastaDiluent" specification="_IyuoAIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    try {
        DiceActionEvent ev = (DiceActionEvent) event;
        getModel().putBackAndRedrawDice(ev.getDicePosition());
        getModel().useTokenOnToolcard(event.getPlayerName(), event.getToolCardIndex());
        return new PlaceRedrawnWithNumberDiceState(getController(), getModel(), new TurnState(getController(), getModel(), this.isDicePlaced(), true), ev.getPlayerName(), getModel().getDiceNumberOnDraftBoard() - 1);
    } catch (Exception e) {
        Log.w(&quot;Unable to use FirmPastaDiluent: &quot; + e.getMessage());
        return this;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IyxrUIB2EeiyN7Yq9bqbrA" name="useManualCutter" specification="_IywdMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    try {
        DoubleMoveOfColorDiceEvent ev = (DoubleMoveOfColorDiceEvent) event;
        if (!getModel().isColorInDiceHolder(ev.getColor())) {
            Log.w(getClass().getCanonicalName() + &quot;: trying to move a dice of a not existent color&quot;);
            return this;
        }
        if (!ev.getColor().equals(getModel().getPlayerDiceFace(ev.getPlayerName(), ev.getSource(0)).getColor()) || !ev.getColor().equals(getModel().getPlayerDiceFace(ev.getPlayerName(), ev.getSource(1)).getColor())) {
            Log.w(getClass().getCanonicalName() + &quot;: trying to move a dice of a wrong color&quot;);
            return this;
        }
        Schema tempSchema = getModel().getPlayerSchemaCopy(ev.getPlayerName());
        DiceFace tempDice = tempSchema.removeDiceFace(ev.getSource(0));
        if (tempSchema.isDiceAllowed(ev.getDestination(0), tempDice, SchemaCardFace.Ignore.NOTHING)) {
            tempSchema.setDiceFace(ev.getDestination(0), tempDice);
            tempDice = tempSchema.removeDiceFace(ev.getSource(1));
            if (tempSchema.isDiceAllowed(ev.getDestination(1), tempDice, SchemaCardFace.Ignore.NOTHING)) {
                getModel().moveDice(ev.getPlayerName(), ev.getSource(0), ev.getDestination(0), false);
                getModel().moveDice(ev.getPlayerName(), ev.getSource(1), ev.getDestination(1), true);
                getModel().useTokenOnToolcard(event.getPlayerName(), event.getToolCardIndex());
                signalToolCardUsed(event);
                return new TurnState(getController(), getModel(), this.isDicePlaced(), true);
            } else {
                Log.w(getClass().getCanonicalName() + &quot;: second move not allowed!&quot;);
                return this;
            }
        } else {
            Log.w(getClass().getCanonicalName() + &quot;: first move no allowed!&quot;);
            return this;
        }
    } catch (Exception e) {
        Log.w(&quot;Unable to use ManualCutter: &quot; + e.getMessage());
        return this;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iyy5cYB2EeiyN7Yq9bqbrA" name="toString" specification="_IyySYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return &quot;TurnState{&quot; + &quot;hasPlacedDice=&quot; + hasPlacedDice + &quot;, hasUsedToolcard=&quot; + hasUsedToolcard + &quot;, player=&quot; + getModel().getCurrentPlayerName() + &quot;, round=&quot; + getModel().getRound() + &quot;, firstTurn=&quot; + getModel().isFirstTurnInRound() + '}';
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IyKAQIB2EeiyN7Yq9bqbrA" name="TurnState" visibility="public" method="_IyORsIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyMcgIB2EeiyN7Yq9bqbrA" name="controller" type="_ItgJwIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyNDkIB2EeiyN7Yq9bqbrA" name="model" type="_ItwocIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyNDkYB2EeiyN7Yq9bqbrA" name="hasPlacedDice">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyNqoIB2EeiyN7Yq9bqbrA" name="hasUsedToolcard">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IyO4wIB2EeiyN7Yq9bqbrA" name="syncPlayer" visibility="public" method="_IyPf0YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyPf0IB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IyQt8IB2EeiyN7Yq9bqbrA" name="handleToolcardEvent" visibility="public" method="_IyRVAYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyQt8YB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyRVAIB2EeiyN7Yq9bqbrA" name="event" type="_IxLI0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IyR8EIB2EeiyN7Yq9bqbrA" name="handlePlaceDiceEvent" visibility="public" method="_IyTKMIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IySjIIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IySjIYB2EeiyN7Yq9bqbrA" name="event" type="_IxOzMIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IyTxQIB2EeiyN7Yq9bqbrA" name="handleUserTimeOutEvent" visibility="public" method="_IyUYUYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyUYUIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IyU_YIB2EeiyN7Yq9bqbrA" name="handlePlayerDisconnected" visibility="public" method="_IyWNgIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyVmcIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyVmcYB2EeiyN7Yq9bqbrA" name="playerDisconnectedEvent" type="_IxU50IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IyW0kIB2EeiyN7Yq9bqbrA" name="handleEndTurnEvent" visibility="public" method="_IyYCsIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyW0kYB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyXboIB2EeiyN7Yq9bqbrA" name="event" type="_IxM-AIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IyYpwIB2EeiyN7Yq9bqbrA" name="isDicePlaced" visibility="public" method="_IyZQ0YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyZQ0IB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IyZ34IB2EeiyN7Yq9bqbrA" name="isToolcardUsed" visibility="public" method="_Iyae8YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iyae8IB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IybGAIB2EeiyN7Yq9bqbrA" name="setupToolCardIsUsable" visibility="private" method="_IybtEIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IycUIIB2EeiyN7Yq9bqbrA" name="setupToolCardUse" visibility="private" method="_IycUIYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iyc7MIB2EeiyN7Yq9bqbrA" name="useRoughingNipper" visibility="private" method="_IyeJUIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IydiQIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IydiQYB2EeiyN7Yq9bqbrA" name="event" type="_IxLI0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IyewYIB2EeiyN7Yq9bqbrA" name="signalToolCardUsed" visibility="private" method="_IyfXcYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyfXcIB2EeiyN7Yq9bqbrA" name="event" type="_IxLI0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IyiawIB2EeiyN7Yq9bqbrA" name="useMoveDice" visibility="private" method="_Iyjo4YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyiawYB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyjB0IB2EeiyN7Yq9bqbrA" name="event" type="_IxLI0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iyjo4IB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IykP8IB2EeiyN7Yq9bqbrA" name="useMoveDiceTwice" visibility="private" method="_IymFIIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iyk3AIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyleEIB2EeiyN7Yq9bqbrA" name="event" type="_IxLI0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IymsMIB2EeiyN7Yq9bqbrA" name="useCircularCutter" visibility="private" method="_IynTQYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IymsMYB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IynTQIB2EeiyN7Yq9bqbrA" name="event" type="_IxLI0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iyn6UIB2EeiyN7Yq9bqbrA" name="useFirmPastaBrush" visibility="private" method="_IypIcIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyohYIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyohYYB2EeiyN7Yq9bqbrA" name="event" type="_IxLI0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IypvgIB2EeiyN7Yq9bqbrA" name="useGavel" visibility="private" method="_Iyq9oIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyqWkIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyqWkYB2EeiyN7Yq9bqbrA" name="event" type="_IxLI0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IyrksIB2EeiyN7Yq9bqbrA" name="useWheeledPincher" visibility="private" method="_IysLwYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyrksYB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IysLwIB2EeiyN7Yq9bqbrA" name="event" type="_IxLI0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iysy0IB2EeiyN7Yq9bqbrA" name="useCorkRow" visibility="private" method="_IytZ4YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iysy0YB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IytZ4IB2EeiyN7Yq9bqbrA" name="event" type="_IxLI0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IytZ4oB2EeiyN7Yq9bqbrA" name="useDiamondPad" visibility="private" method="_IyuA8oB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyuA8IB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyuA8YB2EeiyN7Yq9bqbrA" name="event" type="_IxLI0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IyuoAIB2EeiyN7Yq9bqbrA" name="useFirmPastaDiluent" visibility="private" method="_Iyv2IIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyuoAYB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyvPEIB2EeiyN7Yq9bqbrA" name="event" type="_IxLI0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IywdMIB2EeiyN7Yq9bqbrA" name="useManualCutter" visibility="private" method="_IyxrUIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IywdMYB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IyxEQIB2EeiyN7Yq9bqbrA" name="event" type="_IxLI0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IyySYIB2EeiyN7Yq9bqbrA" name="toString" visibility="public" method="_Iyy5cYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iyy5cIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Iy18wIB2EeiyN7Yq9bqbrA" name="GameSetupState" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Iy18wYB2EeiyN7Yq9bqbrA" general="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Iy2j0IB2EeiyN7Yq9bqbrA" name="schemaCardList" visibility="private" type="_Iu2NkYB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Iy2j0YB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Iy2j0oB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iy5AEYB2EeiyN7Yq9bqbrA" name="GameSetupState" specification="_Iy2j04B2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(controller, model);
    try {
        schemaCardList = SchemaCard.loadSchemaCardsFromJson(Settings.getDefaultSchemaCardDatabase());
    } catch (FileNotFoundException e) {
        Log.e(&quot;SchemaCardFile &quot; + Settings.getDefaultSchemaCardDatabase() + &quot; not valid!&quot;);
        return;
    }
    Collections.shuffle(schemaCardList);
    for (int i = 0; i &lt; getController().getPlayersList().length; i++) {
        Event toDispatchEvent = new AskSchemaCardFaceEvent(&quot;GameSetupState&quot;, getController().getPlayersList()[i], getController().getPlayersList()[i], schemaCardList.subList(i * 2, i * 2 + 2).toArray(new SchemaCard[2]));
        controller.dispatchEvent(toDispatchEvent);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iy61QIB2EeiyN7Yq9bqbrA" name="syncPlayer" specification="_Iy6OMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (getModel().getPlayerSchemacardFace(playerName) == null) {
        for (int i = 0; i &lt; getController().getPlayersList().length; i++) {
            if (getController().getPlayersList()[i].equals(playerName)) {
                Event toDispatchEvent = new AskSchemaCardFaceEvent(&quot;GameSetupState&quot;, getController().getPlayersList()[i], getController().getPlayersList()[i], schemaCardList.subList(i * 2, i * 2 + 2).toArray(new SchemaCard[2]));
                getController().dispatchEvent(toDispatchEvent);
            }
        }
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iy8qcIB2EeiyN7Yq9bqbrA" name="handleSchemaCardSelectedEvent" specification="_Iy7cUYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(getClass().getCanonicalName() + &quot; handling SchemaCardSelectEvent&quot;);
    int playerIndex = -1;
    for (int i = 0; i &lt; getController().getPlayersList().length; i++) {
        if (getController().getPlayersList()[i].equals(event.getPlayerName())) {
            playerIndex = i;
            break;
        }
    }
    if (playerIndex == -1)
        throw new IllegalArgumentException(&quot;Player not found: &quot; + event.getPlayerName());
    getModel().setPlayerSchema(event.getPlayerName(), schemaCardList.get(playerIndex * 2 + event.getSchemaCardId()).getFace(event.getSide()));
    // Sends the appropriate combination of &lt;Player, Schema> to the view.
    getController().dispatchEvent(new SchemaChangedEvent(this.getClass().getName(), &quot;&quot;, event.getPlayerName(), new Schema(schemaCardList.get(playerIndex * 2 + event.getSchemaCardId()).getFace(event.getSide()))));
    getController().dispatchEvent(new LogEvent(this.getClass().getName(), event.getPlayerName(), &quot;&quot;, event.getPlayerName() + &quot; has selected &quot; + schemaCardList.get(playerIndex * 2 + event.getSchemaCardId()).getFace(event.getSide()).getName() + &quot;!&quot;));
    if (getModel().allPlayersHaveSelectedSchemaCardFace()) {
        return new TurnState(getController(), getModel(), false, false);
    }
    return this;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iy94kIB2EeiyN7Yq9bqbrA" name="handleUserTimeOutEvent" specification="_Iy8qcYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(getClass().getCanonicalName() + &quot; handling UserTimeoutEvent&quot;);
    for (int i = 0; i &lt; getController().getPlayersList().length; i++) {
        if (getModel().getPlayerSchemacardFace(getController().getPlayersList()[i]) == null) {
            //here the player does not have any schemacardface selected, selects the first card
            String player = getController().getPlayersList()[i];
            SchemaCardFace schema = schemaCardList.get(i * 2).getFace(Math.random() > 0.5 ? Side.FRONT : Side.BACK);
            getModel().setPlayerSchema(player, schema);
            // Send the event to the view.
            getController().dispatchEvent(new SchemaChangedEvent(this.getClass().getName(), &quot;&quot;, player, new Schema(schema)));
        }
    }
    return new TurnState(getController(), getModel(), false, false);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iy2j04B2EeiyN7Yq9bqbrA" name="GameSetupState" visibility="public" method="_Iy5AEYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iy4ZAIB2EeiyN7Yq9bqbrA" name="controller" type="_ItgJwIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iy5AEIB2EeiyN7Yq9bqbrA" name="model" type="_ItwocIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iy6OMIB2EeiyN7Yq9bqbrA" name="syncPlayer" visibility="public" method="_Iy61QIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iy6OMYB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iy7cUYB2EeiyN7Yq9bqbrA" name="handleSchemaCardSelectedEvent" visibility="public" method="_Iy8qcIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iy8DYIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iy8DYYB2EeiyN7Yq9bqbrA" name="event" type="_Iy7cUIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iy8qcYB2EeiyN7Yq9bqbrA" name="handleUserTimeOutEvent" visibility="public" method="_Iy94kIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iy9RgIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_IuQXsIB2EeiyN7Yq9bqbrA" name="PublicObjective"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_Iuck8IB2EeiyN7Yq9bqbrA" name="Event"/>
              <packagedElement xmi:type="uml:Package" xmi:id="_IukgwIB2EeiyN7Yq9bqbrA" name="controllerEvent">
                <packagedElement xmi:type="uml:Class" xmi:id="_IulH0IB2EeiyN7Yq9bqbrA" name="ViewPlayerTimeoutEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Iulu4IB2EeiyN7Yq9bqbrA" general="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iur1gIB2EeiyN7Yq9bqbrA" name="ViewPlayerTimeoutEvent" specification="_IumV8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, receiver, player);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuwG8IB2EeiyN7Yq9bqbrA" name="ViewPlayerTimeoutEvent" specification="_IusckIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IuyjMIB2EeiyN7Yq9bqbrA" name="visit" specification="_IuwuAIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return state.handleUserTimeOutEvent();
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IumV8IB2EeiyN7Yq9bqbrA" name="ViewPlayerTimeoutEvent" visibility="public" method="_Iur1gIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuqAUIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuqnYIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IurOcIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IusckIB2EeiyN7Yq9bqbrA" name="ViewPlayerTimeoutEvent" visibility="public" method="_IuwG8IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iuvf4IB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IuwuAIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IuyjMIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IuxVEIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iux8IIB2EeiyN7Yq9bqbrA" name="state" type="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Iu0YYIB2EeiyN7Yq9bqbrA" name="AskSchemaCardFaceEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Iu1mgIB2EeiyN7Yq9bqbrA" general="_Iu0_cIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Iu20oIB2EeiyN7Yq9bqbrA" name="schemas" visibility="private" type="_Iu2NkYB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Iu20oYB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Iu20ooB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iu9iUYB2EeiyN7Yq9bqbrA" name="AskSchemaCardFaceEvent" specification="_Iu20o4B2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.schemas = schemas;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvBzwIB2EeiyN7Yq9bqbrA" name="AskSchemaCardFaceEvent" specification="_Iu-wcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    schemas = new SchemaCard[2];
    JSONObject jsonObject = new JSONObject(json);
    schemas[0] = SchemaCard.loadSchemaCardFromJsonObj(jsonObject.getJSONArray(&quot;schemas&quot;).getJSONObject(0));
    schemas[1] = SchemaCard.loadSchemaCardFromJsonObj(jsonObject.getJSONArray(&quot;schemas&quot;).getJSONObject(1));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvCa0IB2EeiyN7Yq9bqbrA" name="getSchemas" specification="_IvBzwYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return schemas;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvDB4YB2EeiyN7Yq9bqbrA" name="visit" specification="_IvCa0oB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvE3EIB2EeiyN7Yq9bqbrA" name="visit" specification="_IvDo8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvGsQYB2EeiyN7Yq9bqbrA" name="visit" specification="_IvGFMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    selectSchemaCardFace.showSchemaCardFaceSelection(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvK9sYB2EeiyN7Yq9bqbrA" name="toJSON" specification="_IvHTUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    JSONObject jsonObject = super.toJSON();
    ArrayList&lt;JSONObject> schemasJson = new ArrayList&lt;>();
    Arrays.stream(schemas).forEach( schemaCard -> schemasJson.add(schemaCard.toJsonObj()));
    jsonObject.put(&quot;schemas&quot;, schemasJson);
    return jsonObject;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iu20o4B2EeiyN7Yq9bqbrA" name="AskSchemaCardFaceEvent" visibility="public" method="_Iu9iUYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iu7GEIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iu7tIIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iu8UMIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iu87QIB2EeiyN7Yq9bqbrA" name="schemas" type="_Iu2NkYB2EeiyN7Yq9bqbrA">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Iu87QYB2EeiyN7Yq9bqbrA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Iu9iUIB2EeiyN7Yq9bqbrA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iu-wcIB2EeiyN7Yq9bqbrA" name="AskSchemaCardFaceEvent" visibility="public" method="_IvBzwIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvBMsIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvBzwYB2EeiyN7Yq9bqbrA" name="getSchemas" visibility="public" method="_IvCa0IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvBzwoB2EeiyN7Yq9bqbrA" type="_Iu2NkYB2EeiyN7Yq9bqbrA" direction="return">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_IvBzw4B2EeiyN7Yq9bqbrA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IvBzxIB2EeiyN7Yq9bqbrA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvCa0oB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IvDB4YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvDB4IB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvDo8IB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IvE3EIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvEQAIB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvGFMIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IvGsQYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvGsQIB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvHTUIB2EeiyN7Yq9bqbrA" name="toJSON" visibility="public" method="_IvK9sYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvK9sIB2EeiyN7Yq9bqbrA" type="_IvIhcoB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Iu0_cIB2EeiyN7Yq9bqbrA" name="ControllerEvent" visibility="public" isAbstract="true">
                  <generalization xmi:type="uml:Generalization" xmi:id="_IvMy4oB2EeiyN7Yq9bqbrA" general="_IvMy4YB2EeiyN7Yq9bqbrA"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_IvNZ8IB2EeiyN7Yq9bqbrA" name="ControllerEvent implements VisitableFromView" client="_Iu0_cIB2EeiyN7Yq9bqbrA" supplier="_IvMy44B2EeiyN7Yq9bqbrA" contract="_IvMy44B2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvSScYB2EeiyN7Yq9bqbrA" name="ControllerEvent" specification="_IvOoEIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvVVwYB2EeiyN7Yq9bqbrA" name="ControllerEvent" specification="_IvSScoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvOoEIB2EeiyN7Yq9bqbrA" name="ControllerEvent" visibility="protected" method="_IvSScYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvREUIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvRrYIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvSScIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvSScoB2EeiyN7Yq9bqbrA" name="ControllerEvent" visibility="protected" method="_IvVVwYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvVVwIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_IvXyAIB2EeiyN7Yq9bqbrA" name="EndGameEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_IvXyAYB2EeiyN7Yq9bqbrA" general="_Iu0_cIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_IvYZEYB2EeiyN7Yq9bqbrA" name="leaderBoard" visibility="private" type="_IvYZEIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_IvZAIIB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IvZAIYB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvefsIB2EeiyN7Yq9bqbrA" name="EndGameEvent" specification="_IvZnMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.leaderBoard = leaderBoard;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvixIIB2EeiyN7Yq9bqbrA" name="EndGameEvent" specification="_IvfGwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    leaderBoard = new ArrayList&lt;>();
    JSONArray leaderBoardJson = new JSONObject(json).getJSONArray(&quot;leaderBoard&quot;);
    for (int i = 0; i &lt; leaderBoardJson.length(); i++) {
        leaderBoard.add(new ScoreHolder(leaderBoardJson.getJSONObject(i)));
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvkmUYB2EeiyN7Yq9bqbrA" name="getLeaderBoard" specification="_IvjYMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return leaderBoard;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ivl0cYB2EeiyN7Yq9bqbrA" name="visit" specification="_IvlNYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvnpoIB2EeiyN7Yq9bqbrA" name="visit" specification="_IvmbgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    gameEnding.handleEndGameEvent(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ivpe0IB2EeiyN7Yq9bqbrA" name="visit" specification="_IvoQsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvZnMIB2EeiyN7Yq9bqbrA" name="EndGameEvent" visibility="public" method="_IvefsIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvcDcIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvcqgIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvdRkIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvdRkYB2EeiyN7Yq9bqbrA" name="leaderBoard" type="_IvYZEIB2EeiyN7Yq9bqbrA">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Ivd4oIB2EeiyN7Yq9bqbrA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ivd4oYB2EeiyN7Yq9bqbrA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvfGwIB2EeiyN7Yq9bqbrA" name="EndGameEvent" visibility="public" method="_IvixIIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IviKEIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvjYMIB2EeiyN7Yq9bqbrA" name="getLeaderBoard" visibility="public" method="_IvkmUYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvjYMYB2EeiyN7Yq9bqbrA" type="_IvYZEIB2EeiyN7Yq9bqbrA" direction="return">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Ivj_QIB2EeiyN7Yq9bqbrA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IvkmUIB2EeiyN7Yq9bqbrA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvlNYIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_Ivl0cYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ivl0cIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvmbgIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IvnpoIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvnCkIB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvoQsIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_Ivpe0IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ivo3wIB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Ivqs8IB2EeiyN7Yq9bqbrA" name="PlayerTimeoutEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Ivqs8YB2EeiyN7Yq9bqbrA" general="_Iu0_cIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvuXUYB2EeiyN7Yq9bqbrA" name="PlayerTimeoutEvent" specification="_Ivqs8oB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvyBsIB2EeiyN7Yq9bqbrA" name="PlayerTimeoutEvent" specification="_IvvlcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IvzP0YB2EeiyN7Yq9bqbrA" name="visit" specification="_IvyowIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    gameTable.handlePlayerTimeout(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ivz24YB2EeiyN7Yq9bqbrA" name="visit" specification="_IvzP0oB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iv0d8YB2EeiyN7Yq9bqbrA" name="visit" specification="_Ivz24oB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Ivqs8oB2EeiyN7Yq9bqbrA" name="PlayerTimeoutEvent" visibility="public" method="_IvuXUYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvtJMIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvtwQIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvuXUIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvvlcIB2EeiyN7Yq9bqbrA" name="PlayerTimeoutEvent" visibility="public" method="_IvyBsIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvxaoIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvyowIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IvzP0YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IvzP0IB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IvzP0oB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_Ivz24YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Ivz24IB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Ivz24oB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_Iv0d8YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iv0d8IB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Iv1sEIB2EeiyN7Yq9bqbrA" name="TimeoutCommunicationEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Iv1sEYB2EeiyN7Yq9bqbrA" general="_Iu0_cIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Iv2TIIB2EeiyN7Yq9bqbrA" name="timeout" visibility="private" isLeaf="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iv7ysIB2EeiyN7Yq9bqbrA" name="TimeoutCommunicationEvent" specification="_Iv26MIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.timeout = timeout;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iv_dEIB2EeiyN7Yq9bqbrA" name="TimeoutCommunicationEvent" specification="_Iv8ZwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    this.timeout = new JSONObject(json).getInt(&quot;timeout&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iv_dE4B2EeiyN7Yq9bqbrA" name="visit" specification="_Iv_dEYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    gameTable.handleTimeoutCommunication(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwArMIB2EeiyN7Yq9bqbrA" name="visit" specification="_IwAEIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwB5UIB2EeiyN7Yq9bqbrA" name="visit" specification="_IwBSQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    selectSchemaCardFace.handleTimeoutCommunication(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwDHcIB2EeiyN7Yq9bqbrA" name="getTimeout" specification="_IwCgYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return timeout;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iv26MIB2EeiyN7Yq9bqbrA" name="TimeoutCommunicationEvent" visibility="public" method="_Iv7ysIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iv59gIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iv59gYB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iv6kkIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iv7LoIB2EeiyN7Yq9bqbrA" name="timeout">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iv8ZwIB2EeiyN7Yq9bqbrA" name="TimeoutCommunicationEvent" visibility="public" method="_Iv_dEIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iv-2AIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iv_dEYB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_Iv_dE4B2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iv_dEoB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwAEIIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IwArMIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwAEIYB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwBSQIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IwB5UIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwBSQYB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwCgYIB2EeiyN7Yq9bqbrA" name="getTimeout" visibility="public" method="_IwDHcIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwCgYYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_IwEVkIB2EeiyN7Yq9bqbrA" name="AskPlaceRedrawDiceEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_IwE8oIB2EeiyN7Yq9bqbrA" general="_Iu0_cIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_IwE8oYB2EeiyN7Yq9bqbrA" name="diceIndex" visibility="private" isLeaf="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwJ1IYB2EeiyN7Yq9bqbrA" name="AskPlaceRedrawDiceEvent" specification="_IwGKwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.diceIndex = diceIndex;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwNfgIB2EeiyN7Yq9bqbrA" name="AskPlaceRedrawDiceEvent" specification="_IwLDQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    diceIndex = new JSONObject(json).getInt(&quot;diceIndex&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwOtoIB2EeiyN7Yq9bqbrA" name="getDiceIndex" specification="_IwOGkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return diceIndex;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwP7wIB2EeiyN7Yq9bqbrA" name="visit" specification="_IwPUsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    gameTable.handleAskPlaceRedrawDice(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwRJ4IB2EeiyN7Yq9bqbrA" name="visit" specification="_IwQi0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwSYAIB2EeiyN7Yq9bqbrA" name="visit" specification="_IwRw8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwGKwIB2EeiyN7Yq9bqbrA" name="AskPlaceRedrawDiceEvent" visibility="public" method="_IwJ1IYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwInAIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwInAYB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwJOEIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwJ1IIB2EeiyN7Yq9bqbrA" name="diceIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwLDQIB2EeiyN7Yq9bqbrA" name="AskPlaceRedrawDiceEvent" visibility="public" method="_IwNfgIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwM4cIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwOGkIB2EeiyN7Yq9bqbrA" name="getDiceIndex" visibility="public" method="_IwOtoIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwOGkYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwPUsIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IwP7wIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwPUsYB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwQi0IB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IwRJ4IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwQi0YB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwRw8IB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IwSYAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwRw8YB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_IwTmIIB2EeiyN7Yq9bqbrA" name="GameStartEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_IwUNMIB2EeiyN7Yq9bqbrA" general="_Iu0_cIB2EeiyN7Yq9bqbrA"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_IwUNMYB2EeiyN7Yq9bqbrA" name="GameStartEvent implements VisitableFromView" client="_IwTmIIB2EeiyN7Yq9bqbrA" supplier="_IvMy44B2EeiyN7Yq9bqbrA" contract="_IvMy44B2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwYeoYB2EeiyN7Yq9bqbrA" name="GameStartEvent" specification="_IwU0QIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwZswYB2EeiyN7Yq9bqbrA" name="visit" specification="_IwZFsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(&quot;Expected to call handleGameStart on &quot; + gameTable.getClass().getName());
    Log.d(gameTable.getClass().getName());
    gameTable.handleGameStart(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwcwEYB2EeiyN7Yq9bqbrA" name="GameStartEvent" specification="_IwaT0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iwd-MYB2EeiyN7Yq9bqbrA" name="visit" specification="_IwdXIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwelQoB2EeiyN7Yq9bqbrA" name="visit" specification="_IwelQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwU0QIB2EeiyN7Yq9bqbrA" name="GameStartEvent" visibility="public" method="_IwYeoYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwXQgIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwX3kIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwYeoIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwZFsIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IwZswYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwZswIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwaT0IB2EeiyN7Yq9bqbrA" name="GameStartEvent" visibility="public" method="_IwcwEYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwcwEIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwdXIIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_Iwd-MYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iwd-MIB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwelQIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IwelQoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwelQYB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_IwfzYIB2EeiyN7Yq9bqbrA" name="AskPlaceRedrawDiceWithNumberSelectionEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_IwgacIB2EeiyN7Yq9bqbrA" general="_Iu0_cIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_IwhBgIB2EeiyN7Yq9bqbrA" name="diceIndex" visibility="private" isLeaf="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iwl6AIB2EeiyN7Yq9bqbrA" name="AskPlaceRedrawDiceWithNumberSelectionEvent" specification="_IwhokIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.diceIndex = diceIndex;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwqLcIB2EeiyN7Yq9bqbrA" name="AskPlaceRedrawDiceWithNumberSelectionEvent" specification="_IwmhEIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    diceIndex = new JSONObject(json).getInt(&quot;diceIndex&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwrZkIB2EeiyN7Yq9bqbrA" name="getDiceIndex" specification="_IwqygIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return diceIndex;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwsnsYB2EeiyN7Yq9bqbrA" name="visit" specification="_IwsAoIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    gameTable.handleAskPlaceRedrawDiceWithNumberSelection(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iwuc4IB2EeiyN7Yq9bqbrA" name="visit" specification="_IwtOwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IwvrAYB2EeiyN7Yq9bqbrA" name="visit" specification="_IwvD8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwhokIB2EeiyN7Yq9bqbrA" name="AskPlaceRedrawDiceWithNumberSelectionEvent" visibility="public" method="_Iwl6AIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwkE0IB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iwkr4IB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwlS8IB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwlS8YB2EeiyN7Yq9bqbrA" name="diceIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwmhEIB2EeiyN7Yq9bqbrA" name="AskPlaceRedrawDiceWithNumberSelectionEvent" visibility="public" method="_IwqLcIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwpkYIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwqygIB2EeiyN7Yq9bqbrA" name="getDiceIndex" visibility="public" method="_IwrZkIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwqygYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwsAoIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IwsnsYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwsnsIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwtOwIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_Iwuc4IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iwt10IB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IwvD8IB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IwvrAYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IwvrAIB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_IwxgMIB2EeiyN7Yq9bqbrA" name="LogEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_IwyHQIB2EeiyN7Yq9bqbrA" general="_Iu0_cIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_IwyuUIB2EeiyN7Yq9bqbrA" name="message" visibility="private" isLeaf="true" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_IwzVYIB2EeiyN7Yq9bqbrA" name="timestamp" visibility="private" isLeaf="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_8heigBydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iw408YB2EeiyN7Yq9bqbrA" name="LogEvent" specification="_Iw0jgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.message = message;
    this.timestamp = System.currentTimeMillis();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iw8fUIB2EeiyN7Yq9bqbrA" name="LogEvent" specification="_Iw5cAIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    JSONObject jsonObject = new JSONObject(json);
    message = jsonObject.getString(&quot;message&quot;);
    timestamp = jsonObject.getLong(&quot;timestamp&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iw9tcYB2EeiyN7Yq9bqbrA" name="visit" specification="_Iw9GYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    gameTable.handleLogEvent(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iw-7kYB2EeiyN7Yq9bqbrA" name="visit" specification="_Iw-UgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxAJsYB2EeiyN7Yq9bqbrA" name="visit" specification="_Iw_ioIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    selectSchemaCardFace.handleLogEvent(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxBX0YB2EeiyN7Yq9bqbrA" name="getMessage" specification="_IxAwwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return message;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IxCl8IB2EeiyN7Yq9bqbrA" name="getTimestamp" specification="_IxB-4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return timestamp;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iw0jgIB2EeiyN7Yq9bqbrA" name="LogEvent" visibility="public" method="_Iw408YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iw2_wIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iw3m0IB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iw4N4IB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iw408IB2EeiyN7Yq9bqbrA" name="message" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iw5cAIB2EeiyN7Yq9bqbrA" name="LogEvent" visibility="public" method="_Iw8fUIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iw74QIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iw9GYIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_Iw9tcYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iw9tcIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iw-UgIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_Iw-7kYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iw-7kIB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Iw_ioIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_IxAJsYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxAJsIB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxAwwIB2EeiyN7Yq9bqbrA" name="getMessage" visibility="public" method="_IxBX0YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxBX0IB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_IxB-4IB2EeiyN7Yq9bqbrA" name="getTimestamp" visibility="public" method="_IxCl8IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_IxB-4YB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_8heigBydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_ItwBYIB2EeiyN7Yq9bqbrA" name="model">
              <packagedElement xmi:type="uml:Class" xmi:id="_ItwocIB2EeiyN7Yq9bqbrA" name="GameTableMultiplayer" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_I0kbEYB2EeiyN7Yq9bqbrA" general="_I0kbEIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_I0lpMIB2EeiyN7Yq9bqbrA" name="publicObjectives" visibility="private" isLeaf="true" type="_I0lCIIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_I0mQQIB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_I0mQQYB2EeiyN7Yq9bqbrA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_I0m3UIB2EeiyN7Yq9bqbrA" name="players" visibility="private" isLeaf="true" type="_Izv7sIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_I0neYIB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_I0neYYB2EeiyN7Yq9bqbrA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_I0oFcIB2EeiyN7Yq9bqbrA" name="toolCards" visibility="private" isLeaf="true" type="_I0RgIIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_I0osgIB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_I0osgYB2EeiyN7Yq9bqbrA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_I0pTkIB2EeiyN7Yq9bqbrA" name="draftBoard" visibility="private" isLeaf="true" type="_IzSBoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_I0p6oIB2EeiyN7Yq9bqbrA" name="diceHolder" visibility="private" isLeaf="true" type="_I0BBcIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_I0qhsIB2EeiyN7Yq9bqbrA" name="turnHolder" visibility="private" isLeaf="true" type="_Iy_twIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_I0rv0IB2EeiyN7Yq9bqbrA" name="playersName" visibility="private" isLeaf="true" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_I0sW4IB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_I0sW4YB2EeiyN7Yq9bqbrA" value="*"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_I0vaMIB2EeiyN7Yq9bqbrA" name="dropTurnPlayers" visibility="private" type="_I0s98IB2EeiyN7Yq9bqbrA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_I0wBQIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new ArrayList&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I02H4IB2EeiyN7Yq9bqbrA" name="GameTableMultiplayer" specification="_I0woUIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    ArrayList&lt;PrivateObjective> privateObjectives = new ArrayList&lt;>();
    playersName = players.clone();
    this.publicObjectives = publicObjectives;
    ArrayList&lt;Player> playersList = new ArrayList&lt;>();
    Arrays.stream(players).forEach(( playerName) -> {
        playersList.add(new Player(playerName));
    });
    for (GameColor gc : GameColor.values()) {
        privateObjectives.add(new PrivateObjective(gc));
    }
    Collections.shuffle(privateObjectives);
    playersList.forEach( player -> {
        player.setPrivateObjective(privateObjectives.get(0));
        privateObjectives.remove(0);
    });
    this.players = playersList.toArray(new Player[0]);
    turnHolder = new TurnHolder(players.length);
    this.toolCards = new Tool[Settings.TOOLCARDS_N];
    for (int i = 0; i &lt; Settings.TOOLCARDS_N; i++) {
        this.toolCards[i] = new Tool(toolCards[i]);
    }
    draftBoard = new DraftBoard();
    diceHolder = new DiceHolder();
    // The first time the dices are drawn, does it make sense to draw it in the constructor?
    draftBoard.drawDices(this.players.length);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I039EIB2EeiyN7Yq9bqbrA" name="sync" specification="_I02u8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    dispatchEvent(new DraftBoardChangedEvent(this.getClass().getName() + &quot;::gameStart&quot;, playerName, &quot;&quot;, this.draftBoard.getImmutableInstance()));
    for (int i = 0; i &lt; Settings.POBJECTIVES_N; i++) {
        dispatchEvent(new PublicObjectiveEvent(this.getClass().getName() + &quot;::gameStart&quot;, playerName, &quot;&quot;, this.publicObjectives[i], i));
    }
    for (int i = 0; i &lt; Settings.TOOLCARDS_N; i++) {
        dispatchEvent(new ToolCardChangedEvent(this.getClass().getName() + &quot;::gameStart&quot;, playerName, &quot;&quot;, new ToolCardImmutable(this.toolCards[i].getName(), this.toolCards[i].getToken()), i));
    }
    for (int i = 0; i &lt; this.players.length; i++) {
        dispatchEvent(new PlayerChangedEvent(this.getClass().getName() + &quot;::gameStart&quot;, playerName, this.players[i].getName(), this.players[i].getImmutableInstance()));
    }
    for (int i = 0; i &lt; this.players.length; i++) {
        dispatchEvent(new SchemaChangedEvent(this.getClass().getName() + &quot;::gameStart&quot;, playerName, this.players[i].getName(), this.players[i].getSchema()));
    }
    dispatchEvent(new DiceHolderChangedEvent(this.getClass().getName() + &quot;::gameStart&quot;, playerName, &quot;&quot;, diceHolder.getImmutableInstance()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I05LMIB2EeiyN7Yq9bqbrA" name="getCurrentPlayer" specification="_I04kIIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return players[turnHolder.getCurrentPlayer()];
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I06ZUIB2EeiyN7Yq9bqbrA" name="getCurrentPlayerName" specification="_I05yQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return getCurrentPlayer().getName();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I07AYIB2EeiyN7Yq9bqbrA" name="getPlayerByName" specification="_I06ZUYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    for (Player p : players) {
        if (p.getName().equals(name)) {
            return p;
        }
    }
    throw new NoSuchElementException();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I07ncIB2EeiyN7Yq9bqbrA" name="getToolCardByPosition" specification="_I07AYYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (position &lt; 0 || position >= toolCards.length)
        throw new IllegalArgumentException(getClass().getCanonicalName() + &quot;: position must be >=0 and &lt;3, given &quot; + position);
    return toolCards[position];
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I0-DsIB2EeiyN7Yq9bqbrA" name="getPublicObjectiveCardByPosition" specification="_I081kIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (position &lt; 0 || position >= toolCards.length)
        throw new IllegalArgumentException(getClass().getCanonicalName() + &quot;: position must be >=0 and &lt;3, given &quot; + position);
    return publicObjectives[position];
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I0_44IB2EeiyN7Yq9bqbrA" name="computeAllScores" specification="_I0-qwIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    ArrayList&lt;ScoreHolder> scoreHolders = new ArrayList&lt;>();
    Arrays.stream(this.players).forEach( player -> {
        scoreHolders.add(new ScoreHolder(player.getName(), player.computeScoreFromPrivateObjective(), this.computePublicObjectivesScore(player.getSchema()), player.getToken(), player.computeFreeSpaces(), this.getPlayerPosition(player.getName())));
    });
    return scoreHolders;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1BuEYB2EeiyN7Yq9bqbrA" name="getPlayerPosition" specification="_I1Af8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    for (int i = 0; i &lt; this.players.length; i++) {
        if (this.players[i].getName().equals(playerName))
            return i;
    }
    throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: No player with that name!&quot;);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1C8MYB2EeiyN7Yq9bqbrA" name="computePublicObjectivesScore" specification="_I1CVIIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    int publicObjectivesScore = 0;
    for (PublicObjective puo : this.publicObjectives) {
        publicObjectivesScore += puo.computeScore(schema);
    }
    return publicObjectivesScore;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1ExYYB2EeiyN7Yq9bqbrA" name="getPlayerToken" specification="_I1DjQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return getPlayerByName(playerName).getToken();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1KQ8IB2EeiyN7Yq9bqbrA" name="placeDice" specification="_I1IbwIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    Player p = getPlayerByName(playerName);
    DiceFace df = draftBoard.removeDice(diceIndex);
    p.getSchema().setDiceFace(point, df);
    dispatchEvent(new SchemaChangedEvent(&quot;placeDice&quot;, &quot;&quot;, playerName, p.getSchema().cloneSchema()));
    dispatchEvent(new DraftBoardChangedEvent(&quot;placeDice&quot;, &quot;&quot;, playerName, draftBoard.getImmutableInstance()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1MGIYB2EeiyN7Yq9bqbrA" name="useTokenOnToolcard" specification="_I1K4AIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    Player p = getPlayerByName(player);
    Tool toolCard = this.getToolCardByPosition(index);
    int neededToken = toolCard.getNeededTokens();
    p.setToken(p.getToken() - neededToken);
    toolCard.addToken(neededToken);
    dispatchEvent(new ToolCardChangedEvent(&quot;useTokenOnToolcard&quot;, &quot;&quot;, player, toolCard.getImmutableInstance(), index));
    dispatchEvent(new PlayerChangedEvent(&quot;useTokenOnToolcard&quot;, &quot;&quot;, player, p.getImmutableInstance()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1OiYIB2EeiyN7Yq9bqbrA" name="increaseDecreaseDice" specification="_I1NUQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (direction != 1 &amp;&amp; direction != -1)
        throw new IllegalArgumentException(getClass().getCanonicalName() + &quot;: direction must be +1 or -1&quot;);
    DiceFace df = draftBoard.getDices()[diceIndex];
    if (direction == 1 &amp;&amp; df.getNumber() == 6) {
        throw new IllegalStateException(getClass().getCanonicalName() + &quot;: cannot increase a 6 dice&quot;);
    }
    if (direction == -1 &amp;&amp; df.getNumber() == 1) {
        throw new IllegalStateException(getClass().getCanonicalName() + &quot;: cannot decrease a 1 dice&quot;);
    }
    draftBoard.removeDice(diceIndex);
    draftBoard.addDice(new DiceFace(df.getColor(), df.getNumber() + direction));
    dispatchEvent(new DraftBoardChangedEvent(&quot;increaseDecreaseDice&quot;, &quot;&quot;, &quot;&quot;, draftBoard.getImmutableInstance()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1Q-oIB2EeiyN7Yq9bqbrA" name="swapDraftDiceWithHolder" specification="_I1PJcIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    DiceFace oldDfDraft = draftBoard.removeDice(draftIndex);
    DiceFace oldDfHolder = diceHolder.removeDice(turn, turnDiceIndex);
    draftBoard.addDice(oldDfHolder);
    diceHolder.addDice(turn, oldDfDraft);
    dispatchEvent(new DraftBoardChangedEvent(&quot;swapDraftDiceWithHolder&quot;, &quot;&quot;, &quot;&quot;, draftBoard.getImmutableInstance()));
    dispatchEvent(new DiceHolderChangedEvent(&quot;swapDraftDiceWithHolder&quot;, &quot;&quot;, &quot;&quot;, diceHolder.getImmutableInstance()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1Sz0YB2EeiyN7Yq9bqbrA" name="redrawDice" specification="_I1RlsIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (index >= this.getDiceNumberOnDraftBoard() || index &lt; 0)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Trying to access an illegal position => &quot; + index);
    return redrawDice(index, true);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1V3IIB2EeiyN7Yq9bqbrA" name="redrawDice" specification="_I1UB8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    DiceFace df = draftBoard.removeDice(index);
    df = new DiceFace(df.getColor(), new Random().nextInt(6) + 1);
    draftBoard.addDice(df);
    if (singal)
        dispatchEvent(new DraftBoardChangedEvent(&quot;redrawDice&quot;, &quot;&quot;, &quot;&quot;, draftBoard.getImmutableInstance()));
    return df;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1XFQIB2EeiyN7Yq9bqbrA" name="redrawAllDice" specification="_I1WeMIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    for (int i = 0; i &lt; draftBoard.getDiceNumber(); i++) {
        redrawDice(0, false);
    }
    dispatchEvent(new DraftBoardChangedEvent(&quot;redrawAllDice&quot;, &quot;&quot;, &quot;&quot;, draftBoard.getImmutableInstance()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1Y6cIB2EeiyN7Yq9bqbrA" name="flipDice" specification="_I1XsUIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (index >= this.getDiceNumberOnDraftBoard() || index &lt; 0)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Trying to access an illegal position => &quot; + index);
    DiceFace df = draftBoard.removeDice(index);
    df = new DiceFace(df.getColor(), 7 - df.getNumber());
    draftBoard.addDice(df);
    dispatchEvent(new DraftBoardChangedEvent(&quot;flipDice&quot;, &quot;&quot;, &quot;&quot;, draftBoard.getImmutableInstance()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1aIkIB2EeiyN7Yq9bqbrA" name="drawDice" specification="_I1ZhgIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (draftBoard.getDiceNumber() > 0) {
        throw new IllegalStateException(&quot;There are still dices on the Draft Board!&quot;);
    }
    draftBoard.drawDices(players.length);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1b9wYB2EeiyN7Yq9bqbrA" name="putBackAndRedrawDice" specification="_I1avoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    draftBoard.putBackDice(index);
    draftBoard.drawSingleDice();
    DiceFace df = draftBoard.getDiceFace(draftBoard.getDiceNumber() - 1);
    dispatchEvent(new DraftBoardChangedEvent(&quot;putBackAndRedrawDice&quot;, &quot;&quot;, &quot;&quot;, draftBoard.getImmutableInstance()));
    return df;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1eaAIB2EeiyN7Yq9bqbrA" name="changeDiceNumber" specification="_I1dL4IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (index &lt; 0 || index >= this.getDiceNumberOnDraftBoard())
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Illegal index: given &quot; + index + &quot; max: &quot; + this.getDiceNumberOnDraftBoard());
    if (number &lt; 1 || number > 6)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Illegal number: given &quot; + number + &quot; bounds: [1, 6]&quot;);
    draftBoard.addDice(new DiceFace(draftBoard.removeDice(index).getColor(), number));
    dispatchEvent(new DraftBoardChangedEvent(&quot;changeDiceNumber&quot;, &quot;&quot;, &quot;&quot;, draftBoard.getImmutableInstance()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1ircIB2EeiyN7Yq9bqbrA" name="moveDice" specification="_I1foIIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    Player p = getPlayerByName(playerName);
    p.getSchema().setDiceFace(destination, p.getSchema().removeDiceFace(source));
    if (lastMove)
        dispatchEvent(new SchemaChangedEvent(&quot;moveDice&quot;, &quot;&quot;, playerName, p.getSchema().cloneSchema()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1j5kYB2EeiyN7Yq9bqbrA" name="hasNextTurn" specification="_I1jSgIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (turnHolder.isGameEnded() &amp;&amp; this.getCurrentPlayerName().equals(playersName[turnHolder.getCurrentPlayer()]))
        return false;
    return true;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1lHsIB2EeiyN7Yq9bqbrA" name="nextTurn" specification="_I1kgoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    int oldRound = turnHolder.getRound();
    turnHolder.nextTurn();
    while (dropTurnPlayers.contains(playersName[turnHolder.getCurrentPlayer()]) &amp;&amp; !turnHolder.isGameEnded()) {
        dropTurnPlayers.remove(playersName[turnHolder.getCurrentPlayer()]);
        turnHolder.nextTurn();
    }
    if (oldRound != turnHolder.getRound()) {
        while (draftBoard.getDiceNumber() > 0) {
            diceHolder.addDice(oldRound, draftBoard.removeDice(0));
        }
    }
/*dispatchEvent(
            new TurnChangedEvent(
                this.getClass().getName() + &quot;: nextTurn()&quot;,
                &quot;&quot;,
                players[turnHolder.getCurrentPlayer()].getName()
                , turnHolder.getRound(), this.isFirstTurnInRound()));*/
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1m84IB2EeiyN7Yq9bqbrA" name="dispatchEvent" specification="_I1luwIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    notify(event);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1qnQYB2EeiyN7Yq9bqbrA" name="isDiceAllowed" specification="_I1nj8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return getPlayerByName(playerName).getSchema().isDiceAllowed(point, diceFace, ignore);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1vfwIB2EeiyN7Yq9bqbrA" name="isAloneDiceAllowed" specification="_I1r1YIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return getPlayerByName(playerName).getSchema().isDiceAllowed(point, diceFace, ignore, true);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1xU8IB2EeiyN7Yq9bqbrA" name="getDiceFaceByIndex" specification="_I1wG0IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return draftBoard.getDiceFace(i);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1zxMIB2EeiyN7Yq9bqbrA" name="setPlayerSchema" specification="_I1yjEIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (schemaCardFace == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Schema cannot be null.&quot;);
    try {
        this.getPlayerByName(playerName);
    } catch (NoSuchElementException e) {
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: No player with that name&quot;);
    }
    if (getPlayerByName(playerName).getSchema() == null) {
        getPlayerByName(playerName).setSchema(new Schema(schemaCardFace));
    } else {
        throw new IllegalStateException(this.getClass().getCanonicalName() + &quot;: schema already set. Cannot set a new schema.&quot;);
    }
    dispatchEvent(new PlayerChangedEvent(getClass().getName() + &quot;setPlayerSchema&quot;, &quot;&quot;, playerName, getPlayerByName(playerName).getImmutableInstance()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I12NcIB2EeiyN7Yq9bqbrA" name="getPlayersName" specification="_I10YQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return playersName.clone();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I13bkIB2EeiyN7Yq9bqbrA" name="allPlayersHaveSelectedSchemaCardFace" specification="_I120gIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    for (Player p : players) {
        if (p.getSchema() == null)
            return false;
    }
    return true;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1530IB2EeiyN7Yq9bqbrA" name="getPlayerDiceFace" specification="_I14CoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return getPlayerByName(player).getSchema().getDiceFace(position);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I16e4YB2EeiyN7Yq9bqbrA" name="isFirstTurnInRound" specification="_I1530YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return turnHolder.isFirstTurnInRound();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I17tAIB2EeiyN7Yq9bqbrA" name="getPlayerSchemaCopy" specification="_I16e4oB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return getPlayerByName(playerName).getSchema().cloneSchema();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I187IYB2EeiyN7Yq9bqbrA" name="isColorInDiceHolder" specification="_I18UEIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return diceHolder.isColorPresent(gameColor);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1-wUIB2EeiyN7Yq9bqbrA" name="playerWillDropTurn" specification="_I1-JQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    for (String pl : playersName) {
        if (pl.equals(player)) {
            dropTurnPlayers.add(player);
            return;
        }
    }
    throw new IllegalArgumentException(&quot;Player does not exist!&quot;);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1_XYIB2EeiyN7Yq9bqbrA" name="getDiceNumberOnDraftBoard" specification="_I1-wUYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return draftBoard.getDiceNumber();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I1_-cIB2EeiyN7Yq9bqbrA" name="getPlayerSchemacardFace" specification="_I1_XYYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    try {
        this.getPlayerByName(playerName);
    } catch (NoSuchElementException e) {
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: &quot; + playerName + &quot; does not exist&quot;);
    }
    return getPlayerByName(playerName).getSchema() == null ? null : getPlayerByName(playerName).getSchema().getSchemaCardFace();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2AlgIB2EeiyN7Yq9bqbrA" name="getRound" specification="_I1_-cYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return turnHolder.getRound();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2BMkYB2EeiyN7Yq9bqbrA" name="onGameStart" specification="_I2BMkIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.sync(&quot;&quot;);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2CasIB2EeiyN7Yq9bqbrA" name="endTurn" specification="_I2BzoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    while (draftBoard.getDiceNumber() > 0) {
        diceHolder.addDice(getRound() - 1, draftBoard.removeDice(0));
    }
    draftBoard.drawDices(this.players.length);
    dispatchEvent(new DraftBoardChangedEvent(getClass().getName() + &quot;::endTurn&quot;, &quot;&quot;, &quot;&quot;, draftBoard.getImmutableInstance()));
    dispatchEvent(new DiceHolderChangedEvent(getClass().getName() + &quot;::endTurn&quot;, &quot;&quot;, &quot;&quot;, diceHolder.getImmutableInstance()));
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I0woUIB2EeiyN7Yq9bqbrA" name="GameTableMultiplayer" visibility="public" method="_I02H4IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0zEkIB2EeiyN7Yq9bqbrA" name="publicObjectives" type="_I0lCIIB2EeiyN7Yq9bqbrA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_I0zEkYB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_I0zroIB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I00SsIB2EeiyN7Yq9bqbrA" name="players" type="_IptO4IB2EeiyN7Yq9bqbrA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_I00SsYB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_I00SsoB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I005wIB2EeiyN7Yq9bqbrA" name="toolCards" type="_IptO4IB2EeiyN7Yq9bqbrA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_I01g0IB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_I01g0YB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I02u8IB2EeiyN7Yq9bqbrA" name="sync" visibility="public" method="_I039EIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I03WAIB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I04kIIB2EeiyN7Yq9bqbrA" name="getCurrentPlayer" visibility="private" method="_I05LMIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I04kIYB2EeiyN7Yq9bqbrA" type="_Izv7sIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I05yQIB2EeiyN7Yq9bqbrA" name="getCurrentPlayerName" visibility="public" method="_I06ZUIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I05yQYB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I06ZUYB2EeiyN7Yq9bqbrA" name="getPlayerByName" visibility="private" method="_I07AYIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I06ZUoB2EeiyN7Yq9bqbrA" type="_Izv7sIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I06ZU4B2EeiyN7Yq9bqbrA" name="name" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I07AYYB2EeiyN7Yq9bqbrA" name="getToolCardByPosition" visibility="public" method="_I07ncIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I07AYoB2EeiyN7Yq9bqbrA" type="_I0RgIIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I07AY4B2EeiyN7Yq9bqbrA" name="position">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I081kIB2EeiyN7Yq9bqbrA" name="getPublicObjectiveCardByPosition" visibility="public" method="_I0-DsIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I081kYB2EeiyN7Yq9bqbrA" type="_I0lCIIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I09coIB2EeiyN7Yq9bqbrA" name="position">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I0-qwIB2EeiyN7Yq9bqbrA" name="computeAllScores" visibility="public" method="_I0_44IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0_R0IB2EeiyN7Yq9bqbrA" type="_I0s98IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1Af8IB2EeiyN7Yq9bqbrA" name="getPlayerPosition" visibility="private" method="_I1BuEYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1BHAIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1BuEIB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1CVIIB2EeiyN7Yq9bqbrA" name="computePublicObjectivesScore" visibility="private" method="_I1C8MYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1CVIYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1C8MIB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1DjQIB2EeiyN7Yq9bqbrA" name="getPlayerToken" visibility="public" method="_I1ExYYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1EKUIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1ExYIB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1IbwIB2EeiyN7Yq9bqbrA" name="placeDice" visibility="public" method="_I1KQ8IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1IbwYB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1JC0IB2EeiyN7Yq9bqbrA" name="diceIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1Jp4IB2EeiyN7Yq9bqbrA" name="point" type="_I1F_gIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1K4AIB2EeiyN7Yq9bqbrA" name="useTokenOnToolcard" visibility="public" method="_I1MGIYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1LfEIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1MGIIB2EeiyN7Yq9bqbrA" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1NUQIB2EeiyN7Yq9bqbrA" name="increaseDecreaseDice" visibility="public" method="_I1OiYIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1NUQYB2EeiyN7Yq9bqbrA" name="diceIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1N7UIB2EeiyN7Yq9bqbrA" name="direction">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1PJcIB2EeiyN7Yq9bqbrA" name="swapDraftDiceWithHolder" visibility="public" method="_I1Q-oIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1PwgIB2EeiyN7Yq9bqbrA" name="draftIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1PwgYB2EeiyN7Yq9bqbrA" name="turn">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1QXkIB2EeiyN7Yq9bqbrA" name="turnDiceIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1RlsIB2EeiyN7Yq9bqbrA" name="redrawDice" visibility="public" method="_I1Sz0YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1SMwIB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1Sz0IB2EeiyN7Yq9bqbrA" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1UB8IB2EeiyN7Yq9bqbrA" name="redrawDice" visibility="private" method="_I1V3IIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1UpAIB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1VQEIB2EeiyN7Yq9bqbrA" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1VQEYB2EeiyN7Yq9bqbrA" name="singal">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1WeMIB2EeiyN7Yq9bqbrA" name="redrawAllDice" visibility="public" method="_I1XFQIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1XsUIB2EeiyN7Yq9bqbrA" name="flipDice" visibility="public" method="_I1Y6cIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1YTYIB2EeiyN7Yq9bqbrA" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1ZhgIB2EeiyN7Yq9bqbrA" name="drawDice" visibility="public" method="_I1aIkIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1avoIB2EeiyN7Yq9bqbrA" name="putBackAndRedrawDice" visibility="public" method="_I1b9wYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1bWsIB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1b9wIB2EeiyN7Yq9bqbrA" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1dL4IB2EeiyN7Yq9bqbrA" name="changeDiceNumber" visibility="public" method="_I1eaAIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1dL4YB2EeiyN7Yq9bqbrA" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1dy8IB2EeiyN7Yq9bqbrA" name="number">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1foIIB2EeiyN7Yq9bqbrA" name="moveDice" visibility="public" method="_I1ircIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1gPMIB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1g2QIB2EeiyN7Yq9bqbrA" name="source" type="_I1F_gIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1hdUIB2EeiyN7Yq9bqbrA" name="destination" type="_I1F_gIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1iEYIB2EeiyN7Yq9bqbrA" name="lastMove">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1jSgIB2EeiyN7Yq9bqbrA" name="hasNextTurn" visibility="public" method="_I1j5kYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1j5kIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1kgoIB2EeiyN7Yq9bqbrA" name="nextTurn" visibility="public" method="_I1lHsIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1luwIB2EeiyN7Yq9bqbrA" name="dispatchEvent" visibility="private" method="_I1m84IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1mV0IB2EeiyN7Yq9bqbrA" name="event" type="_IvMy4YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1nj8IB2EeiyN7Yq9bqbrA" name="isDiceAllowed" visibility="public" method="_I1qnQYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1oLAIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1oyEIB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1pZIIB2EeiyN7Yq9bqbrA" name="point" type="_I1F_gIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1pZIYB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1qnQIB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1r1YIB2EeiyN7Yq9bqbrA" name="isAloneDiceAllowed" visibility="public" method="_I1vfwIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1sccIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1tDgIB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1tqkIB2EeiyN7Yq9bqbrA" name="point" type="_I1F_gIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1uRoIB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1u4sIB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1wG0IB2EeiyN7Yq9bqbrA" name="getDiceFaceByIndex" visibility="public" method="_I1xU8IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1wG0YB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1wt4IB2EeiyN7Yq9bqbrA" name="i">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1yjEIB2EeiyN7Yq9bqbrA" name="setPlayerSchema" visibility="public" method="_I1zxMIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1zKIIB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1zKIYB2EeiyN7Yq9bqbrA" name="schemaCardFace" type="_I1x8AIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I10YQIB2EeiyN7Yq9bqbrA" name="getPlayersName" visibility="public" method="_I12NcIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I10_UIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_I11mYIB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_I11mYYB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I120gIB2EeiyN7Yq9bqbrA" name="allPlayersHaveSelectedSchemaCardFace" visibility="public" method="_I13bkIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I120gYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I14CoIB2EeiyN7Yq9bqbrA" name="getPlayerDiceFace" visibility="public" method="_I1530IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I14psIB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I15QwIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I15QwYB2EeiyN7Yq9bqbrA" name="position" type="_I1F_gIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1530YB2EeiyN7Yq9bqbrA" name="isFirstTurnInRound" visibility="public" method="_I16e4YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I16e4IB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I16e4oB2EeiyN7Yq9bqbrA" name="getPlayerSchemaCopy" visibility="public" method="_I17tAIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I16e44B2EeiyN7Yq9bqbrA" type="_IzxJ0IB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I17F8IB2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I18UEIB2EeiyN7Yq9bqbrA" name="isColorInDiceHolder" visibility="public" method="_I187IYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I18UEYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I187IIB2EeiyN7Yq9bqbrA" name="gameColor" type="_JACEMIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1-JQIB2EeiyN7Yq9bqbrA" name="playerWillDropTurn" visibility="public" method="_I1-wUIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1-JQYB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1-wUYB2EeiyN7Yq9bqbrA" name="getDiceNumberOnDraftBoard" visibility="public" method="_I1_XYIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1-wUoB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1_XYYB2EeiyN7Yq9bqbrA" name="getPlayerSchemacardFace" visibility="public" method="_I1_-cIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1_XYoB2EeiyN7Yq9bqbrA" type="_I1x8AIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1_XY4B2EeiyN7Yq9bqbrA" name="playerName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I1_-cYB2EeiyN7Yq9bqbrA" name="getRound" visibility="public" method="_I2AlgIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I1_-coB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I2BMkIB2EeiyN7Yq9bqbrA" name="onGameStart" visibility="public" method="_I2BMkYB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I2BzoIB2EeiyN7Yq9bqbrA" name="endTurn" visibility="public" method="_I2CasIB2EeiyN7Yq9bqbrA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_Iu2NkIB2EeiyN7Yq9bqbrA" name="schema_card">
                <packagedElement xmi:type="uml:Class" xmi:id="_Iu2NkYB2EeiyN7Yq9bqbrA" name="SchemaCard" visibility="public">
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JBBisYB2EeiyN7Yq9bqbrA" name="schemaCardFaces" visibility="private" type="_I5PfsIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JBBisoB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new EnumMap&lt;>(Side.class)</body>
                    </defaultValue>
                  </ownedAttribute>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JBBisIB2EeiyN7Yq9bqbrA" name="SchemaCard implements Serializable" client="_Iu2NkYB2EeiyN7Yq9bqbrA" supplier="_JA_GcIB2EeiyN7Yq9bqbrA" contract="_JA_GcIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JBD-8YB2EeiyN7Yq9bqbrA" name="SchemaCard" specification="_JBBis4B2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    schemaCardFaces.put(Side.FRONT, front);
    schemaCardFaces.put(Side.BACK, back);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JBKFkIB2EeiyN7Yq9bqbrA" name="loadSchemaCardsFromJson" specification="_JBEmAIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    ArrayList&lt;SchemaCard> list = new ArrayList&lt;>();
    URI defaultFilePath = null;
    // I'm loading the default schema cards
    if (fileName.equals(Settings.getDefaultSchemaCardDatabase())) {
        try {
            defaultFilePath = (new PrivateObjective(GameColor.RED)).getClass().getClassLoader().getResource(Settings.getDefaultSchemaCardDatabase()).toURI();
        } catch (URISyntaxException e) {
            CLIPrinter.printError(&quot;Could not load default Schema Card Database&quot;);
        }
    }
    File jsonFile = null;
    if (defaultFilePath == null) {
        jsonFile = new File(fileName);
    } else {
        jsonFile = new File(defaultFilePath);
    }
    if (!jsonFile.exists())
        throw new FileNotFoundException(SchemaCard.class.getCanonicalName() + &quot;: file does not exist -> &quot; + fileName);
    //let's load the whole string in memory
    //open file and set up reader
    FileInputStream fileInputStream = new FileInputStream(jsonFile);
    BufferedInputStream bufferedInputStream = new BufferedInputStream(fileInputStream);
    StringBuilder builder;
    try (Scanner scanner = new Scanner(bufferedInputStream)) {
        builder = new StringBuilder();
        //read all lines
        while (scanner.hasNextLine()) {
            builder.append(scanner.nextLine());
        }
    }
    //now we have the whole file loaded, let's parse the JSON
    JSONArray jsonArray = new JSONArray(builder.toString());
    for (int i = 0; i &lt; jsonArray.length(); i++) {
        try {
            JSONObject obj = jsonArray.getJSONObject(i);
            list.add(loadSchemaCardFromJsonObj(obj));
        } catch (JSONExceptionIllegalArgumentException |  e) {
            System.err.println(Schema.class.getCanonicalName() + &quot;: cannot load invalid item at position &quot; + i + &quot; &quot; + e);
        }
    }
    // Now I
    if (fileName.equals(Settings.getDefaultSchemaCardDatabase()) &amp;&amp; !Settings.getSchemaCardDatabase().equals(&quot;&quot;)) {
        try {
            list.addAll(SchemaCard.loadSchemaCardsFromJson(Settings.getSchemaCardDatabase()));
        } catch (FileNotFoundExceptionJSONException |  e) {
            CLIPrinter.printError(&quot;Could not load custom schema card file.&quot;);
        }
    }
    return list;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JBL6wYB2EeiyN7Yq9bqbrA" name="loadSchemaCardFromJsonObj" specification="_JBKFkYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    SchemaCardFace front = SchemaCardFace.loadFromJson(obj.getJSONObject(&quot;front&quot;));
    SchemaCardFace back = SchemaCardFace.loadFromJson(obj.getJSONObject(&quot;back&quot;));
    return new SchemaCard(front, back);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JBNI4YB2EeiyN7Yq9bqbrA" name="getFace" specification="_JBMh0YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return schemaCardFaces.get(side);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JBOXAIB2EeiyN7Yq9bqbrA" name="toJsonObj" specification="_JBNv8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    JSONObject jsonObject = new JSONObject();
    jsonObject.put(&quot;front&quot;, schemaCardFaces.get(Side.FRONT).toJsonObject());
    jsonObject.put(&quot;back&quot;, schemaCardFaces.get(Side.FRONT).toJsonObject());
    return jsonObject;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JBBis4B2EeiyN7Yq9bqbrA" name="SchemaCard" visibility="private" method="_JBD-8YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JBDX4IB2EeiyN7Yq9bqbrA" name="front" type="_I1x8AIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JBD-8IB2EeiyN7Yq9bqbrA" name="back" type="_I1x8AIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JBEmAIB2EeiyN7Yq9bqbrA" name="loadSchemaCardsFromJson" visibility="public" isStatic="true" method="_JBKFkIB2EeiyN7Yq9bqbrA" raisedException="_JBF0IYB2EeiyN7Yq9bqbrA _JBHpUIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JBFNEIB2EeiyN7Yq9bqbrA" type="_Iu2NkYB2EeiyN7Yq9bqbrA" direction="return">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JBFNEYB2EeiyN7Yq9bqbrA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JBFNEoB2EeiyN7Yq9bqbrA" value="*"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JBF0IIB2EeiyN7Yq9bqbrA" name="fileName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JBKFkYB2EeiyN7Yq9bqbrA" name="loadSchemaCardFromJsonObj" visibility="public" isStatic="true" method="_JBL6wYB2EeiyN7Yq9bqbrA" raisedException="_JBHpUIB2EeiyN7Yq9bqbrA _JBKsooB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JBKsoIB2EeiyN7Yq9bqbrA" type="_Iu2NkYB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JBKsoYB2EeiyN7Yq9bqbrA" name="obj" type="_IvIhcoB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JBMh0YB2EeiyN7Yq9bqbrA" name="getFace" visibility="public" method="_JBNI4YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JBMh0oB2EeiyN7Yq9bqbrA" type="_I1x8AIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JBNI4IB2EeiyN7Yq9bqbrA" name="side" type="_JEVVYIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JBNv8IB2EeiyN7Yq9bqbrA" name="toJsonObj" visibility="public" method="_JBOXAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JBNv8YB2EeiyN7Yq9bqbrA" type="_IvIhcoB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I1x8AIB2EeiyN7Yq9bqbrA" name="SchemaCardFace" visibility="public">
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JEnpQYB2EeiyN7Yq9bqbrA" name="difficulty" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JEo3YIB2EeiyN7Yq9bqbrA" name="name" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JEo3YYB2EeiyN7Yq9bqbrA" name="cellRestrictions" visibility="private" type="_JAtZoYB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JEpecIB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JEpecYB2EeiyN7Yq9bqbrA" value="*"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JEqFgIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new CellRestriction[Settings.CARD_WIDTH][Settings.CARD_HEIGHT]</body>
                    </defaultValue>
                  </ownedAttribute>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JEnpQIB2EeiyN7Yq9bqbrA" name="SchemaCardFace implements Serializable" client="_I1x8AIB2EeiyN7Yq9bqbrA" supplier="_I4hG8IB2EeiyN7Yq9bqbrA" contract="_I4hG8IB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JEr6sIB2EeiyN7Yq9bqbrA" name="loadFromJson" specification="_JEqskIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int difficulty = obj.optInt(&quot;diff&quot;, -1);
    if (difficulty == -1) {
        difficulty = obj.getInt(&quot;difficulty&quot;);
    }
    String name = obj.getString(&quot;name&quot;);
    JSONArray rows = obj.getJSONArray(&quot;restrictions&quot;);
    if (rows.length() != Settings.CARD_HEIGHT) {
        throw new MalformedSchemaCardFaceException(&quot;The face should be &quot; + Settings.CARD_HEIGHT + &quot; cells height, but this face is &quot; + rows.length() + &quot; cells height!&quot;);
    }
    SchemaCardFace face = new SchemaCardFace(difficulty, name);
    for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
        JSONArray row = rows.getJSONArray(y);
        if (row.length() != Settings.CARD_WIDTH) {
            throw new MalformedSchemaCardFaceException(&quot;The face should be &quot; + Settings.CARD_WIDTH + &quot; cells width, but this face is &quot; + row.length() + &quot; cells width!&quot;);
        }
        for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
            face.setCellRestriction(new Point(x, y), CellRestriction.getRestrictionFromString(row.getString(x)));
        }
    }
    return face;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JEu-AYB2EeiyN7Yq9bqbrA" name="SchemaCardFace" specification="_JEshwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (difficulty &lt;= 0)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: difficulty must be greater than 0!&quot;);
    if (name == null)
        throw new IllegalArgumentException(getClass().getCanonicalName() + &quot;: name cannot be null!&quot;);
    this.difficulty = difficulty;
    this.name = name;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JEyoYIB2EeiyN7Yq9bqbrA" name="setCellRestriction" specification="_JExaQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (restriction == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: restriction cannot be null!&quot;);
    if (point == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: point cannot be null!&quot;);
    //Is this even necessary? It's an internal call and it's assured what checked...
    /*if(point.x &lt;0 || point.x >= Settings.CARD_WIDTH || point.y &lt;0 || point.y >= Settings.CARD_HEIGHT)
            throw new IllegalArgumentException(this.getClass().getCanonicalName()+&quot;: illegal point: &quot;+point.x+&quot;, &quot;+point.y+&quot;!&quot;);*/
    cellRestrictions[point.x][point.y] = restriction;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JE2SwYB2EeiyN7Yq9bqbrA" name="isDiceAllowed" specification="_JE0dkYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (diceFace == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: diceFace cannot be null!&quot;);
    if (ignore == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: ignore field cannot be null!&quot;);
    if (ignore == Ignore.BOTH)
        return true;
    else if (ignore == Ignore.COLOR &amp;&amp; getRestriction(point) instanceof ColorRestriction)
        return true;
    else if (ignore == Ignore.NUMBER &amp;&amp; getRestriction(point) instanceof NumberRestriction)
        return true;
    else
        return getRestriction(point).isDiceAllowed(diceFace);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JE4vAIB2EeiyN7Yq9bqbrA" name="getRestriction" specification="_JE250IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (point == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: point cannot be null!&quot;);
    if (point.x &lt; 0 || point.x >= Settings.CARD_WIDTH || point.y &lt; 0 || point.y >= Settings.CARD_HEIGHT)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: illegal point: &quot; + point.x + &quot;, &quot; + point.y + &quot;!&quot;);
    assert cellRestrictions[point.x][point.y] != null : &quot;cellRestriction is null!&quot;;
    return cellRestrictions[point.x][point.y];
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JE5WEYB2EeiyN7Yq9bqbrA" name="getDifficulty" specification="_JE4vAYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return difficulty;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JE6kMIB2EeiyN7Yq9bqbrA" name="getName" specification="_JE59IIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return name;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JE7yUIB2EeiyN7Yq9bqbrA" name="toJsonObject" specification="_JE7LQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    JSONObject jsonObject = new JSONObject(this);
    JSONArray rows = new JSONArray();
    for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
        JSONArray row = new JSONArray();
        for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
            row.put(getRestriction(new Point(x, y)));
        }
        rows.put(row);
    }
    jsonObject.put(&quot;restrictions&quot;, rows);
    return jsonObject;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JEqskIB2EeiyN7Yq9bqbrA" name="loadFromJson" visibility="public" isStatic="true" method="_JEr6sIB2EeiyN7Yq9bqbrA" raisedException="_JBHpUIB2EeiyN7Yq9bqbrA _JEXKkIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JEqskYB2EeiyN7Yq9bqbrA" type="_I1x8AIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JErToIB2EeiyN7Yq9bqbrA" name="obj" type="_IvIhcoB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JEshwIB2EeiyN7Yq9bqbrA" name="SchemaCardFace" visibility="private" method="_JEu-AYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JEuW8IB2EeiyN7Yq9bqbrA" name="difficulty">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JEu-AIB2EeiyN7Yq9bqbrA" name="name" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JExaQIB2EeiyN7Yq9bqbrA" name="setCellRestriction" visibility="private" method="_JEyoYIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JExaQYB2EeiyN7Yq9bqbrA" name="point" type="_JEvlEIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JEyBUIB2EeiyN7Yq9bqbrA" name="restriction" type="_JAtZoYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JE0dkYB2EeiyN7Yq9bqbrA" name="isDiceAllowed" visibility="public" method="_JE2SwYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JE1EoIB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JE1rsIB2EeiyN7Yq9bqbrA" name="point" type="_JEvlEIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JE1rsYB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JE2SwIB2EeiyN7Yq9bqbrA" name="ignore" type="_JHJ_4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JE250IB2EeiyN7Yq9bqbrA" name="getRestriction" visibility="public" method="_JE4vAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JE3g4IB2EeiyN7Yq9bqbrA" type="_JAtZoYB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JE3g4YB2EeiyN7Yq9bqbrA" name="point" type="_JEvlEIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JE4vAYB2EeiyN7Yq9bqbrA" name="getDifficulty" visibility="public" method="_JE5WEYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JE5WEIB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JE59IIB2EeiyN7Yq9bqbrA" name="getName" visibility="public" method="_JE6kMIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JE59IYB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JE7LQIB2EeiyN7Yq9bqbrA" name="toJsonObject" visibility="public" method="_JE7yUIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JE7LQYB2EeiyN7Yq9bqbrA" type="_IvIhcoB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_JHJ_4IB2EeiyN7Yq9bqbrA" name="Ignore" visibility="public">
                    <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JHLOAIB2EeiyN7Yq9bqbrA" name="BOTH"/>
                    <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JHLOAYB2EeiyN7Yq9bqbrA" name="COLOR"/>
                    <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JHL1EIB2EeiyN7Yq9bqbrA" name="NUMBER"/>
                    <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JHL1EYB2EeiyN7Yq9bqbrA" name="NOTHING"/>
                  </nestedClassifier>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JAtZoIB2EeiyN7Yq9bqbrA" name="NoRestriction" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JAuAsIB2EeiyN7Yq9bqbrA" general="_JAtZoYB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAvO0YB2EeiyN7Yq9bqbrA" name="isDiceAllowed" specification="_JAuAsYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return true;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAwc8YB2EeiyN7Yq9bqbrA" name="toString" specification="_JAv14IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return &quot;&quot;;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAuAsYB2EeiyN7Yq9bqbrA" name="isDiceAllowed" visibility="public" method="_JAvO0YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAunwIB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAvO0IB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAv14IB2EeiyN7Yq9bqbrA" name="toString" visibility="public" method="_JAwc8YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAwc8IB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JAtZoYB2EeiyN7Yq9bqbrA" name="CellRestriction" visibility="public" isAbstract="true">
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JA5m4IB2EeiyN7Yq9bqbrA" name="CellRestriction implements Serializable" client="_JAtZoYB2EeiyN7Yq9bqbrA" supplier="_I4hG8IB2EeiyN7Yq9bqbrA" contract="_I4hG8IB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JA9RQIB2EeiyN7Yq9bqbrA" name="getRestrictionFromString" specification="_JA7cEYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (restr == null)
        throw new IllegalArgumentException(&quot;restr must not be null!&quot;);
    if (restr.equals(&quot;&quot;)) {
        return new NoRestriction();
    }
    Integer integer = null;
    try {
        integer = Integer.parseInt(restr);
    } catch (Exception ignored) {
    }
    if (integer != null) {
        return new NumberRestriction(integer);
    }
    for (GameColor gc : GameColor.values()) {
        if (restr.equals(gc.toString())) {
            return new ColorRestriction(gc);
        }
    }
    throw new IllegalArgumentException(&quot;No restriction found for '&quot; + restr + &quot;'&quot;);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JA6N8IB2EeiyN7Yq9bqbrA" name="isDiceAllowed" visibility="public" isAbstract="true">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JA61AIB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JA7cEIB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JA7cEYB2EeiyN7Yq9bqbrA" name="getRestrictionFromString" visibility="public" isStatic="true" method="_JA9RQIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JA8DIIB2EeiyN7Yq9bqbrA" type="_JAtZoYB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JA8qMIB2EeiyN7Yq9bqbrA" name="restr" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JAxrEIB2EeiyN7Yq9bqbrA" name="ColorRestriction" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JAxrEYB2EeiyN7Yq9bqbrA" general="_JAtZoYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JAySIIB2EeiyN7Yq9bqbrA" name="color" visibility="private" type="_JACEMIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JA18gYB2EeiyN7Yq9bqbrA" name="ColorRestriction" specification="_JAy5MIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (color == null) {
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: color must not be null!&quot;);
    }
    this.color = color;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JA2jkoB2EeiyN7Yq9bqbrA" name="getColor" specification="_JA2jkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return this.color;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JA3Ko4B2EeiyN7Yq9bqbrA" name="isDiceAllowed" specification="_JA3KoIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return diceFace.getColor().equals(color);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JA3xsoB2EeiyN7Yq9bqbrA" name="toString" specification="_JA3xsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return color.toString();
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAy5MIB2EeiyN7Yq9bqbrA" name="ColorRestriction" visibility="public" method="_JA18gYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JA18gIB2EeiyN7Yq9bqbrA" name="color" type="_JACEMIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JA2jkIB2EeiyN7Yq9bqbrA" name="getColor" visibility="public" method="_JA2jkoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JA2jkYB2EeiyN7Yq9bqbrA" type="_JACEMIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JA3KoIB2EeiyN7Yq9bqbrA" name="isDiceAllowed" visibility="public" method="_JA3Ko4B2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JA3KoYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JA3KooB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JA3xsIB2EeiyN7Yq9bqbrA" name="toString" visibility="public" method="_JA3xsoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JA3xsYB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Interface" xmi:id="_JA_GcIB2EeiyN7Yq9bqbrA" name="Serializable"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_JBF0IYB2EeiyN7Yq9bqbrA" name="FileNotFoundException"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_JBKsooB2EeiyN7Yq9bqbrA" name="IllegalArgumentException"/>
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_JEVVYIB2EeiyN7Yq9bqbrA" name="Side" visibility="public">
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JEV8cIB2EeiyN7Yq9bqbrA" name="FRONT"/>
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JEV8cYB2EeiyN7Yq9bqbrA" name="BACK"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JEXKkIB2EeiyN7Yq9bqbrA" name="MalformedSchemaCardFaceException" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JEXKkYB2EeiyN7Yq9bqbrA" general="_JBKsooB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JEZm0IB2EeiyN7Yq9bqbrA" name="MalformedSchemaCardFaceException" specification="_JEXxoIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JEdRMIB2EeiyN7Yq9bqbrA" name="MalformedSchemaCardFaceException" specification="_JEaN4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(s);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JEiJsIB2EeiyN7Yq9bqbrA" name="MalformedSchemaCardFaceException" specification="_JEftcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(message, cause);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JElNAYB2EeiyN7Yq9bqbrA" name="MalformedSchemaCardFaceException" specification="_JEjX0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(cause);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JEXxoIB2EeiyN7Yq9bqbrA" name="MalformedSchemaCardFaceException" visibility="public" method="_JEZm0IB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JEaN4IB2EeiyN7Yq9bqbrA" name="MalformedSchemaCardFaceException" visibility="public" method="_JEdRMIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JEcqIIB2EeiyN7Yq9bqbrA" name="s" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JEftcIB2EeiyN7Yq9bqbrA" name="MalformedSchemaCardFaceException" visibility="public" method="_JEiJsIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JEhioIB2EeiyN7Yq9bqbrA" name="message" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JEhioYB2EeiyN7Yq9bqbrA" name="cause" type="_JEd4QIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JEjX0IB2EeiyN7Yq9bqbrA" name="MalformedSchemaCardFaceException" visibility="public" method="_JElNAYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JElNAIB2EeiyN7Yq9bqbrA" name="cause" type="_JEd4QIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JEvlEIB2EeiyN7Yq9bqbrA" name="Point"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_JHMcIIB2EeiyN7Yq9bqbrA" name="NumberRestriction" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JHNDMIB2EeiyN7Yq9bqbrA" general="_JAtZoYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JHNDMYB2EeiyN7Yq9bqbrA" name="number" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHQGgIB2EeiyN7Yq9bqbrA" name="NumberRestriction" specification="_JHNqQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (number &lt; 1 || number > 6) {
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: number must be between 1 and 6!&quot;);
    }
    this.number = number;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHRUoIB2EeiyN7Yq9bqbrA" name="getNumber" specification="_JHQtkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return this.number;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHSiwIB2EeiyN7Yq9bqbrA" name="isDiceAllowed" specification="_JHRUoYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return (number == diceFace.getNumber());
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHTw4YB2EeiyN7Yq9bqbrA" name="toString" specification="_JHSiwYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return Integer.toString(number);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JHNqQIB2EeiyN7Yq9bqbrA" name="NumberRestriction" visibility="public" method="_JHQGgIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHPfcIB2EeiyN7Yq9bqbrA" name="number">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JHQtkIB2EeiyN7Yq9bqbrA" name="getNumber" visibility="public" method="_JHRUoIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHQtkYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JHRUoYB2EeiyN7Yq9bqbrA" name="isDiceAllowed" visibility="public" method="_JHSiwIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHR7sIB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHR7sYB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JHSiwYB2EeiyN7Yq9bqbrA" name="toString" visibility="public" method="_JHTw4YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHTw4IB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_IxiVMIB2EeiyN7Yq9bqbrA" name="schema">
                <packagedElement xmi:type="uml:Class" xmi:id="_Ixi8QIB2EeiyN7Yq9bqbrA" name="DiceFace" visibility="public">
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I5uA0IB2EeiyN7Yq9bqbrA" name="color" visibility="private" type="_JACEMIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I5un4IB2EeiyN7Yq9bqbrA" name="number" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_I5tZwIB2EeiyN7Yq9bqbrA" name="DiceFace implements Serializable" client="_Ixi8QIB2EeiyN7Yq9bqbrA" supplier="_I4hG8IB2EeiyN7Yq9bqbrA" contract="_I4hG8IB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5y5UIB2EeiyN7Yq9bqbrA" name="DiceFace" specification="_I5vO8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (number &lt; 1 || number > 6) {
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Number must be greater than zero and less than 7, not &quot; + number);
    }
    if (color == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Color cannot be null.&quot;);
    this.color = color;
    this.number = number;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I50ugIB2EeiyN7Yq9bqbrA" name="fromJson" specification="_I5zgYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    GameColor gc = null;
    for (GameColor tempColor : GameColor.values()) {
        if (tempColor.toString().toUpperCase().equals(jsonObject.getString(&quot;color&quot;))) {
            gc = tempColor;
        }
    }
    return new DiceFace(gc, jsonObject.getInt(&quot;number&quot;));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I51VkoB2EeiyN7Yq9bqbrA" name="getColor" specification="_I51VkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return color;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I518oIB2EeiyN7Yq9bqbrA" name="getNumber" specification="_I51Vk4B2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return number;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I52jsIB2EeiyN7Yq9bqbrA" name="isSimilar" specification="_I518oYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (diceFace == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: diceFace cannot be null.&quot;);
    return (this.color.equals(diceFace.getColor()) || this.number == diceFace.getNumber());
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I52js4B2EeiyN7Yq9bqbrA" name="toJSON" specification="_I52jsYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return new JSONObject(this);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5vO8IB2EeiyN7Yq9bqbrA" name="DiceFace" visibility="public" method="_I5y5UIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5xrMIB2EeiyN7Yq9bqbrA" name="color" type="_JACEMIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5ySQIB2EeiyN7Yq9bqbrA" name="number">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5zgYIB2EeiyN7Yq9bqbrA" name="fromJson" visibility="public" isStatic="true" method="_I50ugIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I50HcIB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I50HcYB2EeiyN7Yq9bqbrA" name="jsonObject" type="_IvIhcoB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I51VkIB2EeiyN7Yq9bqbrA" name="getColor" visibility="public" method="_I51VkoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I51VkYB2EeiyN7Yq9bqbrA" type="_JACEMIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I51Vk4B2EeiyN7Yq9bqbrA" name="getNumber" visibility="public" method="_I518oIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I51VlIB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I518oYB2EeiyN7Yq9bqbrA" name="isSimilar" visibility="public" method="_I52jsIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I518ooB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I518o4B2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I52jsYB2EeiyN7Yq9bqbrA" name="toJSON" visibility="public" method="_I52js4B2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I52jsoB2EeiyN7Yq9bqbrA" type="_IvIhcoB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_IzTPwIB2EeiyN7Yq9bqbrA" name="DiceBag" visibility="public">
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I56OEYB2EeiyN7Yq9bqbrA" name="random" visibility="private" type="_I54Y4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I561IIB2EeiyN7Yq9bqbrA" name="counter" visibility="private" type="_I5PfsIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_I561IYB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new EnumMap&lt;>(GameColor.class)</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I561IoB2EeiyN7Yq9bqbrA" name="dicesDrawn" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I59RYIB2EeiyN7Yq9bqbrA" name="DiceBag" specification="_I561I4B2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    for (GameColor gc : GameColor.values()) {
        counter.put(gc, 0);
    }
    random = new Random();
    dicesDrawn = 0;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5_GkIB2EeiyN7Yq9bqbrA" name="drawDice" specification="_I594cIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (dicesDrawn >= Settings.MAX_DICE_PER_COLOR * GameColor.values().length)
        throw new IllegalStateException(this.getClass().getCanonicalName() + &quot;: Attempting to draw one more dice, but already drawn 90&quot;);
    int color = random.nextInt(GameColor.values().length);
    int number = random.nextInt(6) + 1;
    GameColor[] values = GameColor.values();
    while (counter.get(values[color]) >= Settings.MAX_DICE_PER_COLOR) {
        color = random.nextInt(GameColor.values().length);
    }
    counter.put(values[color], counter.get(values[color]) + 1);
    dicesDrawn += 1;
    return new DiceFace(GameColor.values()[color], number);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5_toYB2EeiyN7Yq9bqbrA" name="putBackDice" specification="_I5_GkYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (diceFace == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: diceFace cannot be null.&quot;);
    GameColor actualColor = diceFace.getColor();
    if (counter.get(actualColor) &lt;= 0)
        throw new IllegalStateException(this.getClass().getCanonicalName() + &quot;: Attempting to put back a dice, but no dice of that color has ever been drawn.&quot;);
    if (dicesDrawn &lt;= 0)
        throw new IllegalStateException(this.getClass().getCanonicalName() + &quot;: Attempting to put back a dice, but no dice has ever been drawn.&quot;);
    counter.put(actualColor, counter.get(actualColor) - 1);
    dicesDrawn -= 1;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I561I4B2EeiyN7Yq9bqbrA" name="DiceBag" visibility="public" method="_I59RYIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I594cIB2EeiyN7Yq9bqbrA" name="drawDice" visibility="public" method="_I5_GkIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5-fgIB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5_GkYB2EeiyN7Yq9bqbrA" name="putBackDice" visibility="public" method="_I5_toYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5_toIB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_IzxJ0IB2EeiyN7Yq9bqbrA" name="Schema" visibility="public">
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JAQtsIB2EeiyN7Yq9bqbrA" name="diceFaces" visibility="private" type="_Ixi8QIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JARUwIB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JARUwYB2EeiyN7Yq9bqbrA" value="*"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JAR70IB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new DiceFace[Settings.CARD_WIDTH][Settings.CARD_HEIGHT]</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JAR70YB2EeiyN7Yq9bqbrA" name="schemaCardFace" visibility="private" type="_I1x8AIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JAQGoIB2EeiyN7Yq9bqbrA" name="Schema implements Serializable" client="_IzxJ0IB2EeiyN7Yq9bqbrA" supplier="_I4hG8IB2EeiyN7Yq9bqbrA" contract="_I4hG8IB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAVmMIB2EeiyN7Yq9bqbrA" name="Schema" specification="_JASi4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (schemaCardFace == null)
        throw new IllegalArgumentException(getClass().getCanonicalName() + &quot;: schemaCardFace cannot be null!&quot;);
    this.schemaCardFace = schemaCardFace;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAXbYIB2EeiyN7Yq9bqbrA" name="fromJSON" specification="_JAWNQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Schema schema = new Schema(SchemaCardFace.loadFromJson(jsonObject.getJSONObject(&quot;schemaCardFace&quot;)));
    JSONArray diceFaces = jsonObject.getJSONArray(&quot;diceFaces&quot;);
    for (int y = 0; y &lt; diceFaces.length(); y++) {
        JSONArray row = diceFaces.getJSONArray(y);
        for (int x = 0; x &lt; row.length(); x++) {
            if (!row.isNull(x)) {
                DiceFace diceFace = DiceFace.fromJson(row.getJSONObject(x));
                schema.setDiceFace(new Point(x, y), diceFace);
            }
        }
    }
    return schema;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAbFwYB2EeiyN7Yq9bqbrA" name="getDiceFace" specification="_JAaesIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (point == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: point cannot be null!&quot;);
    if (point.x &lt; 0 || point.x >= Settings.CARD_WIDTH || point.y &lt; 0 || point.y >= Settings.CARD_HEIGHT)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: illegal point: &quot; + point.x + &quot;, &quot; + point.y + &quot;!&quot;);
    return diceFaces[point.x][point.y];
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAc68YB2EeiyN7Yq9bqbrA" name="setDiceFace" specification="_JAcT4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (point == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: point cannot be null!&quot;);
    if (diceFace == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: diceFace cannot be null!&quot;);
    if (point.x &lt; 0 || point.x >= Settings.CARD_WIDTH || point.y &lt; 0 || point.y >= Settings.CARD_HEIGHT)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: illegal point: &quot; + point.x + &quot;, &quot; + point.y + &quot;!&quot;);
    if (diceFaces[point.x][point.y] != null)
        throw new IllegalStateException(getClass().getCanonicalName() + &quot;: cannot put a dice in an already occupied face!&quot;);
    diceFaces[point.x][point.y] = diceFace;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAewIYB2EeiyN7Yq9bqbrA" name="removeDiceFace" specification="_JAdiAIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (diceFaces[point.x][point.y] == null)
        throw new IllegalStateException(getClass().getCanonicalName() + &quot;: cannot remove dice from an empty cell!&quot;);
    DiceFace df = diceFaces[point.x][point.y];
    diceFaces[point.x][point.y] = null;
    return df;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAhzcIB2EeiyN7Yq9bqbrA" name="isDiceAllowed" specification="_JAf-QIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return isDiceAllowed(point, diceFace, ignore, false);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAjBkoB2EeiyN7Yq9bqbrA" name="isDiceAllowed" specification="_JAiagIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (point == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: point cannot be null!&quot;);
    if (diceFace == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: diceFace cannot be null!&quot;);
    if (point.x &lt; 0 || point.x >= Settings.CARD_WIDTH || point.y &lt; 0 || point.y >= Settings.CARD_HEIGHT)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: illegal point: &quot; + point.x + &quot;, &quot; + point.y + &quot;!&quot;);
    if (diceFaces[point.x][point.y] != null)
        return false;
    if (!schemaCardFace.isDiceAllowed(point, diceFace, ignore))
        return false;
    if (forceLoneliness) {
        return !hasOneNeighbour(point);
    } else {
        if (isEmpty()) {
            //If the schema is empty -> alias is the first dice
            return (point.x == 0 || point.y == 0 || point.x == Settings.CARD_WIDTH - 1 || point.y == Settings.CARD_HEIGHT - 1);
        } else {
            //check if there is one at least neighbour
            if (!hasOneNeighbour(point)) {
                return false;
            }
            //check for similar neighbour
            if (hasOneSimilarNeighbour(point, diceFace)) {
                return false;
            }
        }
    }
    return true;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAk2wYB2EeiyN7Yq9bqbrA" name="hasOneNeighbour" specification="_JAjooIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    for (int x = -1; x &lt;= 1; x++) {
        for (int y = -1; y &lt;= 1; y++) {
            if (!(x == 0 &amp;&amp; y == 0)) {
                int realX = point.x + x, realY = point.y + y;
                if (realX >= 0 &amp;&amp; realY >= 0 &amp;&amp; realX &lt; Settings.CARD_WIDTH &amp;&amp; realY &lt; Settings.CARD_HEIGHT) {
                    if (diceFaces[realX][realY] != null) {
                        return true;
                    }
                }
            }
        }
    }
    return false;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAnTAIB2EeiyN7Yq9bqbrA" name="hasOneSimilarNeighbour" specification="_JAld0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    //UP
    if (point.y - 1 >= 0) {
        if (diceFaces[point.x][point.y - 1] != null) {
            if (diceFaces[point.x][point.y - 1].isSimilar(diceFace)) {
                return true;
            }
        }
    }
    //DOWN
    if (point.y + 1 &lt; Settings.CARD_HEIGHT) {
        if (diceFaces[point.x][point.y + 1] != null) {
            if (diceFaces[point.x][point.y + 1].isSimilar(diceFace)) {
                return true;
            }
        }
    }
    //LEFT
    if (point.x - 1 >= 0) {
        if (diceFaces[point.x - 1][point.y] != null) {
            if (diceFaces[point.x - 1][point.y].isSimilar(diceFace)) {
                return true;
            }
        }
    }
    //RIGHT
    if (point.x + 1 &lt; Settings.CARD_WIDTH) {
        if (diceFaces[point.x + 1][point.y] != null) {
            if (diceFaces[point.x + 1][point.y].isSimilar(diceFace)) {
                return true;
            }
        }
    }
    return false;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAohIIB2EeiyN7Yq9bqbrA" name="isEmpty" specification="_JAnTAYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    for (DiceFace[] column : diceFaces) {
        for (DiceFace cell : column) {
            if (cell != null)
                return false;
        }
    }
    return true;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JApvQIB2EeiyN7Yq9bqbrA" name="computeFreeSpaces" specification="_JAohIYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int freeSpaces = 0;
    for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
        for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
            if (this.diceFaces[x][y] == null)
                freeSpaces++;
        }
    }
    return freeSpaces;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAq9YIB2EeiyN7Yq9bqbrA" name="getSchemaCardFace" specification="_JApvQYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return schemaCardFace;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JArkcYB2EeiyN7Yq9bqbrA" name="cloneSchema" specification="_JAq9YYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Schema newSchema = new Schema(schemaCardFace);
    newSchema.diceFaces = new DiceFace[diceFaces.length][diceFaces[0].length];
    for (int x = 0; x &lt; diceFaces.length; x++) {
        System.arraycopy(diceFaces[x], 0, newSchema.diceFaces[x], 0, diceFaces[0].length);
    }
    return newSchema;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAsLhIB2EeiyN7Yq9bqbrA" name="isDiceAllowedSomewhere" specification="_JAsLgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    for (int x = 0; x &lt; Settings.CARD_HEIGHT; x++) {
        for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
            if (isDiceAllowed(new Point(x, y), diceFace, ignore)) {
                return true;
            }
        }
    }
    return false;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JAsykoB2EeiyN7Yq9bqbrA" name="toJSON" specification="_JAsykIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    JSONObject jsonObject = new JSONObject(this);
    JSONArray diceFacesJson = new JSONArray();
    for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
        JSONArray row = new JSONArray();
        for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
            DiceFace diceFace = getDiceFace(new Point(x, y));
            row.put(diceFace != null ? diceFace.toJSON() : null);
        }
        diceFacesJson.put(row);
    }
    jsonObject.put(&quot;diceFaces&quot;, diceFacesJson);
    jsonObject.put(&quot;schemaCardFace&quot;, getSchemaCardFace().toJsonObject());
    return jsonObject;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JASi4IB2EeiyN7Yq9bqbrA" name="Schema" visibility="public" method="_JAVmMIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAU_IIB2EeiyN7Yq9bqbrA" name="schemaCardFace" type="_I1x8AIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAWNQIB2EeiyN7Yq9bqbrA" name="fromJSON" visibility="public" isStatic="true" method="_JAXbYIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAW0UIB2EeiyN7Yq9bqbrA" type="_IzxJ0IB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAW0UYB2EeiyN7Yq9bqbrA" name="jsonObject" type="_IvIhcoB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAaesIB2EeiyN7Yq9bqbrA" name="getDiceFace" visibility="public" method="_JAbFwYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAaesYB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAbFwIB2EeiyN7Yq9bqbrA" name="point" type="_JAXbYYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAcT4IB2EeiyN7Yq9bqbrA" name="setDiceFace" visibility="public" method="_JAc68YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAcT4YB2EeiyN7Yq9bqbrA" name="point" type="_JAXbYYB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAc68IB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAdiAIB2EeiyN7Yq9bqbrA" name="removeDiceFace" visibility="public" method="_JAewIYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAeJEIB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAewIIB2EeiyN7Yq9bqbrA" name="point" type="_JAXbYYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAf-QIB2EeiyN7Yq9bqbrA" name="isDiceAllowed" visibility="public" method="_JAhzcIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAf-QYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAglUIB2EeiyN7Yq9bqbrA" name="point" type="_JAXbYYB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAhMYIB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAhMYYB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAiagIB2EeiyN7Yq9bqbrA" name="isDiceAllowed" visibility="public" method="_JAjBkoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAiagYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAiagoB2EeiyN7Yq9bqbrA" name="point" type="_JAXbYYB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAiag4B2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAjBkIB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAjBkYB2EeiyN7Yq9bqbrA" name="forceLoneliness">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAjooIB2EeiyN7Yq9bqbrA" name="hasOneNeighbour" visibility="private" method="_JAk2wYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAkPsIB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAk2wIB2EeiyN7Yq9bqbrA" name="point" type="_JAXbYYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAld0IB2EeiyN7Yq9bqbrA" name="hasOneSimilarNeighbour" visibility="private" method="_JAnTAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAmE4IB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAmE4YB2EeiyN7Yq9bqbrA" name="point" type="_JAXbYYB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAmr8IB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAnTAYB2EeiyN7Yq9bqbrA" name="isEmpty" visibility="public" method="_JAohIIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAn6EIB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAohIYB2EeiyN7Yq9bqbrA" name="computeFreeSpaces" visibility="public" method="_JApvQIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JApIMIB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JApvQYB2EeiyN7Yq9bqbrA" name="getSchemaCardFace" visibility="public" method="_JAq9YIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAqWUIB2EeiyN7Yq9bqbrA" type="_I1x8AIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAq9YYB2EeiyN7Yq9bqbrA" name="cloneSchema" visibility="public" method="_JArkcYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JArkcIB2EeiyN7Yq9bqbrA" type="_IzxJ0IB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAsLgIB2EeiyN7Yq9bqbrA" name="isDiceAllowedSomewhere" visibility="public" method="_JAsLhIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAsLgYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAsLgoB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAsLg4B2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAsykIB2EeiyN7Yq9bqbrA" name="toJSON" visibility="public" method="_JAsykoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAsykYB2EeiyN7Yq9bqbrA" type="_IvIhcoB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Enumeration" xmi:id="_JACEMIB2EeiyN7Yq9bqbrA" name="GameColor" visibility="public">
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JAHjwIB2EeiyN7Yq9bqbrA" name="color" visibility="private" type="_JAFHgIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JAIK0IB2EeiyN7Yq9bqbrA" name="GameColor" visibility="private">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JALOIIB2EeiyN7Yq9bqbrA" name="color" type="_JAFHgIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JALOIYB2EeiyN7Yq9bqbrA" name="getAnsiColor" visibility="public">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JAL1MIB2EeiyN7Yq9bqbrA" type="_JAFHgIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JADSUIB2EeiyN7Yq9bqbrA" name="RED">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_JAD5YIB2EeiyN7Yq9bqbrA" name="specification">
                      <language>JAVA</language>
                      <body>Ansi.Color.RED</body>
                    </specification>
                  </ownedLiteral>
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JAD5YYB2EeiyN7Yq9bqbrA" name="BLUE">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_JAD5YoB2EeiyN7Yq9bqbrA" name="specification">
                      <language>JAVA</language>
                      <body>Ansi.Color.BLUE</body>
                    </specification>
                  </ownedLiteral>
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JAD5Y4B2EeiyN7Yq9bqbrA" name="GREEN">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_JAD5ZIB2EeiyN7Yq9bqbrA" name="specification">
                      <language>JAVA</language>
                      <body>Ansi.Color.GREEN</body>
                    </specification>
                  </ownedLiteral>
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JAEgcIB2EeiyN7Yq9bqbrA" name="PURPLE">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_JAEgcYB2EeiyN7Yq9bqbrA" name="specification">
                      <language>JAVA</language>
                      <body>Ansi.Color.MAGENTA</body>
                    </specification>
                  </ownedLiteral>
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JAEgcoB2EeiyN7Yq9bqbrA" name="YELLOW">
                    <specification xmi:type="uml:OpaqueExpression" xmi:id="_JAEgc4B2EeiyN7Yq9bqbrA" name="specification">
                      <language>JAVA</language>
                      <body>Ansi.Color.YELLOW</body>
                    </specification>
                  </ownedLiteral>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JAXbYYB2EeiyN7Yq9bqbrA" name="Point"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Iy_twIB2EeiyN7Yq9bqbrA" name="TurnHolder" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_IzAU0IB2EeiyN7Yq9bqbrA" name="round" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_IzA74IB2EeiyN7Yq9bqbrA" name="players" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_IzBi8IB2EeiyN7Yq9bqbrA" name="currentPlayer" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_IzCKAIB2EeiyN7Yq9bqbrA" name="direction" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_IzCxEIB2EeiyN7Yq9bqbrA" name="firstInRound" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_IzDYIIB2EeiyN7Yq9bqbrA" name="toIncrement" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_IzD_MIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>false</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IzHpkIB2EeiyN7Yq9bqbrA" name="TurnHolder" specification="_IzEmQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (players &lt; Settings.MIN_NUM_PLAYERS || players > Settings.MAX_NUM_PLAYERS)
        throw new IllegalArgumentException(getClass().getCanonicalName() + &quot;: players must be between 2 and 4!&quot;);
    this.players = players;
    currentPlayer = 0;
    direction = 1;
    round = 0;
    firstInRound = 0;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IzI3sIB2EeiyN7Yq9bqbrA" name="nextTurn" specification="_IzIQoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (round &lt; Settings.TURNS) {
        currentPlayer = (currentPlayer + direction + players) % players;
        if (direction == 0) {
            direction = -1;
        }
        if (toIncrement) {
            round++;
            toIncrement = false;
        }
        if (currentPlayer == (firstInRound - 1 + players) % players &amp;&amp; direction == 1) {
            direction = 0;
        } else if (currentPlayer == firstInRound &amp;&amp; direction == -1) {
            direction = 1;
            toIncrement = true;
            firstInRound = (firstInRound + 1) % players;
        }
    } else {
        throw new IllegalStateException(getClass().getCanonicalName() + &quot;: the game is already ended!&quot;);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IzKF0IB2EeiyN7Yq9bqbrA" name="isGameEnded" specification="_IzJewIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return !(round &lt; Settings.TURNS);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IzLT8IB2EeiyN7Yq9bqbrA" name="getRound" specification="_IzKs4IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return round;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IzMiEYB2EeiyN7Yq9bqbrA" name="getCurrentPlayer" specification="_IzL7AIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return currentPlayer;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IzNwMYB2EeiyN7Yq9bqbrA" name="isFirstTurnInRound" specification="_IzNJIIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return !toIncrement &amp;&amp; (direction == 1 || direction == 0);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IzPlYIB2EeiyN7Yq9bqbrA" name="toString" specification="_IzOXQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return &quot;TurnHolder{&quot; + &quot;round=&quot; + round + &quot;, players=&quot; + players + &quot;, currentPlayer=&quot; + currentPlayer + &quot;, direction=&quot; + direction + &quot;, firstInRound=&quot; + firstInRound + &quot;, toIncrement=&quot; + toIncrement + '}';
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IzEmQIB2EeiyN7Yq9bqbrA" name="TurnHolder" visibility="public" method="_IzHpkIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IzHCgIB2EeiyN7Yq9bqbrA" name="players">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IzIQoIB2EeiyN7Yq9bqbrA" name="nextTurn" visibility="public" method="_IzI3sIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IzJewIB2EeiyN7Yq9bqbrA" name="isGameEnded" visibility="public" method="_IzKF0IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IzJewYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IzKs4IB2EeiyN7Yq9bqbrA" name="getRound" visibility="public" method="_IzLT8IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IzKs4YB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IzL7AIB2EeiyN7Yq9bqbrA" name="getCurrentPlayer" visibility="public" method="_IzMiEYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IzMiEIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IzNJIIB2EeiyN7Yq9bqbrA" name="isFirstTurnInRound" visibility="public" method="_IzNwMYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IzNwMIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IzOXQIB2EeiyN7Yq9bqbrA" name="toString" visibility="public" method="_IzPlYIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IzO-UIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_IzSBoIB2EeiyN7Yq9bqbrA" name="DraftBoard" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_IzTPwYB2EeiyN7Yq9bqbrA" name="diceBag" visibility="private" type="_IzTPwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_IzT20IB2EeiyN7Yq9bqbrA" name="diceFaces" visibility="private" type="_Ixi8QIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_IzUd4IB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IzVE8IB2EeiyN7Yq9bqbrA" value="*"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_IzVE8YB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new ArrayList&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_IzSosYB2EeiyN7Yq9bqbrA" name="DraftBoard implements ImmutableCloneable" client="_IzSBoIB2EeiyN7Yq9bqbrA" supplier="_IzSosIB2EeiyN7Yq9bqbrA" contract="_IzSosIB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IzXhMIB2EeiyN7Yq9bqbrA" name="DraftBoard" specification="_IzVsAIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    diceBag = new DiceBag();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IzYvUYB2EeiyN7Yq9bqbrA" name="drawDices" specification="_IzYIQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (playerNumber &lt; Settings.MIN_NUM_PLAYERS)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: User number has to be at least 2.&quot;);
    if (playerNumber > Settings.MAX_NUM_PLAYERS)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: User number must, at most, be 4&quot;);
    int dices = 2 * playerNumber + 1;
    for (int i = 0; i &lt; dices; i++) {
        diceFaces.add(diceBag.drawDice());
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IzjucIB2EeiyN7Yq9bqbrA" name="removeDice" specification="_IzZWYIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    DiceFace removedDice;
    if (position > this.getDiceNumber() || position &lt; 0)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;Trying to get an already taken dice or accessing a non existing position.&quot;);
    if (this.getDiceNumber() == 0)
        throw new IllegalStateException(this.getClass().getCanonicalName() + &quot;: Trying to take a dice, but no dice is actually placed.&quot;);
    removedDice = diceFaces.remove(position);
    return removedDice;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IzljoIB2EeiyN7Yq9bqbrA" name="addDice" specification="_Izk8kIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (diceFace == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: diceFace cannot be null.&quot;);
    diceFaces.add(diceFace);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IznY0YB2EeiyN7Yq9bqbrA" name="getDices" specification="_IzmKsIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return diceFaces.toArray(new DiceFace[0]);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Izom8YB2EeiyN7Yq9bqbrA" name="getDiceNumber" specification="_Izn_4IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return diceFaces.size();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Izp1EYB2EeiyN7Yq9bqbrA" name="putBackDice" specification="_IzpOAIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    diceBag.putBackDice(diceFaces.get(index));
    diceFaces.remove(index);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IzrDMIB2EeiyN7Yq9bqbrA" name="drawSingleDice" specification="_IzqcIIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    diceFaces.add(diceBag.drawDice());
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IzsRUYB2EeiyN7Yq9bqbrA" name="getDiceFace" specification="_IzrqQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (position >= this.getDiceNumber() || position &lt; 0)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;Trying to get an already taken dice or accessing a non existing position.&quot;);
    return diceFaces.get(position);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_IzuGgYB2EeiyN7Yq9bqbrA" name="getImmutableInstance" specification="_Izs4YIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return new DraftBoardImmutable(this.getDices());
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IzVsAIB2EeiyN7Yq9bqbrA" name="DraftBoard" visibility="public" method="_IzXhMIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IzYIQIB2EeiyN7Yq9bqbrA" name="drawDices" visibility="public" method="_IzYvUYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IzYvUIB2EeiyN7Yq9bqbrA" name="playerNumber">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IzZWYIB2EeiyN7Yq9bqbrA" name="removeDice" visibility="public" method="_IzjucIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IzZWYYB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IzZ9cIB2EeiyN7Yq9bqbrA" name="position">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Izk8kIB2EeiyN7Yq9bqbrA" name="addDice" visibility="public" method="_IzljoIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Izk8kYB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IzmKsIB2EeiyN7Yq9bqbrA" name="getDices" visibility="public" method="_IznY0YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IzmxwIB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_IzmxwYB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_IznY0IB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Izn_4IB2EeiyN7Yq9bqbrA" name="getDiceNumber" visibility="public" method="_Izom8YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Izom8IB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IzpOAIB2EeiyN7Yq9bqbrA" name="putBackDice" visibility="public" method="_Izp1EYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Izp1EIB2EeiyN7Yq9bqbrA" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IzqcIIB2EeiyN7Yq9bqbrA" name="drawSingleDice" visibility="public" method="_IzrDMIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_IzrqQIB2EeiyN7Yq9bqbrA" name="getDiceFace" visibility="public" method="_IzsRUYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IzrqQYB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IzsRUIB2EeiyN7Yq9bqbrA" name="position">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Izs4YIB2EeiyN7Yq9bqbrA" name="getImmutableInstance" visibility="public" method="_IzuGgYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_IzuGgIB2EeiyN7Yq9bqbrA" type="_IztfcYB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_IzSosIB2EeiyN7Yq9bqbrA" name="ImmutableCloneable" visibility="public">
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I2EP4IB2EeiyN7Yq9bqbrA" name="getImmutableInstance" visibility="public">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2HTMIB2EeiyN7Yq9bqbrA" type="_I2E28IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Izv7sIB2EeiyN7Yq9bqbrA" name="Player" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_IzwiwIB2EeiyN7Yq9bqbrA" name="name" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Izxw4IB2EeiyN7Yq9bqbrA" name="schema" visibility="private" type="_IzxJ0IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_IzyX8IB2EeiyN7Yq9bqbrA" name="token" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Izy_AoB2EeiyN7Yq9bqbrA" name="privateObjective" visibility="private" type="_Izy_AYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_Izv7sYB2EeiyN7Yq9bqbrA" name="Player implements ImmutableCloneable" client="_Izv7sIB2EeiyN7Yq9bqbrA" supplier="_IzSosIB2EeiyN7Yq9bqbrA" contract="_IzSosIB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iz2CUYB2EeiyN7Yq9bqbrA" name="Player" specification="_Iz0NIIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.name = name;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iz2pYYB2EeiyN7Yq9bqbrA" name="getSchema" specification="_Iz2CUoB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return schema;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iz3QcIB2EeiyN7Yq9bqbrA" name="setSchema" specification="_Iz2pYoB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (schema == null)
        throw new IllegalArgumentException(getClass().getCanonicalName() + &quot;: schema cannot be null!&quot;);
    if (this.schema != null)
        throw new IllegalStateException(this.getClass().getCanonicalName() + &quot;: Trying to set a schema on an already set schema!&quot;);
    this.schema = schema;
    this.token = schema.getSchemaCardFace().getDifficulty();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iz4ekYB2EeiyN7Yq9bqbrA" name="getName" specification="_Iz33gIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return name;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iz5ssYB2EeiyN7Yq9bqbrA" name="getToken" specification="_Iz5FoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return token;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iz660YB2EeiyN7Yq9bqbrA" name="setToken" specification="_Iz6TwIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.token = token;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iz7h4YB2EeiyN7Yq9bqbrA" name="getPrivateObjective" specification="_Iz660oB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return privateObjective;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iz8I8IB2EeiyN7Yq9bqbrA" name="setPrivateObjective" specification="_Iz7h4oB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.privateObjective = privateObjective;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iz8I84B2EeiyN7Yq9bqbrA" name="computeScoreFromPrivateObjective" specification="_Iz8I8YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return this.privateObjective.computeScore(this.schema);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iz9XEIB2EeiyN7Yq9bqbrA" name="computeFreeSpaces" specification="_Iz8wAIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return schema.computeFreeSpaces();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Iz_MQIB2EeiyN7Yq9bqbrA" name="getImmutableInstance" specification="_Iz9-IIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return new PlayerImmutable(this.name, this.token, this.privateObjective);
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Iz0NIIB2EeiyN7Yq9bqbrA" name="Player" visibility="public" method="_Iz2CUYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iz2CUIB2EeiyN7Yq9bqbrA" name="name" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Iz2CUoB2EeiyN7Yq9bqbrA" name="getSchema" visibility="public" method="_Iz2pYYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iz2pYIB2EeiyN7Yq9bqbrA" type="_IzxJ0IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Iz2pYoB2EeiyN7Yq9bqbrA" name="setSchema" visibility="public" method="_Iz3QcIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iz2pY4B2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Iz33gIB2EeiyN7Yq9bqbrA" name="getName" visibility="public" method="_Iz4ekYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iz4ekIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Iz5FoIB2EeiyN7Yq9bqbrA" name="getToken" visibility="public" method="_Iz5ssYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iz5ssIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Iz6TwIB2EeiyN7Yq9bqbrA" name="setToken" visibility="public" method="_Iz660YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iz660IB2EeiyN7Yq9bqbrA" name="token">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Iz660oB2EeiyN7Yq9bqbrA" name="getPrivateObjective" visibility="public" method="_Iz7h4YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iz7h4IB2EeiyN7Yq9bqbrA" type="_Izy_AYB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Iz7h4oB2EeiyN7Yq9bqbrA" name="setPrivateObjective" visibility="public" method="_Iz8I8IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iz7h44B2EeiyN7Yq9bqbrA" name="privateObjective" type="_Izy_AYB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Iz8I8YB2EeiyN7Yq9bqbrA" name="computeScoreFromPrivateObjective" visibility="public" method="_Iz8I84B2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iz8I8oB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Iz8wAIB2EeiyN7Yq9bqbrA" name="computeFreeSpaces" visibility="public" method="_Iz9XEIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iz8wAYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Iz9-IIB2EeiyN7Yq9bqbrA" name="getImmutableInstance" visibility="public" method="_Iz_MQIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Iz-lMIB2EeiyN7Yq9bqbrA" type="_Iz9-IYB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_Izy_AIB2EeiyN7Yq9bqbrA" name="objectives">
                <packagedElement xmi:type="uml:Class" xmi:id="_Izy_AYB2EeiyN7Yq9bqbrA" name="PrivateObjective" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I4_BAIB2EeiyN7Yq9bqbrA" general="_I4f40IB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I4_oEYB2EeiyN7Yq9bqbrA" name="color" visibility="private" type="_JACEMIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_I4_oEIB2EeiyN7Yq9bqbrA" name="PrivateObjective implements Serializable" client="_Izy_AYB2EeiyN7Yq9bqbrA" supplier="_I4hG8IB2EeiyN7Yq9bqbrA" contract="_I4hG8IB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5DScYB2EeiyN7Yq9bqbrA" name="PrivateObjective" specification="_I5APIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    this.color = color;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5FHoIB2EeiyN7Yq9bqbrA" name="fromJSON" specification="_I5D5gIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (privateObjectiveJson == null)
        return null;
    String stringColor = privateObjectiveJson.getString(&quot;color&quot;);
    GameColor gc = null;
    for (GameColor tempColor : GameColor.values()) {
        if (tempColor.toString().equalsIgnoreCase(stringColor)) {
            gc = tempColor;
        }
    }
    if (gc == null)
        throw new IllegalArgumentException(&quot;Invalid game color received: &quot; + stringColor);
    return new PrivateObjective(gc);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5GVwYB2EeiyN7Yq9bqbrA" name="computeScore" specification="_I5FusIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    DiceFace actualDiceFace;
    Point actualPoint;
    if (schema == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Schema cannot be null.&quot;);
    int result = 0;
    for (int x = 0; x &lt; CARD_WIDTH; x++) {
        for (int y = 0; y &lt; CARD_HEIGHT; y++) {
            actualPoint = new Point(x, y);
            actualDiceFace = schema.getDiceFace(actualPoint);
            if (actualDiceFace != null) {
                if (actualDiceFace.getColor().equals(this.getColor())) {
                    result = result + schema.getDiceFace(actualPoint).getNumber();
                }
            }
        }
    }
    return result;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5Hj4IB2EeiyN7Yq9bqbrA" name="getColor" specification="_I5G80IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return color;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5APIIB2EeiyN7Yq9bqbrA" name="PrivateObjective" visibility="public" method="_I5DScYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5DScIB2EeiyN7Yq9bqbrA" name="color" type="_JACEMIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5D5gIB2EeiyN7Yq9bqbrA" name="fromJSON" visibility="public" isStatic="true" method="_I5FHoIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5EgkIB2EeiyN7Yq9bqbrA" type="_Izy_AYB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5EgkYB2EeiyN7Yq9bqbrA" name="privateObjectiveJson" type="_IvIhcoB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5FusIB2EeiyN7Yq9bqbrA" name="computeScore" visibility="public" method="_I5GVwYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5FusYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5GVwIB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5G80IB2EeiyN7Yq9bqbrA" name="getColor" visibility="public" method="_I5Hj4IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5G80YB2EeiyN7Yq9bqbrA" type="_JACEMIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I0lCIIB2EeiyN7Yq9bqbrA" name="PublicObjective" visibility="public" isAbstract="true">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I4gf4IB2EeiyN7Yq9bqbrA" general="_I4f40IB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I4jjMIB2EeiyN7Yq9bqbrA" name="points" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_I4i8IIB2EeiyN7Yq9bqbrA" name="PublicObjective implements Serializable" client="_I0lCIIB2EeiyN7Yq9bqbrA" supplier="_I4hG8IB2EeiyN7Yq9bqbrA" contract="_I4hG8IB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4nNkIB2EeiyN7Yq9bqbrA" name="PublicObjective" specification="_I4kKQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    this.points = points;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4obsIB2EeiyN7Yq9bqbrA" name="getPoint" specification="_I4n0oIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return points;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4pCwYB2EeiyN7Yq9bqbrA" name="toString" specification="_I4obsYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return &quot;PublicObjective{&quot; + &quot;points=&quot; + points + &quot;Class&quot; + this.getClass().getName() + '}';
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I4kKQIB2EeiyN7Yq9bqbrA" name="PublicObjective" visibility="public" method="_I4nNkIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4mmgIB2EeiyN7Yq9bqbrA" name="points">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I4n0oIB2EeiyN7Yq9bqbrA" name="getPoint" visibility="public" method="_I4obsIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4n0oYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I4obsYB2EeiyN7Yq9bqbrA" name="toString" visibility="public" method="_I4pCwYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4pCwIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I4Cl0IB2EeiyN7Yq9bqbrA" name="DifferentColumnShades" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I4Cl0YB2EeiyN7Yq9bqbrA" general="_I0lCIIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4FpIIB2EeiyN7Yq9bqbrA" name="DifferentColumnShades" specification="_I4DM4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(4);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4HeUIB2EeiyN7Yq9bqbrA" name="computeScore" specification="_I4GQMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int score = 0;
    if (schema == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Schema cannot be null.&quot;);
    for (int x = 0; x &lt; CARD_WIDTH; x++) {
        //creating an array to count the occurrences of every dice face number, initialized to 0
        int[] counter = new int[6];
        for (int i = 0; i &lt; 6; i++) {
            counter[i] = 0;
        }
        for (int y = 0; y &lt; CARD_HEIGHT; y++) {
            if (schema.getDiceFace(new Point(x, y)) != null) {
                //¯\_(ツ)_/¯
                counter[schema.getDiceFace(new Point(x, y)).getNumber() - 1]++;
            }
        }
        if (isValid(counter))
            score = score + getPoint();
    }
    return score;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4JTgoB2EeiyN7Yq9bqbrA" name="isValid" specification="_I4IFYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int filled = 0;
    for (int i = 0; i &lt; counter.length; i++) {
        if (counter[i] > 1)
            return false;
        else
            filled = filled + counter[i];
    }
    if (filled &lt; CARD_HEIGHT)
        return false;
    return true;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I4DM4IB2EeiyN7Yq9bqbrA" name="DifferentColumnShades" visibility="public" method="_I4FpIIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I4GQMIB2EeiyN7Yq9bqbrA" name="computeScore" visibility="public" method="_I4HeUIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4GQMYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4G3QIB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I4IFYIB2EeiyN7Yq9bqbrA" name="isValid" visibility="private" method="_I4JTgoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4IFYYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4IscIB2EeiyN7Yq9bqbrA" name="counter">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_I4JTgIB2EeiyN7Yq9bqbrA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_I4JTgYB2EeiyN7Yq9bqbrA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I4LvwIB2EeiyN7Yq9bqbrA" name="ColorVariety" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I4LvwYB2EeiyN7Yq9bqbrA" general="_I0lCIIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4OzEIB2EeiyN7Yq9bqbrA" name="ColorVariety" specification="_I4MW0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(4);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4QoQIB2EeiyN7Yq9bqbrA" name="computeScore" specification="_I4PaIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    EnumMap&lt;GameColor, Integer> occurrences = new EnumMap&lt;>(GameColor.class);
    Point actualPoint;
    DiceFace actualCell;
    if (schema == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Schema cannot be null.&quot;);
    // Initializing the number of occurrences for each color.
    for (GameColor gc : GameColor.values()) {
        occurrences.put(gc, 0);
    }
    // Update the EnumMap with at each iteration, in order to get the number of occurrences of every color.
    for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
        for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
            actualPoint = new Point(x, y);
            actualCell = schema.getDiceFace(actualPoint);
            if (actualCell != null) {
                occurrences.put(actualCell.getColor(), occurrences.get(actualCell.getColor()) + 1);
            }
        }
    }
    // The minimum number of occurrences of a color will be the number of sets of different shades.
    return this.getPoint() * Collections.min(occurrences.values());
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I4MW0IB2EeiyN7Yq9bqbrA" name="ColorVariety" visibility="public" method="_I4OzEIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I4PaIIB2EeiyN7Yq9bqbrA" name="computeScore" visibility="public" method="_I4QoQIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4PaIYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4QBMIB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I4SdcIB2EeiyN7Yq9bqbrA" name="ColoredDiagonals" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I4TEgIB2EeiyN7Yq9bqbrA" general="_I0lCIIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4WH0IB2EeiyN7Yq9bqbrA" name="ColoredDiagonals" specification="_I4TrkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(1);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4X9AIB2EeiyN7Yq9bqbrA" name="computeScore" specification="_I4Wu4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int score = 0;
    boolean[][] visited = new boolean[Settings.CARD_WIDTH][CARD_HEIGHT];
    if (schema == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Schema cannot be null.&quot;);
    for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
        for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
            int scoreTemp = this.countDiag(visited, schema, null, new Point(x, y));
            if (scoreTemp > 1)
                score += scoreTemp;
        }
    }
    return score;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4eqsIB2EeiyN7Yq9bqbrA" name="countDiag" specification="_I4bAUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (point.x &lt; 0 || point.x >= Settings.CARD_WIDTH || point.y &lt; 0 || point.y >= Settings.CARD_HEIGHT)
        return 0;
    if (schema.getDiceFace(point) == null)
        return 0;
    if (color == null)
        color = schema.getDiceFace(point).getColor();
    if (visited[point.x][point.y])
        return 0;
    if (schema.getDiceFace(point).getColor() != color)
        return 0;
    visited[point.x][point.y] = true;
    return 1 + countDiag(visited, schema, color, new Point(point.x + 1, point.y + 1)) + countDiag(visited, schema, color, new Point(point.x - 1, point.y + 1)) + countDiag(visited, schema, color, new Point(point.x + 1, point.y - 1)) + countDiag(visited, schema, color, new Point(point.x - 1, point.y - 1));
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I4TrkIB2EeiyN7Yq9bqbrA" name="ColoredDiagonals" visibility="public" method="_I4WH0IB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I4Wu4IB2EeiyN7Yq9bqbrA" name="computeScore" visibility="public" method="_I4X9AIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4XV8IB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4XV8YB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I4bAUIB2EeiyN7Yq9bqbrA" name="countDiag" visibility="private" method="_I4eqsIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4bAUYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4bnYIB2EeiyN7Yq9bqbrA" name="visited">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_I4cOcIB2EeiyN7Yq9bqbrA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_I4cOcYB2EeiyN7Yq9bqbrA" value="*"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4c1gIB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4dckIB2EeiyN7Yq9bqbrA" name="color" type="_JACEMIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4eDoIB2EeiyN7Yq9bqbrA" name="point" type="_I4YkEIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I4YkEIB2EeiyN7Yq9bqbrA" name="Point"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_I4f40IB2EeiyN7Yq9bqbrA" name="Objective" visibility="public" isAbstract="true">
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5IyAIB2EeiyN7Yq9bqbrA" name="computeScore" visibility="public" isAbstract="true">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5IyAYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5JZEIB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I4qQ4IB2EeiyN7Yq9bqbrA" name="MediumShades" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I4q38IB2EeiyN7Yq9bqbrA" general="_I0lCIIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4tUMIB2EeiyN7Yq9bqbrA" name="MediumShades" specification="_I4q38YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(2);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4vJYIB2EeiyN7Yq9bqbrA" name="computeScore" specification="_I4uiUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int numThree = 0;
    int numFour = 0;
    Point actualPoint;
    DiceFace actualFace;
    if (schema == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Schema cannot be null.&quot;);
    for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
        for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
            actualPoint = new Point(x, y);
            actualFace = schema.getDiceFace(actualPoint);
            if (actualFace != null) {
                if (actualFace.getNumber() == 3)
                    numThree++;
                if (actualFace.getNumber() == 4)
                    numFour++;
            }
        }
    }
    // The minimum number of occurrences of a 3 or 4 will be the number of sets.
    return numThree &lt;= numFour ? this.getPoint() * numThree : this.getPoint() * numFour;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I4q38YB2EeiyN7Yq9bqbrA" name="MediumShades" visibility="public" method="_I4tUMIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I4uiUIB2EeiyN7Yq9bqbrA" name="computeScore" visibility="public" method="_I4vJYIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4uiUYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4uiUoB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I4wXgIB2EeiyN7Yq9bqbrA" name="ShadesVariety" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I4w-kIB2EeiyN7Yq9bqbrA" general="_I0lCIIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4za0IB2EeiyN7Yq9bqbrA" name="ShadesVariety" specification="_I4w-kYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(5);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I41QAYB2EeiyN7Yq9bqbrA" name="computeScore" specification="_I40B4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    HashMap&lt;Integer, Integer> occurrences = new HashMap&lt;>();
    Point actualPoint;
    DiceFace actualCell;
    if (schema == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Schema cannot be null.&quot;);
    // Initializing the number of occurrences for each value.
    for (int i = 1; i &lt;= 6; i++) {
        occurrences.put(i, 0);
    }
    for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
        for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
            actualPoint = new Point(x, y);
            actualCell = schema.getDiceFace(actualPoint);
            if (actualCell != null) {
                occurrences.put(actualCell.getNumber(), occurrences.get(actualCell.getNumber()) + 1);
            }
        }
    }
    // The minimum number of occurrences of a value will be the number of sets of different shades.
    return this.getPoint() * Collections.min(occurrences.values());
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I4w-kYB2EeiyN7Yq9bqbrA" name="ShadesVariety" visibility="public" method="_I4za0IB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I40B4IB2EeiyN7Yq9bqbrA" name="computeScore" visibility="public" method="_I41QAYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I40o8IB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I41QAIB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I43FMIB2EeiyN7Yq9bqbrA" name="DarkShades" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I43sQIB2EeiyN7Yq9bqbrA" general="_I0lCIIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I47WoIB2EeiyN7Yq9bqbrA" name="DarkShades" specification="_I43sQYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(2);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I49L0IB2EeiyN7Yq9bqbrA" name="computeScore" specification="_I479sIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int numFive = 0;
    int numSix = 0;
    Point actualPoint;
    DiceFace actualFace;
    if (schema == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Schema cannot be null.&quot;);
    for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
        for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
            actualPoint = new Point(x, y);
            actualFace = schema.getDiceFace(actualPoint);
            if (actualFace != null) {
                if (schema.getDiceFace(actualPoint).getNumber() == 5)
                    numFive++;
                if (schema.getDiceFace(actualPoint).getNumber() == 6)
                    numSix++;
            }
        }
    }
    // The minimum number of occurrences of a 5 or a six will be the number of sets.
    return numFive &lt;= numSix ? this.getPoint() * numFive : this.getPoint() * numSix;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I43sQYB2EeiyN7Yq9bqbrA" name="DarkShades" visibility="public" method="_I47WoIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I479sIB2EeiyN7Yq9bqbrA" name="computeScore" visibility="public" method="_I49L0IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I479sYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I48kwIB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I5KnMIB2EeiyN7Yq9bqbrA" name="DifferentColumnColor" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I5LOQIB2EeiyN7Yq9bqbrA" general="_I0lCIIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5NqgIB2EeiyN7Yq9bqbrA" name="DifferentColumnColor" specification="_I5LOQYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(5);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5O4oYB2EeiyN7Yq9bqbrA" name="computeScore" specification="_I5ORkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int score = 0;
    DiceFace actualDiceFace;
    GameColor actualColor;
    if (schema == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Schema cannot be null.&quot;);
    for (int x = 0; x &lt; CARD_WIDTH; x++) {
        //initializes Map color->#of dice
        EnumMap&lt;GameColor, Integer> counter = new EnumMap&lt;>(GameColor.class);
        for (GameColor gc : GameColor.values()) {
            counter.put(gc, 0);
        }
        for (int y = 0; y &lt; CARD_HEIGHT; y++) {
            actualDiceFace = schema.getDiceFace(new Point(x, y));
            if (actualDiceFace != null) {
                actualColor = actualDiceFace.getColor();
                counter.put(actualColor, counter.get(actualColor) + 1);
            }
        }
        if (isValid(counter))
            score = score + getPoint();
    }
    return score;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5SjAIB2EeiyN7Yq9bqbrA" name="isValid" specification="_I5RU4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int zeros = 0;
    int filled = 0;
    for (GameColor gc : GameColor.values()) {
        if (counter.get(gc) == 0)
            zeros++;
        filled = filled + counter.get(gc);
    }
    if (filled &lt; CARD_HEIGHT)
        return false;
    return zeros &lt; GameColor.values().length - CARD_HEIGHT + 1;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5LOQYB2EeiyN7Yq9bqbrA" name="DifferentColumnColor" visibility="public" method="_I5NqgIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5ORkIB2EeiyN7Yq9bqbrA" name="computeScore" visibility="public" method="_I5O4oYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5ORkYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5O4oIB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5RU4IB2EeiyN7Yq9bqbrA" name="isValid" visibility="private" method="_I5SjAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5R78IB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5R78YB2EeiyN7Yq9bqbrA" name="counter" type="_I5PfsIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I5TxIIB2EeiyN7Yq9bqbrA" name="DifferentRowColor" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I5TxIYB2EeiyN7Yq9bqbrA" general="_I0lCIIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5WNYIB2EeiyN7Yq9bqbrA" name="DifferentRowColor" specification="_I5UYMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(6);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5XbgIB2EeiyN7Yq9bqbrA" name="computeScore" specification="_I5W0cIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int score = 0;
    GameColor actualGameColor;
    DiceFace actualDiceFace;
    if (schema == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Schema cannot be null.&quot;);
    for (int y = 0; y &lt; CARD_HEIGHT; y++) {
        //initializes Map color->#of dice
        EnumMap&lt;GameColor, Integer> counter = new EnumMap&lt;>(GameColor.class);
        for (GameColor gc : GameColor.values()) {
            counter.put(gc, 0);
        }
        for (int x = 0; x &lt; CARD_WIDTH; x++) {
            actualDiceFace = schema.getDiceFace(new Point(x, y));
            if (actualDiceFace != null) {
                actualGameColor = actualDiceFace.getColor();
                counter.put(actualGameColor, counter.get(actualGameColor) + 1);
            }
        }
        if (isValid(counter))
            score = score + getPoint();
    }
    return score;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5ZQsIB2EeiyN7Yq9bqbrA" name="isValid" specification="_I5YCkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int zeros = 0;
    int filled = 0;
    for (GameColor gc : GameColor.values()) {
        if (counter.get(gc) == 0)
            zeros++;
        filled = filled + counter.get(gc);
    }
    if (filled &lt; CARD_WIDTH)
        return false;
    return zeros &lt; GameColor.values().length - CARD_WIDTH + 1;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5UYMIB2EeiyN7Yq9bqbrA" name="DifferentRowColor" visibility="public" method="_I5WNYIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5W0cIB2EeiyN7Yq9bqbrA" name="computeScore" visibility="public" method="_I5XbgIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5W0cYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5W0coB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5YCkIB2EeiyN7Yq9bqbrA" name="isValid" visibility="private" method="_I5ZQsIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5YCkYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5YpoIB2EeiyN7Yq9bqbrA" name="counter" type="_I5PfsIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I5ae0IB2EeiyN7Yq9bqbrA" name="LightShades" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I5ae0YB2EeiyN7Yq9bqbrA" general="_I0lCIIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5c7EIB2EeiyN7Yq9bqbrA" name="LightShades" specification="_I5bF4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(2);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5eJMYB2EeiyN7Yq9bqbrA" name="computeScore" specification="_I5diIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int numOne = 0;
    int numTwo = 0;
    Point actualPoint;
    DiceFace actualFace;
    if (schema == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Schema cannot be null.&quot;);
    for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
        for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
            actualPoint = new Point(x, y);
            actualFace = schema.getDiceFace(actualPoint);
            if (actualFace != null) {
                if (actualFace.getNumber() == 1)
                    numOne++;
                if (actualFace.getNumber() == 2)
                    numTwo++;
            }
        }
    }
    // The minimum number of occurrences of a 1 or 2 will be the number of sets.
    return numOne &lt;= numTwo ? (this.getPoint() * numOne) : (this.getPoint() * numTwo);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5bF4IB2EeiyN7Yq9bqbrA" name="LightShades" visibility="public" method="_I5c7EIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5diIIB2EeiyN7Yq9bqbrA" name="computeScore" visibility="public" method="_I5eJMYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5diIYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5eJMIB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I5mFAIB2EeiyN7Yq9bqbrA" name="DifferentRowShades" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I5msEIB2EeiyN7Yq9bqbrA" general="_I0lCIIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5pIUIB2EeiyN7Yq9bqbrA" name="DifferentRowShades" specification="_I5msEYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(5);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5q9gIB2EeiyN7Yq9bqbrA" name="computeScore" specification="_I5pvYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int score = 0;
    if (schema == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Schema cannot be null.&quot;);
    for (int y = 0; y &lt; CARD_HEIGHT; y++) {
        //creating an array to count the occurrences of every dice face number, initialized to 0
        int[] counter = new int[6];
        for (int i = 0; i &lt; 6; i++) {
            counter[i] = 0;
        }
        for (int x = 0; x &lt; CARD_WIDTH; x++) {
            if (schema.getDiceFace(new Point(x, y)) != null) {
                //¯\_(ツ)_/¯
                counter[schema.getDiceFace(new Point(x, y)).getNumber() - 1]++;
            }
        }
        if (isValid(counter))
            score = score + getPoint();
    }
    return score;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I5rkk4B2EeiyN7Yq9bqbrA" name="isValid" specification="_I5q9gYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int filled = 0;
    for (int i = 0; i &lt; counter.length; i++) {
        if (counter[i] > 1)
            return false;
        else
            filled = filled + counter[i];
    }
    if (filled &lt; CARD_WIDTH)
        return false;
    return true;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5msEYB2EeiyN7Yq9bqbrA" name="DifferentRowShades" visibility="public" method="_I5pIUIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5pvYIB2EeiyN7Yq9bqbrA" name="computeScore" visibility="public" method="_I5q9gIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5qWcIB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5qWcYB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I5q9gYB2EeiyN7Yq9bqbrA" name="isValid" visibility="private" method="_I5rkk4B2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5q9goB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I5rkkIB2EeiyN7Yq9bqbrA" name="counter">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_I5rkkYB2EeiyN7Yq9bqbrA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_I5rkkoB2EeiyN7Yq9bqbrA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_I0BBcIB2EeiyN7Yq9bqbrA" name="DiceHolder" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_I0DdsIB2EeiyN7Yq9bqbrA" name="turnHolder" visibility="private" type="_I0BogIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_I0EEwIB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_I0EEwYB2EeiyN7Yq9bqbrA" value="*"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_I0Er0IB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new ArrayList&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_I0BBcYB2EeiyN7Yq9bqbrA" name="DiceHolder implements ImmutableCloneable" client="_I0BBcIB2EeiyN7Yq9bqbrA" supplier="_IzSosIB2EeiyN7Yq9bqbrA" contract="_IzSosIB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I0HIEIB2EeiyN7Yq9bqbrA" name="DiceHolder" specification="_I0Er0YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    for (int i = 0; i &lt; 10; i++) {
        turnHolder.add(new ArrayList&lt;>());
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I0I9QIB2EeiyN7Yq9bqbrA" name="removeDice" specification="_I0HIEYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    DiceFace removedDice;
    ArrayList&lt;DiceFace> turnDices;
    if (turn >= Settings.TURNS)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Tryig to access a turn greater than &quot; + Settings.TURNS);
    try {
        turnDices = turnHolder.get(turn);
    } catch (IndexOutOfBoundsException e) {
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Turn number is not in the ArrayList.&quot;);
    }
    try {
        removedDice = turnDices.remove(position);
    } catch (IndexOutOfBoundsException e) {
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Position number is not in the ArrayList.&quot;);
    }
    return removedDice;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I0KycIB2EeiyN7Yq9bqbrA" name="addDice" specification="_I0JkUIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (turn &lt; 0)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Turn less than 0&quot;);
    if (turn >= Settings.TURNS)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Tryig to access a turn greater than &quot; + Settings.TURNS);
    if (diceFace == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: diceFace cannot be null.&quot;);
    turnHolder.get(turn).add(diceFace);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I0NOsIB2EeiyN7Yq9bqbrA" name="getTurnDices" specification="_I0LZgIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (turn &lt; 0)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Turn less than 0.&quot;);
    if (turn >= Settings.TURNS)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Trying to access a turn greater than &quot; + Settings.TURNS);
    if (turnHolder.get(turn).isEmpty()) {
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Trying to access an empty turn.&quot;);
    }
    // Uses `new DiceFace[0]` to infer the type
    return turnHolder.get(turn).toArray(new DiceFace[0]);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I0Oc0IB2EeiyN7Yq9bqbrA" name="getImmutableInstance" specification="_I0NOsYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    DiceFace[][] newTurnHolder = new DiceFace[this.turnHolder.size()][];
    for (int i = 0; i &lt; this.turnHolder.size(); i++) {
        newTurnHolder[i] = this.turnHolder.get(i).toArray(new DiceFace[0]);
    }
    return new DiceHolderImmutable(newTurnHolder);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I0QSAIB2EeiyN7Yq9bqbrA" name="isColorPresent" specification="_I0PD4YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    for (ArrayList&lt;DiceFace> turn : turnHolder) {
        for (DiceFace face : turn) {
            if (face.getColor().equals(gameColor)) {
                return true;
            }
        }
    }
    return false;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I0Er0YB2EeiyN7Yq9bqbrA" name="DiceHolder" visibility="public" method="_I0HIEIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I0HIEYB2EeiyN7Yq9bqbrA" name="removeDice" visibility="public" method="_I0I9QIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0HvIIB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0IWMIB2EeiyN7Yq9bqbrA" name="turn">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0IWMYB2EeiyN7Yq9bqbrA" name="position">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I0JkUIB2EeiyN7Yq9bqbrA" name="addDice" visibility="public" method="_I0KycIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0KLYIB2EeiyN7Yq9bqbrA" name="turn">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0KLYYB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I0LZgIB2EeiyN7Yq9bqbrA" name="getTurnDices" visibility="public" method="_I0NOsIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0MAkIB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_I0MAkYB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_I0MAkoB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0MnoIB2EeiyN7Yq9bqbrA" name="turn">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I0NOsYB2EeiyN7Yq9bqbrA" name="getImmutableInstance" visibility="public" method="_I0Oc0IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0N1wYB2EeiyN7Yq9bqbrA" type="_I0N1wIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I0PD4YB2EeiyN7Yq9bqbrA" name="isColorPresent" visibility="public" method="_I0QSAIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0Pq8IB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0Pq8YB2EeiyN7Yq9bqbrA" name="gameColor" type="_JACEMIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_I0RgIIB2EeiyN7Yq9bqbrA" name="Tool" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_I0SHMYB2EeiyN7Yq9bqbrA" name="token" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_I0SuQIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>0</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_I0TVUIB2EeiyN7Yq9bqbrA" name="name" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_I0SHMIB2EeiyN7Yq9bqbrA" name="Tool implements ImmutableCloneable" client="_I0RgIIB2EeiyN7Yq9bqbrA" supplier="_IzSosIB2EeiyN7Yq9bqbrA" contract="_IzSosIB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I0WYoIB2EeiyN7Yq9bqbrA" name="Tool" specification="_I0T8YIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.name = name;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I0W_sYB2EeiyN7Yq9bqbrA" name="getToken" specification="_I0WYoYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return token;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I0Y04IB2EeiyN7Yq9bqbrA" name="addToken" specification="_I0XmwIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.token += tokenAdded;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I0aDAIB2EeiyN7Yq9bqbrA" name="getNeededTokens" specification="_I0Zb8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return token > 0 ? 2 : 1;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I0b4MIB2EeiyN7Yq9bqbrA" name="getImmutableInstance" specification="_I0aqEIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return new ToolCardImmutable(name, token);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I0dGUYB2EeiyN7Yq9bqbrA" name="getName" specification="_I0cfQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return name;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I0T8YIB2EeiyN7Yq9bqbrA" name="Tool" visibility="public" method="_I0WYoIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0VxkIB2EeiyN7Yq9bqbrA" name="name" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I0WYoYB2EeiyN7Yq9bqbrA" name="getToken" visibility="public" method="_I0W_sYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0W_sIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I0XmwIB2EeiyN7Yq9bqbrA" name="addToken" visibility="public" method="_I0Y04IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0YN0IB2EeiyN7Yq9bqbrA" name="tokenAdded">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I0Zb8IB2EeiyN7Yq9bqbrA" name="getNeededTokens" visibility="public" method="_I0aDAIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0Zb8YB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I0aqEIB2EeiyN7Yq9bqbrA" name="getImmutableInstance" visibility="public" method="_I0b4MIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0bRIYB2EeiyN7Yq9bqbrA" type="_I0bRIIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_I0cfQIB2EeiyN7Yq9bqbrA" name="getName" visibility="public" method="_I0dGUYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_I0dGUIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_I0s98IB2EeiyN7Yq9bqbrA" name="ArrayList"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_I1F_gIB2EeiyN7Yq9bqbrA" name="Point"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_I2E28IB2EeiyN7Yq9bqbrA" name="T"/>
              <packagedElement xmi:type="uml:Package" xmi:id="_I2IhUIB2EeiyN7Yq9bqbrA" name="modelEvent">
                <packagedElement xmi:type="uml:Class" xmi:id="_I2JIYIB2EeiyN7Yq9bqbrA" name="PlayerChangedEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I2JvcIB2EeiyN7Yq9bqbrA" general="_I2JIYYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I2JvcYB2EeiyN7Yq9bqbrA" name="playerImmutable" visibility="private" isLeaf="true" type="_Iz9-IYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2PPAIB2EeiyN7Yq9bqbrA" name="PlayerChangedEvent" specification="_I2K9kIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.playerImmutable = playerImmutable;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2SSUIB2EeiyN7Yq9bqbrA" name="PlayerChangedEvent" specification="_I2P2EIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    JSONObject jsonObject = new JSONObject(json);
    playerImmutable = PlayerImmutable.fromJSON(jsonObject.getJSONObject(&quot;playerImmutable&quot;));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2S5YYB2EeiyN7Yq9bqbrA" name="getPlayerImmutable" specification="_I2SSUYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return playerImmutable;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2UHgYB2EeiyN7Yq9bqbrA" name="visit" specification="_I2TgcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    gameTable.handlePlayerChanged(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2VVoIB2EeiyN7Yq9bqbrA" name="visit" specification="_I2UukIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2WjwIB2EeiyN7Yq9bqbrA" name="visit" specification="_I2V8sIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    selectSchemaCardFace.handlePlayerCanged(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2Xx4YB2EeiyN7Yq9bqbrA" name="filter" specification="_I2XK0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (!playername.equals(playerImmutable.getName())) {
        return new PlayerChangedEvent(getEmitterName(), getReceiver(), getPlayerName(), playerImmutable.obtainFilteredInstance());
    }
    return this;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2ZAAIB2EeiyN7Yq9bqbrA" name="toJSON" specification="_I2YY8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return super.toJSON();
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2K9kIB2EeiyN7Yq9bqbrA" name="PlayerChangedEvent" visibility="public" method="_I2PPAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2NZ0IB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2OA4IB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2On8IB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2On8YB2EeiyN7Yq9bqbrA" name="playerImmutable" type="_Iz9-IYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2P2EIB2EeiyN7Yq9bqbrA" name="PlayerChangedEvent" visibility="public" method="_I2SSUIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2RrQIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2SSUYB2EeiyN7Yq9bqbrA" name="getPlayerImmutable" visibility="public" method="_I2S5YYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2S5YIB2EeiyN7Yq9bqbrA" type="_Iz9-IYB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2TgcIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I2UHgYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2UHgIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2UukIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I2VVoIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2UukYB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2V8sIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I2WjwIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2V8sYB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2XK0IB2EeiyN7Yq9bqbrA" name="filter" visibility="public" method="_I2Xx4YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2XK0YB2EeiyN7Yq9bqbrA" type="_I2JIYIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2Xx4IB2EeiyN7Yq9bqbrA" name="playername" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2YY8IB2EeiyN7Yq9bqbrA" name="toJSON" visibility="public" method="_I2ZAAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2YY8YB2EeiyN7Yq9bqbrA" type="_IvIhcoB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I2JIYYB2EeiyN7Yq9bqbrA" name="ModelEvent" visibility="public" isAbstract="true">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I3OtgIB2EeiyN7Yq9bqbrA" general="_IvMy4YB2EeiyN7Yq9bqbrA"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_I3PUkIB2EeiyN7Yq9bqbrA" name="ModelEvent implements VisitableFromView" client="_I2JIYYB2EeiyN7Yq9bqbrA" supplier="_IvMy44B2EeiyN7Yq9bqbrA" contract="_IvMy44B2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3S-8YB2EeiyN7Yq9bqbrA" name="ModelEvent" specification="_I3P7oIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3WCQIB2EeiyN7Yq9bqbrA" name="ModelEvent" specification="_I3TmAIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3P7oIB2EeiyN7Yq9bqbrA" name="ModelEvent" visibility="protected" method="_I3S-8YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3Rw0IB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3SX4IB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3S-8IB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3TmAIB2EeiyN7Yq9bqbrA" name="ModelEvent" visibility="protected" method="_I3WCQIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3VbMIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I2aOIIB2EeiyN7Yq9bqbrA" name="TurnChangedEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I2aOIYB2EeiyN7Yq9bqbrA" general="_I2JIYYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I2a1MIB2EeiyN7Yq9bqbrA" name="round" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I2bcQIB2EeiyN7Yq9bqbrA" name="direction" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I2bcQYB2EeiyN7Yq9bqbrA" name="dicePlaced" visibility="private" isLeaf="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I2cDUIB2EeiyN7Yq9bqbrA" name="toolcardUsed" visibility="private" isLeaf="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2hi4IB2EeiyN7Yq9bqbrA" name="TurnChangedEvent" specification="_I2dRcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.round = round;
    this.direction = direction;
    this.dicePlaced = dicePlaced;
    this.toolcardUsed = toolcardUsed;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2kmMYB2EeiyN7Yq9bqbrA" name="TurnChangedEvent" specification="_I2iJ8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    JSONObject jsonObject = new JSONObject(json);
    round = jsonObject.getInt(&quot;round&quot;);
    direction = jsonObject.getBoolean(&quot;direction&quot;);
    dicePlaced = jsonObject.getBoolean(&quot;dicePlaced&quot;);
    toolcardUsed = jsonObject.getBoolean(&quot;toolcardUsed&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2mbYIB2EeiyN7Yq9bqbrA" name="getRound" specification="_I2l0UIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return round;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2npgIB2EeiyN7Yq9bqbrA" name="getDirection" specification="_I2nCcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return direction;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2o3oIB2EeiyN7Yq9bqbrA" name="visit" specification="_I2oQkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    gameTable.handleTurnChanged(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2qFwYB2EeiyN7Yq9bqbrA" name="visit" specification="_I2pesIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2rT4YB2EeiyN7Yq9bqbrA" name="visit" specification="_I2qs0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2siAIB2EeiyN7Yq9bqbrA" name="isDicePlaced" specification="_I2r68IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return dicePlaced;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I2twIIB2EeiyN7Yq9bqbrA" name="isToolcardUsed" specification="_I2tJEIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return toolcardUsed;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2dRcIB2EeiyN7Yq9bqbrA" name="TurnChangedEvent" visibility="public" method="_I2hi4IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2fGoIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2fGoYB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2ftsIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2gUwIB2EeiyN7Yq9bqbrA" name="round">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2gUwYB2EeiyN7Yq9bqbrA" name="direction">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2g70IB2EeiyN7Yq9bqbrA" name="dicePlaced">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2g70YB2EeiyN7Yq9bqbrA" name="toolcardUsed">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2iJ8IB2EeiyN7Yq9bqbrA" name="TurnChangedEvent" visibility="public" method="_I2kmMYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2kmMIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2l0UIB2EeiyN7Yq9bqbrA" name="getRound" visibility="public" method="_I2mbYIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2l0UYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2nCcIB2EeiyN7Yq9bqbrA" name="getDirection" visibility="public" method="_I2npgIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2nCcYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2oQkIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I2o3oIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2oQkYB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2pesIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I2qFwYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2qFwIB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2qs0IB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I2rT4YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2rT4IB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2r68IB2EeiyN7Yq9bqbrA" name="isDicePlaced" visibility="public" method="_I2siAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2r68YB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2tJEIB2EeiyN7Yq9bqbrA" name="isToolcardUsed" visibility="public" method="_I2twIIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2tJEYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I2u-QIB2EeiyN7Yq9bqbrA" name="ToolCardChangedEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I2u-QYB2EeiyN7Yq9bqbrA" general="_I2JIYYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I2vlUIB2EeiyN7Yq9bqbrA" name="toolCardImmutable" visibility="private" isLeaf="true" type="_I0bRIIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I2wMYIB2EeiyN7Yq9bqbrA" name="index" visibility="private" isLeaf="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I20d0YB2EeiyN7Yq9bqbrA" name="ToolCardChangedEvent" specification="_I2wzcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.toolCardImmutable = toolCardImmutable;
    this.index = index;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I23hIYB2EeiyN7Yq9bqbrA" name="ToolCardChangedEvent" specification="_I21E4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    JSONObject jsonObject = new JSONObject(json);
    index = jsonObject.getInt(&quot;index&quot;);
    toolCardImmutable = ToolCardImmutable.fromJSON(jsonObject.getJSONObject(&quot;toolCardImmutable&quot;));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I24vQYB2EeiyN7Yq9bqbrA" name="getIndex" specification="_I24IMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return index;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I259YYB2EeiyN7Yq9bqbrA" name="getToolCardImmutable" specification="_I25WUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return toolCardImmutable;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I27LgIB2EeiyN7Yq9bqbrA" name="visit" specification="_I26kcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    gameTable.handleToolcardChanged(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I28ZoIB2EeiyN7Yq9bqbrA" name="visit" specification="_I27ykIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I29nwIB2EeiyN7Yq9bqbrA" name="visit" specification="_I29AsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I2wzcIB2EeiyN7Yq9bqbrA" name="ToolCardChangedEvent" visibility="public" method="_I20d0YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2yooIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2zPsIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2z2wIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I2z2wYB2EeiyN7Yq9bqbrA" name="toolCardImmutable" type="_I0bRIIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I20d0IB2EeiyN7Yq9bqbrA" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I21E4IB2EeiyN7Yq9bqbrA" name="ToolCardChangedEvent" visibility="public" method="_I23hIYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I23hIIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I24IMIB2EeiyN7Yq9bqbrA" name="getIndex" visibility="public" method="_I24vQYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I24vQIB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I25WUIB2EeiyN7Yq9bqbrA" name="getToolCardImmutable" visibility="public" method="_I259YYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I259YIB2EeiyN7Yq9bqbrA" type="_I0bRIIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I26kcIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I27LgIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I26kcYB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I27ykIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I28ZoIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I27ykYB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I29AsIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I29nwIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I29AsYB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I2-14IB2EeiyN7Yq9bqbrA" name="DiceHolderChangedEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I2_c8IB2EeiyN7Yq9bqbrA" general="_I2JIYYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I2_c8YB2EeiyN7Yq9bqbrA" name="diceHolderImmutable" visibility="private" isLeaf="true" type="_I0N1wIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3EVcIB2EeiyN7Yq9bqbrA" name="DiceHolderChangedEvent" specification="_I3ArEIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.diceHolderImmutable = diceHolderImmutable;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3GxsYB2EeiyN7Yq9bqbrA" name="DiceHolderChangedEvent" specification="_I3E8gIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    diceHolderImmutable = DiceHolderImmutable.fromJSON(new JSONObject(json).getJSONObject(&quot;diceHolderImmutable&quot;));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3H_0YB2EeiyN7Yq9bqbrA" name="getDiceHolderImmutable" specification="_I3HYwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return diceHolderImmutable;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3JN8IB2EeiyN7Yq9bqbrA" name="visit" specification="_I3Im4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    gameTable.handleDiceHolderChanged(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3KcEIB2EeiyN7Yq9bqbrA" name="visit" specification="_I3J1AIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3LDIoB2EeiyN7Yq9bqbrA" name="visit" specification="_I3LDIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3MRQYB2EeiyN7Yq9bqbrA" name="toJSON" specification="_I3LqMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    JSONObject jsonObject = super.toJSON();
    jsonObject.put(&quot;diceHolderImmutable&quot;, getDiceHolderImmutable().toJSON());
    return jsonObject;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3ArEIB2EeiyN7Yq9bqbrA" name="DiceHolderChangedEvent" visibility="public" method="_I3EVcIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3CgQIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3DHUIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3DuYIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3DuYYB2EeiyN7Yq9bqbrA" name="diceHolderImmutable" type="_I0N1wIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3E8gIB2EeiyN7Yq9bqbrA" name="DiceHolderChangedEvent" visibility="public" method="_I3GxsYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3GxsIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3HYwIB2EeiyN7Yq9bqbrA" name="getDiceHolderImmutable" visibility="public" method="_I3H_0YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3H_0IB2EeiyN7Yq9bqbrA" type="_I0N1wIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3Im4IB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I3JN8IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3Im4YB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3J1AIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I3KcEIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3J1AYB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3LDIIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I3LDIoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3LDIYB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3LqMIB2EeiyN7Yq9bqbrA" name="toJSON" visibility="public" method="_I3MRQYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3MRQIB2EeiyN7Yq9bqbrA" type="_IvIhcoB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I3XQYIB2EeiyN7Yq9bqbrA" name="PublicObjectiveEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I3XQYYB2EeiyN7Yq9bqbrA" general="_I2JIYYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I3X3cIB2EeiyN7Yq9bqbrA" name="publicObjective" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I3YegIB2EeiyN7Yq9bqbrA" name="index" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3cI4YB2EeiyN7Yq9bqbrA" name="PublicObjectiveEvent" specification="_I3ZFkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.publicObjective = publicObjective.getClass().getSimpleName();
    this.index = index;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3fMMIB2EeiyN7Yq9bqbrA" name="PublicObjectiveEvent" specification="_I3cv8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    JSONObject jsonObject = new JSONObject(json);
    publicObjective = jsonObject.getString(&quot;publicObjective&quot;);
    index = jsonObject.getInt(&quot;index&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3gaUIB2EeiyN7Yq9bqbrA" name="visit" specification="_I3fzQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    gameTable.handlePublicObjective(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3hBYYB2EeiyN7Yq9bqbrA" name="visit" specification="_I3gaUYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3iPgYB2EeiyN7Yq9bqbrA" name="visit" specification="_I3hocIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3jdoYB2EeiyN7Yq9bqbrA" name="getPublicObjective" specification="_I3i2kIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return publicObjective;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3krwIB2EeiyN7Yq9bqbrA" name="getIndex" specification="_I3kEsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return index;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3ZFkIB2EeiyN7Yq9bqbrA" name="PublicObjectiveEvent" visibility="public" method="_I3cI4YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3a6wIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3a6wYB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3bh0IB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3bh0YB2EeiyN7Yq9bqbrA" name="publicObjective" type="_I0lCIIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3cI4IB2EeiyN7Yq9bqbrA" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3cv8IB2EeiyN7Yq9bqbrA" name="PublicObjectiveEvent" visibility="public" method="_I3fMMIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3elIIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3fzQIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I3gaUIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3fzQYB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3gaUYB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I3hBYYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3hBYIB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3hocIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I3iPgYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3iPgIB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3i2kIB2EeiyN7Yq9bqbrA" name="getPublicObjective" visibility="public" method="_I3jdoYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3jdoIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3kEsIB2EeiyN7Yq9bqbrA" name="getIndex" visibility="public" method="_I3krwIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3kEsYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I3l54IB2EeiyN7Yq9bqbrA" name="DraftBoardChangedEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I3l54YB2EeiyN7Yq9bqbrA" general="_I2JIYYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I3mg8IB2EeiyN7Yq9bqbrA" name="draftBoardImmutable" visibility="private" type="_IztfcYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3qyYYB2EeiyN7Yq9bqbrA" name="DraftBoardChangedEvent" specification="_I3mg8YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.draftBoardImmutable = draftBoardImmutable;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3sAgIB2EeiyN7Yq9bqbrA" name="getDraftBoardImmutable" specification="_I3rZcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return draftBoardImmutable;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3ucwYB2EeiyN7Yq9bqbrA" name="DraftBoardChangedEvent" specification="_I3snkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    draftBoardImmutable = DraftBoardImmutable.fromJson(new JSONObject(json).getJSONObject(&quot;draftBoardImmutable&quot;));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3vD0oB2EeiyN7Yq9bqbrA" name="visit" specification="_I3vD0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    gameTable.handleDraftBoardChanged(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3vq4YB2EeiyN7Yq9bqbrA" name="visit" specification="_I3vD04B2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3wR8IB2EeiyN7Yq9bqbrA" name="visit" specification="_I3vq4oB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3mg8YB2EeiyN7Yq9bqbrA" name="DraftBoardChangedEvent" visibility="public" method="_I3qyYYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3o9MIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3pkQIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3qLUIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3qyYIB2EeiyN7Yq9bqbrA" name="draftBoardImmutable" type="_IztfcYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3rZcIB2EeiyN7Yq9bqbrA" name="getDraftBoardImmutable" visibility="public" method="_I3sAgIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3rZcYB2EeiyN7Yq9bqbrA" type="_IztfcYB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3snkIB2EeiyN7Yq9bqbrA" name="DraftBoardChangedEvent" visibility="public" method="_I3ucwYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3ucwIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3vD0IB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I3vD0oB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3vD0YB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3vD04B2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I3vq4YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3vq4IB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3vq4oB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I3wR8IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3vq44B2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_I3w5AIB2EeiyN7Yq9bqbrA" name="SchemaChangedEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_I3xgEIB2EeiyN7Yq9bqbrA" general="_I2JIYYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_I3yHIIB2EeiyN7Yq9bqbrA" name="schema" visibility="private" type="_IzxJ0IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I32YkIB2EeiyN7Yq9bqbrA" name="SchemaChangedEvent" specification="_I3yuMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.schema = schema;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I36C8IB2EeiyN7Yq9bqbrA" name="SchemaChangedEvent" specification="_I32_oIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    if (!new JSONObject(json).isNull(&quot;schema&quot;)) {
        schema = Schema.fromJSON(new JSONObject(json).getJSONObject(&quot;schema&quot;));
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I36qAYB2EeiyN7Yq9bqbrA" name="getSchema" specification="_I36C8YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return schema;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I38fMIB2EeiyN7Yq9bqbrA" name="visit" specification="_I37REIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    gameTable.handleSchemaChanged(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I39tUIB2EeiyN7Yq9bqbrA" name="visit" specification="_I39GQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I3-7cYB2EeiyN7Yq9bqbrA" name="visit" specification="_I3-UYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_I4AwoIB2EeiyN7Yq9bqbrA" name="toJSON" specification="_I3_igIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    JSONObject jsonObject = super.toJSON();
    jsonObject.put(&quot;schema&quot;, getSchema() == null ? null : getSchema().toJSON());
    return jsonObject;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3yuMIB2EeiyN7Yq9bqbrA" name="SchemaChangedEvent" visibility="public" method="_I32YkIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I30jYIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I31KcIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I31xgIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I31xgYB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I32_oIB2EeiyN7Yq9bqbrA" name="SchemaChangedEvent" visibility="public" method="_I36C8IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I35b4IB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I36C8YB2EeiyN7Yq9bqbrA" name="getSchema" visibility="public" method="_I36qAYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I36qAIB2EeiyN7Yq9bqbrA" type="_IzxJ0IB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I37REIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I38fMIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I374IIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I39GQIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I39tUIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I39GQYB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3-UYIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_I3-7cYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I3-7cIB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_I3_igIB2EeiyN7Yq9bqbrA" name="toJSON" visibility="public" method="_I4AwoIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_I4AJkIB2EeiyN7Yq9bqbrA" type="_IvIhcoB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_Itx2kIB2EeiyN7Yq9bqbrA" name="view">
              <packagedElement xmi:type="uml:Class" xmi:id="_ItydoIB2EeiyN7Yq9bqbrA" name="View" visibility="public" isAbstract="true">
                <generalization xmi:type="uml:Generalization" xmi:id="_JcuAMIB2EeiyN7Yq9bqbrA" general="_I0kbEIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JcvOUIB2EeiyN7Yq9bqbrA" name="player" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JcvOUYB2EeiyN7Yq9bqbrA" name="connected" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Jcv1YIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>true</body>
                  </defaultValue>
                </ownedAttribute>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JcunQIB2EeiyN7Yq9bqbrA" name="View implements Observer" client="_ItydoIB2EeiyN7Yq9bqbrA" supplier="_JOhzMIB2EeiyN7Yq9bqbrA" contract="_JOhzMIB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JcxqkYB2EeiyN7Yq9bqbrA" name="View" specification="_Jcv1YYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.player = player;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jcy4sYB2EeiyN7Yq9bqbrA" name="getPlayer" specification="_JcyRoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return player;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JczfwoB2EeiyN7Yq9bqbrA" name="isConnected" specification="_JczfwIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return connected;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jc0G0oB2EeiyN7Yq9bqbrA" name="setConnected" specification="_Jc0G0IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.connected = connected;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Jcv1YYB2EeiyN7Yq9bqbrA" name="View" visibility="public" method="_JcxqkYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JcxqkIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JcyRoIB2EeiyN7Yq9bqbrA" name="getPlayer" visibility="public" method="_Jcy4sYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jcy4sIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JczfwIB2EeiyN7Yq9bqbrA" name="isConnected" visibility="public" method="_JczfwoB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JczfwYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Jc0G0IB2EeiyN7Yq9bqbrA" name="setConnected" visibility="protected" method="_Jc0G0oB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jc0G0YB2EeiyN7Yq9bqbrA" name="connected">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_IuSz8IB2EeiyN7Yq9bqbrA" name="viewEvent">
                <packagedElement xmi:type="uml:Class" xmi:id="_IuSz8YB2EeiyN7Yq9bqbrA" name="ViewEvent" visibility="public" isAbstract="true">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JygqAIB2EeiyN7Yq9bqbrA" general="_IvMy4YB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyjGQIB2EeiyN7Yq9bqbrA" name="ViewEvent" specification="_JygqAYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jyk7cIB2EeiyN7Yq9bqbrA" name="ViewEvent" specification="_JyjGQYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JygqAYB2EeiyN7Yq9bqbrA" name="ViewEvent" visibility="protected" method="_JyjGQIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jyh4IYB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyifMIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyifMYB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyjGQYB2EeiyN7Yq9bqbrA" name="ViewEvent" visibility="public" method="_Jyk7cIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JykUYYB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jyk7cYB2EeiyN7Yq9bqbrA" name="visit" visibility="public" isAbstract="true">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyligIB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyligYB2EeiyN7Yq9bqbrA" name="state" type="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Ixpp8IB2EeiyN7Yq9bqbrA" name="UseToolcardEvent" visibility="public" isAbstract="true">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JzT7QIB2EeiyN7Yq9bqbrA" general="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JzUiUIB2EeiyN7Yq9bqbrA" name="toolCardIndex" visibility="private" isLeaf="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzceJIB2EeiyN7Yq9bqbrA" name="UseToolcardEvent" specification="_JzVJYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.toolCardIndex = toolCardIndex;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzeTUYB2EeiyN7Yq9bqbrA" name="UseToolcardEvent" specification="_JzdFMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    toolCardIndex = new JSONObject(json).getInt(&quot;toolCardIndex&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jze6YoB2EeiyN7Yq9bqbrA" name="getToolCardIndex" specification="_Jze6YIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return toolCardIndex;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzgIgIB2EeiyN7Yq9bqbrA" name="visit" specification="_JzfhcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return state.handleToolcardEvent(this);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzVJYIB2EeiyN7Yq9bqbrA" name="UseToolcardEvent" visibility="protected" method="_JzceJIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzceIIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzceIYB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzceIoB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzceI4B2EeiyN7Yq9bqbrA" name="toolCardIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzdFMIB2EeiyN7Yq9bqbrA" name="UseToolcardEvent" visibility="protected" method="_JzeTUYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzeTUIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jze6YIB2EeiyN7Yq9bqbrA" name="getToolCardIndex" visibility="public" method="_Jze6YoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jze6YYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzfhcIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_JzgIgIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzfhcYB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzfhcoB2EeiyN7Yq9bqbrA" name="state" type="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_IxtUUoB2EeiyN7Yq9bqbrA" name="PlayerDisconnectedEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JyBh0IB2EeiyN7Yq9bqbrA" general="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyD-EoB2EeiyN7Yq9bqbrA" name="PlayerDisconnectedEvent" specification="_JyCI4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyFzQYB2EeiyN7Yq9bqbrA" name="PlayerDisconnectedEvent" specification="_JyElIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyHBYIB2EeiyN7Yq9bqbrA" name="visit" specification="_JyGaUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return state.handlePlayerDisconnected(this);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyCI4IB2EeiyN7Yq9bqbrA" name="PlayerDisconnectedEvent" visibility="public" method="_JyD-EoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyDXAYB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyD-EIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyD-EYB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyElIIB2EeiyN7Yq9bqbrA" name="PlayerDisconnectedEvent" visibility="public" method="_JyFzQYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyFzQIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyGaUIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_JyHBYIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyGaUYB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyGaUoB2EeiyN7Yq9bqbrA" name="state" type="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Iy7cUIB2EeiyN7Yq9bqbrA" name="SchemaCardSelectedEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JyNvEIB2EeiyN7Yq9bqbrA" general="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JyOWIIB2EeiyN7Yq9bqbrA" name="side" visibility="private" isLeaf="true" type="_JEVVYIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JyO9MIB2EeiyN7Yq9bqbrA" name="schemaCardId" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JySAgIB2EeiyN7Yq9bqbrA" name="SchemaCardSelectedEvent" specification="_JyPkQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.side = side;
    if (schemaCardId >= 0 &amp;&amp; schemaCardId &lt; 2) {
        this.schemaCardId = schemaCardId;
    } else
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: number must be between 0 and 1.&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyT1sYB2EeiyN7Yq9bqbrA" name="SchemaCardSelectedEvent" specification="_JySAgYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    JSONObject jsonObject = new JSONObject(json);
    schemaCardId = jsonObject.getInt(&quot;schemaCardId&quot;);
    Side toAssign = null;
    String sideJson = jsonObject.getString(&quot;side&quot;);
    for (Side tempSide : Side.values()) {
        if (sideJson.equalsIgnoreCase(tempSide.toString())) {
            toAssign = tempSide;
        }
    }
    side = toAssign;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyUcwoB2EeiyN7Yq9bqbrA" name="getSchemaCardId" specification="_JyUcwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return schemaCardId;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyVq4YB2EeiyN7Yq9bqbrA" name="getSide" specification="_JyVD0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return side;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyWR8YB2EeiyN7Yq9bqbrA" name="visit" specification="_JyVq4oB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return state.handleSchemaCardSelectedEvent(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyW5AIB2EeiyN7Yq9bqbrA" name="main" specification="_JyWR8oB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.println(new SchemaCardSelectedEvent(&quot;emitter&quot;, &quot;receiver&quot;, &quot;player&quot;, 1, Side.FRONT).toJSON().toString());
    System.out.println(new SchemaCardSelectedEvent(new SchemaCardSelectedEvent(&quot;emitter&quot;, &quot;receiver&quot;, &quot;player&quot;, 1, Side.FRONT).toJSON().toString()).toJSON().toString());
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyPkQIB2EeiyN7Yq9bqbrA" name="SchemaCardSelectedEvent" visibility="public" method="_JySAgIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyQyYIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyQyYYB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyRZcIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyRZcYB2EeiyN7Yq9bqbrA" name="schemaCardId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyRZcoB2EeiyN7Yq9bqbrA" name="side" type="_JEVVYIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JySAgYB2EeiyN7Yq9bqbrA" name="SchemaCardSelectedEvent" visibility="public" method="_JyT1sYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyT1sIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyUcwIB2EeiyN7Yq9bqbrA" name="getSchemaCardId" visibility="public" method="_JyUcwoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyUcwYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyVD0IB2EeiyN7Yq9bqbrA" name="getSide" visibility="public" method="_JyVq4YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyVq4IB2EeiyN7Yq9bqbrA" type="_JEVVYIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyVq4oB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_JyWR8YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyVq44B2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyWR8IB2EeiyN7Yq9bqbrA" name="state" type="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyWR8oB2EeiyN7Yq9bqbrA" name="main" visibility="public" isStatic="true" method="_JyW5AIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyWR84B2EeiyN7Yq9bqbrA" name="a" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JxjAsIB2EeiyN7Yq9bqbrA" name="DiceActionEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JxjAsYB2EeiyN7Yq9bqbrA" general="_Ixpp8IB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxjAsoB2EeiyN7Yq9bqbrA" name="dicePosition" visibility="private" isLeaf="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxmrEYB2EeiyN7Yq9bqbrA" name="DiceActionEvent" specification="_JxjnwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, receiver, player, toolCardIndex);
    this.dicePosition = dicePosition;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxpHUIB2EeiyN7Yq9bqbrA" name="DiceActionEvent" specification="_JxnSIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super((json));
    dicePosition = new JSONObject(json).getInt(&quot;dicePosition&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxpuYYB2EeiyN7Yq9bqbrA" name="getDicePosition" specification="_JxpHUYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return dicePosition;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxjnwIB2EeiyN7Yq9bqbrA" name="DiceActionEvent" visibility="public" method="_JxmrEYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jxlc8IB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jxlc8YB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxmEAIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxmEAYB2EeiyN7Yq9bqbrA" name="toolCardIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxmrEIB2EeiyN7Yq9bqbrA" name="dicePosition">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxnSIIB2EeiyN7Yq9bqbrA" name="DiceActionEvent" visibility="public" method="_JxpHUIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxogQIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxpHUYB2EeiyN7Yq9bqbrA" name="getDicePosition" visibility="public" method="_JxpuYYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxpuYIB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JxqVcIB2EeiyN7Yq9bqbrA" name="DoubleMoveOfColorDiceEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Jxq8gYB2EeiyN7Yq9bqbrA" general="_Jxq8gIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxrjkIB2EeiyN7Yq9bqbrA" name="color" visibility="private" type="_JACEMIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxxDIYB2EeiyN7Yq9bqbrA" name="DoubleMoveOfColorDiceEvent" specification="_JxtYwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, receiver, player, position, source1, destination1, source2, destination2);
    this.color = color;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jxy4UYB2EeiyN7Yq9bqbrA" name="DoubleMoveOfColorDiceEvent" specification="_JxxqMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    String colorString = new JSONObject(json).getString(&quot;color&quot;);
    for (GameColor gc : GameColor.values()) {
        if (colorString.equalsIgnoreCase(gc.toString())) {
            color = gc;
        }
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jx0GcIB2EeiyN7Yq9bqbrA" name="getColor" specification="_JxzfYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return color;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxtYwIB2EeiyN7Yq9bqbrA" name="DoubleMoveOfColorDiceEvent" visibility="public" method="_JxxDIYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxvN8IB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxvN8YB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxvN8oB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxvN84B2EeiyN7Yq9bqbrA" name="position">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jxv1AIB2EeiyN7Yq9bqbrA" name="source1" type="_JxsKoIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jxv1AYB2EeiyN7Yq9bqbrA" name="destination1" type="_JxsKoIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxwcEIB2EeiyN7Yq9bqbrA" name="source2" type="_JxsKoIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxwcEYB2EeiyN7Yq9bqbrA" name="destination2" type="_JxsKoIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxxDIIB2EeiyN7Yq9bqbrA" name="color" type="_JACEMIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxxqMIB2EeiyN7Yq9bqbrA" name="DoubleMoveOfColorDiceEvent" visibility="public" method="_Jxy4UYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jxy4UIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxzfYIB2EeiyN7Yq9bqbrA" name="getColor" visibility="public" method="_Jx0GcIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxzfYYB2EeiyN7Yq9bqbrA" type="_JACEMIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jxq8gIB2EeiyN7Yq9bqbrA" name="DoubleMoveDiceEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JyteUIB2EeiyN7Yq9bqbrA" general="_Ixpp8IB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JyuFYIB2EeiyN7Yq9bqbrA" name="source" visibility="private" isLeaf="true" type="_JxsKoIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JyuFYYB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new Point[2]</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JyuscIB2EeiyN7Yq9bqbrA" name="destination" visibility="private" isLeaf="true" type="_JxsKoIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JyuscYB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new Point[2]</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyyW0oB2EeiyN7Yq9bqbrA" name="DoubleMoveDiceEvent" specification="_JyvTgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, receiver, player, position);
    this.source[0] = source1;
    this.destination[0] = destination1;
    this.source[1] = source2;
    this.destination[1] = destination2;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jy0MAYB2EeiyN7Yq9bqbrA" name="DoubleMoveDiceEvent" specification="_Jyy94IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    JSONObject jsonObject = new JSONObject(json);
    JSONArray sourceJson = jsonObject.getJSONArray(&quot;source&quot;);
    JSONArray destinationJson = jsonObject.getJSONArray(&quot;destination&quot;);
    source[0] = Utils.decodePosition(sourceJson.getJSONObject(0));
    source[1] = Utils.decodePosition(sourceJson.getJSONObject(1));
    destination[0] = Utils.decodePosition(destinationJson.getJSONObject(0));
    destination[1] = Utils.decodePosition(destinationJson.getJSONObject(1));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jy1aIYB2EeiyN7Yq9bqbrA" name="getSource" specification="_Jy0zEIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (pos &lt; 0 || pos > 2)
        throw new IllegalArgumentException(&quot;Position should be 0 or 1&quot;);
    return source[pos];
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jy2BMoB2EeiyN7Yq9bqbrA" name="getDestination" specification="_Jy1aIoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (pos &lt; 0 || pos > 2)
        throw new IllegalArgumentException(&quot;Position should be 0 or 1&quot;);
    return destination[pos];
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jy3PUIB2EeiyN7Yq9bqbrA" name="toJSON" specification="_Jy2oQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    JSONObject jsonObject = super.toJSON();
    JSONArray source = new JSONArray();
    JSONArray destination = new JSONArray();
    source.put(new JSONObject(getSource(0)));
    source.put(new JSONObject(getSource(1)));
    destination.put(new JSONObject(getDestination(0)));
    destination.put(new JSONObject(getDestination(1)));
    jsonObject.put(&quot;source&quot;, source);
    jsonObject.put(&quot;destination&quot;, destination);
    return jsonObject;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyvTgIB2EeiyN7Yq9bqbrA" name="DoubleMoveDiceEvent" visibility="public" method="_JyyW0oB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JywhoIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyxIsIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyxIsYB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyxIsoB2EeiyN7Yq9bqbrA" name="position">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyxvwIB2EeiyN7Yq9bqbrA" name="source1" type="_JxsKoIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyxvwYB2EeiyN7Yq9bqbrA" name="destination1" type="_JxsKoIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyyW0IB2EeiyN7Yq9bqbrA" name="source2" type="_JxsKoIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyyW0YB2EeiyN7Yq9bqbrA" name="destination2" type="_JxsKoIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jyy94IB2EeiyN7Yq9bqbrA" name="DoubleMoveDiceEvent" visibility="public" method="_Jy0MAYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jy0MAIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jy0zEIB2EeiyN7Yq9bqbrA" name="getSource" visibility="public" method="_Jy1aIYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jy0zEYB2EeiyN7Yq9bqbrA" type="_JxsKoIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jy1aIIB2EeiyN7Yq9bqbrA" name="pos">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jy1aIoB2EeiyN7Yq9bqbrA" name="getDestination" visibility="public" method="_Jy2BMoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jy2BMIB2EeiyN7Yq9bqbrA" type="_JxsKoIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jy2BMYB2EeiyN7Yq9bqbrA" name="pos">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jy2oQIB2EeiyN7Yq9bqbrA" name="toJSON" visibility="public" method="_Jy3PUIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jy2oQYB2EeiyN7Yq9bqbrA" type="_IvIhcoB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JxsKoIB2EeiyN7Yq9bqbrA" name="Point"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jx0tgIB2EeiyN7Yq9bqbrA" name="CancelActionEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Jx0tgYB2EeiyN7Yq9bqbrA" general="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jx3JwoB2EeiyN7Yq9bqbrA" name="CancelActionEvent" specification="_Jx1UkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jx4-8oB2EeiyN7Yq9bqbrA" name="CancelActionEvent" specification="_Jx3w0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jx5mA4B2EeiyN7Yq9bqbrA" name="visit" specification="_Jx5mAIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return state.handleUserCancelEvent();
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jx1UkIB2EeiyN7Yq9bqbrA" name="CancelActionEvent" visibility="public" method="_Jx3JwoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jx2isIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jx3JwIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jx3JwYB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jx3w0IB2EeiyN7Yq9bqbrA" name="CancelActionEvent" visibility="public" method="_Jx4-8oB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jx4-8YB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jx5mAIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_Jx5mA4B2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jx5mAYB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jx5mAoB2EeiyN7Yq9bqbrA" name="state" type="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jx6NEIB2EeiyN7Yq9bqbrA" name="ChangeDiceNumberEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Jx6NEYB2EeiyN7Yq9bqbrA" general="_JxjAsIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jx60IIB2EeiyN7Yq9bqbrA" name="number" visibility="private" isLeaf="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jx-egIB2EeiyN7Yq9bqbrA" name="ChangeDiceNumberEvent" specification="_Jx7bMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, receiver, player, toolCardIndex, dicePosition);
    this.number = number;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyATsYB2EeiyN7Yq9bqbrA" name="ChangeDiceNumberEvent" specification="_Jx-egYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    this.number = new JSONObject(json).getInt(&quot;number&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyA6wYB2EeiyN7Yq9bqbrA" name="getNumber" specification="_JyATsoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return number;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jx7bMIB2EeiyN7Yq9bqbrA" name="ChangeDiceNumberEvent" visibility="public" method="_Jx-egIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jx8pUIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jx9QYIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jx9QYYB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jx93cIB2EeiyN7Yq9bqbrA" name="toolCardIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jx93cYB2EeiyN7Yq9bqbrA" name="dicePosition">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jx93coB2EeiyN7Yq9bqbrA" name="number">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jx-egYB2EeiyN7Yq9bqbrA" name="ChangeDiceNumberEvent" visibility="public" method="_JyATsYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyATsIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyATsoB2EeiyN7Yq9bqbrA" name="getNumber" visibility="public" method="_JyA6wYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyA6wIB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JyHocIB2EeiyN7Yq9bqbrA" name="MoveDiceEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JyHocYB2EeiyN7Yq9bqbrA" general="_Ixpp8IB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JyIPgIB2EeiyN7Yq9bqbrA" name="source" visibility="private" isLeaf="true" type="_JxsKoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JyIPgYB2EeiyN7Yq9bqbrA" name="destination" visibility="private" isLeaf="true" type="_JxsKoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyLS0oB2EeiyN7Yq9bqbrA" name="MoveDiceEvent" specification="_JyI2kIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, receiver, player, position);
    this.source = source;
    this.destination = destination;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyMg8oB2EeiyN7Yq9bqbrA" name="MoveDiceEvent" specification="_JyLS04B2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    JSONObject jsonObject = new JSONObject(json);
    source = Utils.decodePosition(jsonObject.getJSONObject(&quot;source&quot;));
    destination = Utils.decodePosition(jsonObject.getJSONObject(&quot;destination&quot;));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyNIAYB2EeiyN7Yq9bqbrA" name="getSource" specification="_JyMg84B2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return source;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyNIBIB2EeiyN7Yq9bqbrA" name="getDestination" specification="_JyNIAoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return destination;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyNIB4B2EeiyN7Yq9bqbrA" name="toJSON" specification="_JyNIBYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    JSONObject jsonObject = super.toJSON();
    jsonObject.put(&quot;source&quot;, new JSONObject(source));
    jsonObject.put(&quot;destination&quot;, new JSONObject(destination));
    return jsonObject;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyI2kIB2EeiyN7Yq9bqbrA" name="MoveDiceEvent" visibility="public" method="_JyLS0oB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyKEsYB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyKrwIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyKrwYB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyKrwoB2EeiyN7Yq9bqbrA" name="position">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyLS0IB2EeiyN7Yq9bqbrA" name="source" type="_JxsKoIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyLS0YB2EeiyN7Yq9bqbrA" name="destination" type="_JxsKoIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyLS04B2EeiyN7Yq9bqbrA" name="MoveDiceEvent" visibility="public" method="_JyMg8oB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyMg8YB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyMg84B2EeiyN7Yq9bqbrA" name="getSource" visibility="public" method="_JyNIAYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyNIAIB2EeiyN7Yq9bqbrA" type="_JxsKoIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyNIAoB2EeiyN7Yq9bqbrA" name="getDestination" visibility="public" method="_JyNIBIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyNIA4B2EeiyN7Yq9bqbrA" type="_JxsKoIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyNIBYB2EeiyN7Yq9bqbrA" name="toJSON" visibility="public" method="_JyNIB4B2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyNIBoB2EeiyN7Yq9bqbrA" type="_IvIhcoB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JyXgEIB2EeiyN7Yq9bqbrA" name="PlaceAnotherDiceEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JyXgEYB2EeiyN7Yq9bqbrA" general="_Ixpp8IB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JyXgEoB2EeiyN7Yq9bqbrA" name="point" visibility="private" type="_JxsKoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JyYHIIB2EeiyN7Yq9bqbrA" name="diceFaceIndex" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JybxgYB2EeiyN7Yq9bqbrA" name="PlaceAnotherDiceEvent" specification="_JyYHIYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, receiver, player, toolCardIndex);
    this.point = point;
    this.diceFaceIndex = diceFaceIndex;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyeNwIB2EeiyN7Yq9bqbrA" name="PlaceAnotherDiceEvent" specification="_JycYkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    JSONObject jsonObject = new JSONObject(json);
    diceFaceIndex = jsonObject.getInt(&quot;diceFaceIndex&quot;);
    point = Utils.decodePosition(jsonObject.getJSONObject(&quot;point&quot;));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jye00YB2EeiyN7Yq9bqbrA" name="getDiceFaceIndex" specification="_JyeNwYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return diceFaceIndex;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jyfb4oB2EeiyN7Yq9bqbrA" name="getPoint" specification="_Jyfb4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return point;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JygC8oB2EeiyN7Yq9bqbrA" name="toJSON" specification="_JygC8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    JSONObject jsonObject = super.toJSON();
    jsonObject.put(&quot;point&quot;, new JSONObject(point));
    return jsonObject;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyYHIYB2EeiyN7Yq9bqbrA" name="PlaceAnotherDiceEvent" visibility="public" method="_JybxgYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyZ8UIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyajYIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyajYYB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JybKcIB2EeiyN7Yq9bqbrA" name="toolCardIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JybKcYB2EeiyN7Yq9bqbrA" name="point" type="_JxsKoIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JybxgIB2EeiyN7Yq9bqbrA" name="diceFaceIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JycYkIB2EeiyN7Yq9bqbrA" name="PlaceAnotherDiceEvent" visibility="public" method="_JyeNwIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JydmsIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyeNwYB2EeiyN7Yq9bqbrA" name="getDiceFaceIndex" visibility="public" method="_Jye00YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jye00IB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jyfb4IB2EeiyN7Yq9bqbrA" name="getPoint" visibility="public" method="_Jyfb4oB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jyfb4YB2EeiyN7Yq9bqbrA" type="_JxsKoIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JygC8IB2EeiyN7Yq9bqbrA" name="toJSON" visibility="public" method="_JygC8oB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JygC8YB2EeiyN7Yq9bqbrA" type="_IvIhcoB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JymJkIB2EeiyN7Yq9bqbrA" name="PlaceAnotherDiceSelectingNumberEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JymJkYB2EeiyN7Yq9bqbrA" general="_JyXgEIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JymwoIB2EeiyN7Yq9bqbrA" name="number" visibility="private" isLeaf="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JyqbAIB2EeiyN7Yq9bqbrA" name="PlaceAnotherDiceSelectingNumberEvent" specification="_JynXsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, receiver, player, toolCardIndex, point, diceFaceIndex);
    this.number = number;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JysQMIB2EeiyN7Yq9bqbrA" name="PlaceAnotherDiceSelectingNumberEvent" specification="_JyqbAYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    number = new JSONObject(json).getInt(&quot;number&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jys3QYB2EeiyN7Yq9bqbrA" name="getNumber" specification="_JysQMYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return number;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JynXsIB2EeiyN7Yq9bqbrA" name="PlaceAnotherDiceSelectingNumberEvent" visibility="public" method="_JyqbAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jyol0IB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jyol0YB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JypM4IB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JypM4YB2EeiyN7Yq9bqbrA" name="toolCardIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jypz8IB2EeiyN7Yq9bqbrA" name="point" type="_JxsKoIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jypz8YB2EeiyN7Yq9bqbrA" name="diceFaceIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jypz8oB2EeiyN7Yq9bqbrA" name="number">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JyqbAYB2EeiyN7Yq9bqbrA" name="PlaceAnotherDiceSelectingNumberEvent" visibility="public" method="_JysQMIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JyrpIYB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JysQMYB2EeiyN7Yq9bqbrA" name="getNumber" visibility="public" method="_Jys3QYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jys3QIB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jy8H0IB2EeiyN7Yq9bqbrA" name="PlaceDiceEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Jy8H0YB2EeiyN7Yq9bqbrA" general="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jy8u4IB2EeiyN7Yq9bqbrA" name="point" visibility="private" type="_JxsKoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jy9V8IB2EeiyN7Yq9bqbrA" name="diceFaceIndex" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jy_yMoB2EeiyN7Yq9bqbrA" name="PlaceDiceEvent" specification="_Jy9V8YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
    this.point = point;
    this.diceFaceIndex = diceFaceIndex;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzCOcIB2EeiyN7Yq9bqbrA" name="PlaceDiceEvent" specification="_JzAZQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    JSONObject jsonObject = new JSONObject(json);
    diceFaceIndex = jsonObject.getInt(&quot;diceFaceIndex&quot;);
    point = Utils.decodePosition(jsonObject.getJSONObject(&quot;point&quot;));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzC1gIB2EeiyN7Yq9bqbrA" name="getDiceFaceIndex" specification="_JzCOcYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return diceFaceIndex;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzDckYB2EeiyN7Yq9bqbrA" name="getPoint" specification="_JzC1gYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return point;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzEqsIB2EeiyN7Yq9bqbrA" name="visit" specification="_JzEDoIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return state.handlePlaceDiceEvent(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzFRwYB2EeiyN7Yq9bqbrA" name="toJSON" specification="_JzEqsYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    JSONObject jsonObject = super.toJSON();
    jsonObject.put(&quot;point&quot;, new JSONObject(point));
    return jsonObject;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jy9V8YB2EeiyN7Yq9bqbrA" name="PlaceDiceEvent" visibility="public" method="_Jy_yMoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jy-kEYB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jy_LIIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jy_LIYB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jy_yMIB2EeiyN7Yq9bqbrA" name="diceFaceIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jy_yMYB2EeiyN7Yq9bqbrA" name="point" type="_JxsKoIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzAZQIB2EeiyN7Yq9bqbrA" name="PlaceDiceEvent" visibility="public" method="_JzCOcIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzBnYIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzCOcYB2EeiyN7Yq9bqbrA" name="getDiceFaceIndex" visibility="public" method="_JzC1gIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzCOcoB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzC1gYB2EeiyN7Yq9bqbrA" name="getPoint" visibility="public" method="_JzDckYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzDckIB2EeiyN7Yq9bqbrA" type="_JxsKoIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzEDoIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_JzEqsIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzEDoYB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzEDooB2EeiyN7Yq9bqbrA" name="state" type="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzEqsYB2EeiyN7Yq9bqbrA" name="toJSON" visibility="public" method="_JzFRwYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzFRwIB2EeiyN7Yq9bqbrA" type="_IvIhcoB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JzF40IB2EeiyN7Yq9bqbrA" name="EndTurnEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JzF40YB2EeiyN7Yq9bqbrA" general="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzIVEYB2EeiyN7Yq9bqbrA" name="EndTurnEvent" specification="_JzGf4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, player, receiver);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzKKQYB2EeiyN7Yq9bqbrA" name="EndTurnEvent" specification="_JzI8IIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzLYYIB2EeiyN7Yq9bqbrA" name="visit" specification="_JzKxUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return state.handleEndTurnEvent(this);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzGf4IB2EeiyN7Yq9bqbrA" name="EndTurnEvent" visibility="public" method="_JzIVEYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzHuAIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzHuAYB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzIVEIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzI8IIB2EeiyN7Yq9bqbrA" name="EndTurnEvent" visibility="public" method="_JzKKQYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzKKQIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzKxUIB2EeiyN7Yq9bqbrA" name="visit" visibility="public" method="_JzLYYIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzKxUYB2EeiyN7Yq9bqbrA" type="_ItxPgIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzKxUoB2EeiyN7Yq9bqbrA" name="state" type="_ItxPgIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JzL_cIB2EeiyN7Yq9bqbrA" name="SwapDiceFaceWithDiceHolderEvent" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JzL_cYB2EeiyN7Yq9bqbrA" general="_Ixpp8IB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JzL_coB2EeiyN7Yq9bqbrA" name="draftBoardIndex" visibility="private" isLeaf="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JzMmgIB2EeiyN7Yq9bqbrA" name="turn" visibility="private" isLeaf="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JzMmgYB2EeiyN7Yq9bqbrA" name="indexInTurn" visibility="private" isLeaf="true" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzPp04B2EeiyN7Yq9bqbrA" name="SwapDiceFaceWithDiceHolderEvent" specification="_JzNNkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(emitter, receiver, player, toolCardIndex);
    this.draftBoardIndex = draftBoardIndex;
    this.turn = turn;
    this.indexInTurn = indexInTurn;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzRfAYB2EeiyN7Yq9bqbrA" name="SwapDiceFaceWithDiceHolderEvent" specification="_JzQQ4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(json);
    JSONObject jsonObject = new JSONObject(json);
    draftBoardIndex = jsonObject.getInt(&quot;draftBoardIndex&quot;);
    turn = jsonObject.getInt(&quot;turn&quot;);
    indexInTurn = jsonObject.getInt(&quot;indexInTurn&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzSGEoB2EeiyN7Yq9bqbrA" name="getDraftBoardIndex" specification="_JzSGEIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return draftBoardIndex;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzStIoB2EeiyN7Yq9bqbrA" name="getTurn" specification="_JzStIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return turn;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JzTUMoB2EeiyN7Yq9bqbrA" name="getIndexInTurn" specification="_JzTUMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return indexInTurn;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzNNkIB2EeiyN7Yq9bqbrA" name="SwapDiceFaceWithDiceHolderEvent" visibility="public" method="_JzPp04B2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzObsYB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzPCwIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzPCwYB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzPCwoB2EeiyN7Yq9bqbrA" name="toolCardIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzPp0IB2EeiyN7Yq9bqbrA" name="draftBoardIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzPp0YB2EeiyN7Yq9bqbrA" name="turn">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzPp0oB2EeiyN7Yq9bqbrA" name="indexInTurn">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzQQ4IB2EeiyN7Yq9bqbrA" name="SwapDiceFaceWithDiceHolderEvent" visibility="public" method="_JzRfAYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzRfAIB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzSGEIB2EeiyN7Yq9bqbrA" name="getDraftBoardIndex" visibility="public" method="_JzSGEoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzSGEYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzStIIB2EeiyN7Yq9bqbrA" name="getTurn" visibility="public" method="_JzStIoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzStIYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JzTUMIB2EeiyN7Yq9bqbrA" name="getIndexInTurn" visibility="public" method="_JzTUMoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JzTUMYB2EeiyN7Yq9bqbrA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_IvCa0YB2EeiyN7Yq9bqbrA" name="GameTable" visibility="public" isAbstract="true">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUUSIYB2EeiyN7Yq9bqbrA" name="view" visibility="private" type="_JUUSIIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUU5MIB2EeiyN7Yq9bqbrA" name="diceHolderImmutable" visibility="private" type="_I0N1wIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUVgQIB2EeiyN7Yq9bqbrA" name="draftBoardImmutable" visibility="private" type="_IztfcYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUWHUIB2EeiyN7Yq9bqbrA" name="publicObjectives" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JUWHUYB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JUWuYIB2EeiyN7Yq9bqbrA" value="*"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JUWuYYB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new String[Settings.POBJECTIVES_N]</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUXVcIB2EeiyN7Yq9bqbrA" name="players" visibility="private" type="_IyEgsIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JUX8gIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new HashMap&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUX8gYB2EeiyN7Yq9bqbrA" name="playersName" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JUYjkIB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JUYjkYB2EeiyN7Yq9bqbrA" value="*"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JUYjkoB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new ArrayList&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUZKoIB2EeiyN7Yq9bqbrA" name="schemas" visibility="private" type="_IyEgsIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JUZxsIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new HashMap&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUZxsYB2EeiyN7Yq9bqbrA" name="toolCardImmutables" visibility="private" type="_I0bRIIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JUZxsoB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JUaYwIB2EeiyN7Yq9bqbrA" value="*"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JUaYwYB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new ToolCardImmutable[Settings.TOOLCARDS_N]</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUaYwoB2EeiyN7Yq9bqbrA" name="isMyTurn" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUa_0IB2EeiyN7Yq9bqbrA" name="currentPlayer" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUbm4IB2EeiyN7Yq9bqbrA" name="roundNumber" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUbm4YB2EeiyN7Yq9bqbrA" name="roundDirection" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUcN8IB2EeiyN7Yq9bqbrA" name="secondsRemaining" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUcN8YB2EeiyN7Yq9bqbrA" name="toolcardUsed" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUc1AIB2EeiyN7Yq9bqbrA" name="dicePlaced" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUdcEYB2EeiyN7Yq9bqbrA" name="logs" visibility="private" type="_JUdcEIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JUeDIIB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JUeDIYB2EeiyN7Yq9bqbrA" value="*"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JUeDIoB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new ArrayList&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JUeqMIB2EeiyN7Yq9bqbrA" name="realeState" visibility="private" type="_JRXEwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUgfYYB2EeiyN7Yq9bqbrA" name="GameTable" specification="_JUeqMYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.view = view;
    this.realeState = AbstractMainMenuState.createFromContext(this);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUjisYB2EeiyN7Yq9bqbrA" name="placeDice" specification="_JUiUkYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    view.sendEventToController(new PlaceDiceEvent(getClass().getName(), &quot;&quot;, view.getPlayer(), index, destination));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUkJwYB2EeiyN7Yq9bqbrA" name="endTurn" specification="_JUkJwIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    view.sendEventToController(new EndTurnEvent(getClass().getName(), view.getPlayer(), &quot;&quot;));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUlX4IB2EeiyN7Yq9bqbrA" name="handleLogEvent" specification="_JUkw0IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    // TODO: here
    logs.add(event);
    renderLogEvent();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUmmAYB2EeiyN7Yq9bqbrA" name="handleDiceHolderChanged" specification="_JUl-8YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    diceHolderImmutable = event.getDiceHolderImmutable();
    renderDiceHolder();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUn0IYB2EeiyN7Yq9bqbrA" name="handleDraftBoardChanged" specification="_JUnNEYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    draftBoardImmutable = event.getDraftBoardImmutable();
    renderDraftBoard();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUppUIB2EeiyN7Yq9bqbrA" name="handlePlayerChanged" specification="_JUpCQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (!playersName.contains(event.getPlayerName())) {
        this.playersName.add(event.getPlayerName());
    }
    players.put(event.getPlayerImmutable().getName(), event.getPlayerImmutable());
    renderPlayer(event.getPlayerImmutable().getName());
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUq3cYB2EeiyN7Yq9bqbrA" name="getPlayerIndex" specification="_JUqQYIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return this.playersName.indexOf(player);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JUssoIB2EeiyN7Yq9bqbrA" name="handleSchemaChanged" specification="_JUsFkIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    schemas.put(event.getPlayerName(), event.getSchema());
    renderSchema(event.getPlayerName());
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JU12kIB2EeiyN7Yq9bqbrA" name="handleToolcardChanged" specification="_JUtTsIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    toolCardImmutables[event.getIndex()] = event.getToolCardImmutable();
    renderToolcard(event.getIndex());
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JU2dooB2EeiyN7Yq9bqbrA" name="handlePublicObjective" specification="_JU2doIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    publicObjectives[event.getIndex()] = event.getPublicObjective();
    renderPublicObjective(event.getIndex());
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JU3rwYB2EeiyN7Yq9bqbrA" name="handleTurnChanged" specification="_JU3EsYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    isMyTurn = event.getPlayerName().equals(view.getPlayer());
    currentPlayer = event.getPlayerName();
    roundNumber = event.getRound();
    roundDirection = event.getDirection();
    toolcardUsed = event.isToolcardUsed();
    dicePlaced = event.isDicePlaced();
    getView().activateGameTable();
    renderTurn();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JU454YB2EeiyN7Yq9bqbrA" name="handleAskPlaceRedrawDice" specification="_JU4S0YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    //FIXME: This is wrong it should not pass the event.getDiceIndex, as that dice is still the old dice!
    setState(AbstractPlaceDiceState.createFromContext(this, SchemaCardFace.Ignore.NOTHING, true, false, event.getDiceIndex(), false));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JU6IAYB2EeiyN7Yq9bqbrA" name="handleAskPlaceRedrawDiceWithNumberSelection" specification="_JU5g8YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    setState(AbstractPlaceDiceState.createFromContext(this, SchemaCardFace.Ignore.NOTHING, true, false, event.getDiceIndex(), true));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JU7WIIB2EeiyN7Yq9bqbrA" name="handlePlayerTimeout" specification="_JU6vEYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    setState(AbstractMainMenuState.createFromContext(this));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JU8kQIB2EeiyN7Yq9bqbrA" name="handleTimeoutCommunication" specification="_JU79MIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.secondsRemaining = event.getTimeout();
    renderTimeOut();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVCD0IB2EeiyN7Yq9bqbrA" name="getView" specification="_JVBcwYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return view;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVCq4YB2EeiyN7Yq9bqbrA" name="getDiceHolderImmutable" specification="_JVCD0YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return diceHolderImmutable;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVD5AIB2EeiyN7Yq9bqbrA" name="getDraftBoardImmutable" specification="_JVDR8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return draftBoardImmutable;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVFHIIB2EeiyN7Yq9bqbrA" name="getPlayer" specification="_JVD5AYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return players.get(player);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVGVQoB2EeiyN7Yq9bqbrA" name="getPlayers" specification="_JVFHIYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return players.keySet().toArray(new String[0]);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVIKcIB2EeiyN7Yq9bqbrA" name="getSchema" specification="_JVG8UIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return schemas.get(player);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVJYkYB2EeiyN7Yq9bqbrA" name="getToolCardImmutable" specification="_JVIxgIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return toolCardImmutables[index];
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVKmsYB2EeiyN7Yq9bqbrA" name="isMyTurn" specification="_JVJ_oIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return isMyTurn;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVL00IB2EeiyN7Yq9bqbrA" name="getCurrentPlayer" specification="_JVLNwIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return currentPlayer;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVMb4YB2EeiyN7Yq9bqbrA" name="getRoundNumber" specification="_JVL00YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return roundNumber;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVNC8oB2EeiyN7Yq9bqbrA" name="getSecondsRemaining" specification="_JVNC8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return secondsRemaining;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVOREoB2EeiyN7Yq9bqbrA" name="getPastEvents" specification="_JVNqAIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return logs;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVO4IoB2EeiyN7Yq9bqbrA" name="getRoundDirection" specification="_JVO4IIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return roundDirection;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVQGQoB2EeiyN7Yq9bqbrA" name="getPublicObjective" specification="_JVPfMIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return publicObjectives[index];
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVR7cYB2EeiyN7Yq9bqbrA" name="isToolcardUsed" specification="_JVRUYYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return toolcardUsed;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVSigoB2EeiyN7Yq9bqbrA" name="isDicePlaced" specification="_JVSigIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return dicePlaced;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVUXsIB2EeiyN7Yq9bqbrA" name="getToolIndexByName" specification="_JVTJkIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    for (int i = 0; i &lt; Settings.TOOLCARDS_N; i++) {
        if (getToolCardImmutable(i).getName().equals(toolName))
            return i;
    }
    return -1;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVU-wYB2EeiyN7Yq9bqbrA" name="setState" specification="_JVUXsYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (state == null)
        throw new NullPointerException(&quot;State cannot be null!&quot;);
    if (realeState != null &amp;&amp; realeState != state) {
        realeState.unrealize();
    }
    realeState = state;
    realeState.render();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVVl0oB2EeiyN7Yq9bqbrA" name="getRealeState" specification="_JVVl0IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return realeState;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JUeqMYB2EeiyN7Yq9bqbrA" name="GameTable" visibility="public" method="_JUgfYYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JUgfYIB2EeiyN7Yq9bqbrA" name="view" type="_JUUSIIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JUiUkYB2EeiyN7Yq9bqbrA" name="placeDice" visibility="protected" isLeaf="true" method="_JUjisYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JUi7oIB2EeiyN7Yq9bqbrA" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JUjisIB2EeiyN7Yq9bqbrA" name="destination" type="_JUhGcYB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JUkJwIB2EeiyN7Yq9bqbrA" name="endTurn" visibility="protected" isLeaf="true" method="_JUkJwYB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JUkw0IB2EeiyN7Yq9bqbrA" name="handleLogEvent" visibility="public" isLeaf="true" method="_JUlX4IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JUkw0YB2EeiyN7Yq9bqbrA" name="event" type="_JUdcEIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JUl-8YB2EeiyN7Yq9bqbrA" name="handleDiceHolderChanged" visibility="public" isLeaf="true" method="_JUmmAYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JUmmAIB2EeiyN7Yq9bqbrA" name="event" type="_JUl-8IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JUnNEYB2EeiyN7Yq9bqbrA" name="handleDraftBoardChanged" visibility="public" isLeaf="true" method="_JUn0IYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JUn0IIB2EeiyN7Yq9bqbrA" name="event" type="_JUnNEIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JUpCQIB2EeiyN7Yq9bqbrA" name="handlePlayerChanged" visibility="public" isLeaf="true" method="_JUppUIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JUpCQYB2EeiyN7Yq9bqbrA" name="event" type="_JUobMIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JUqQYIB2EeiyN7Yq9bqbrA" name="getPlayerIndex" visibility="public" isLeaf="true" method="_JUq3cYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JUqQYYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JUq3cIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JUsFkIB2EeiyN7Yq9bqbrA" name="handleSchemaChanged" visibility="public" isLeaf="true" method="_JUssoIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JUsFkYB2EeiyN7Yq9bqbrA" name="event" type="_JUregIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JUtTsIB2EeiyN7Yq9bqbrA" name="handleToolcardChanged" visibility="public" isLeaf="true" method="_JU12kIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JUtTsYB2EeiyN7Yq9bqbrA" name="event" type="_JUssoYB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JU2doIB2EeiyN7Yq9bqbrA" name="handlePublicObjective" visibility="public" isLeaf="true" method="_JU2dooB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JU2doYB2EeiyN7Yq9bqbrA" name="event" type="_JU12kYB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JU3EsYB2EeiyN7Yq9bqbrA" name="handleTurnChanged" visibility="public" isLeaf="true" method="_JU3rwYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JU3rwIB2EeiyN7Yq9bqbrA" name="event" type="_JU3EsIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JU4S0YB2EeiyN7Yq9bqbrA" name="handleAskPlaceRedrawDice" visibility="public" method="_JU454YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JU454IB2EeiyN7Yq9bqbrA" name="event" type="_JU4S0IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JU5g8YB2EeiyN7Yq9bqbrA" name="handleAskPlaceRedrawDiceWithNumberSelection" visibility="public" method="_JU6IAYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JU6IAIB2EeiyN7Yq9bqbrA" name="event" type="_JU5g8IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JU6vEYB2EeiyN7Yq9bqbrA" name="handlePlayerTimeout" visibility="public" method="_JU7WIIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JU6vEoB2EeiyN7Yq9bqbrA" name="event" type="_JU6vEIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JU79MIB2EeiyN7Yq9bqbrA" name="handleTimeoutCommunication" visibility="public" isLeaf="true" method="_JU8kQIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JU79MYB2EeiyN7Yq9bqbrA" name="event" type="_JU7WIYB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JU8kQYB2EeiyN7Yq9bqbrA" name="renderDiceHolder" visibility="protected" isAbstract="true"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JU9LUIB2EeiyN7Yq9bqbrA" name="renderLogEvent" visibility="protected" isAbstract="true"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JU9LUYB2EeiyN7Yq9bqbrA" name="renderDraftBoard" visibility="protected" isAbstract="true"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JU9yYIB2EeiyN7Yq9bqbrA" name="renderPlayer" visibility="protected" isAbstract="true">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JU9yYYB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JU-ZcIB2EeiyN7Yq9bqbrA" name="renderSchema" visibility="protected" isAbstract="true">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JU_AgIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JU_AgYB2EeiyN7Yq9bqbrA" name="renderToolcard" visibility="protected" isAbstract="true">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JU_nkIB2EeiyN7Yq9bqbrA" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JU_nkYB2EeiyN7Yq9bqbrA" name="renderPublicObjective" visibility="protected" isAbstract="true">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVAOoIB2EeiyN7Yq9bqbrA" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVAOoYB2EeiyN7Yq9bqbrA" name="renderTurn" visibility="protected" isAbstract="true"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVA1sIB2EeiyN7Yq9bqbrA" name="setActive" visibility="public" isAbstract="true"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVA1sYB2EeiyN7Yq9bqbrA" name="setInactive" visibility="public" isAbstract="true"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVBcwIB2EeiyN7Yq9bqbrA" name="renderTimeOut" visibility="public" isAbstract="true"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVBcwYB2EeiyN7Yq9bqbrA" name="getView" visibility="public" method="_JVCD0IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVBcwoB2EeiyN7Yq9bqbrA" type="_JUUSIIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVCD0YB2EeiyN7Yq9bqbrA" name="getDiceHolderImmutable" visibility="public" method="_JVCq4YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVCq4IB2EeiyN7Yq9bqbrA" type="_I0N1wIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVDR8IB2EeiyN7Yq9bqbrA" name="getDraftBoardImmutable" visibility="public" method="_JVD5AIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVDR8YB2EeiyN7Yq9bqbrA" type="_IztfcYB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVD5AYB2EeiyN7Yq9bqbrA" name="getPlayer" visibility="public" method="_JVFHIIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVEgEIB2EeiyN7Yq9bqbrA" type="_Iz9-IYB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVEgEYB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVFHIYB2EeiyN7Yq9bqbrA" name="getPlayers" visibility="public" method="_JVGVQoB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVFuMIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JVGVQIB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JVGVQYB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVG8UIB2EeiyN7Yq9bqbrA" name="getSchema" visibility="public" method="_JVIKcIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVHjYIB2EeiyN7Yq9bqbrA" type="_IzxJ0IB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVHjYYB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVIxgIB2EeiyN7Yq9bqbrA" name="getToolCardImmutable" visibility="public" method="_JVJYkYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVIxgYB2EeiyN7Yq9bqbrA" type="_I0bRIIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVJYkIB2EeiyN7Yq9bqbrA" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVJ_oIB2EeiyN7Yq9bqbrA" name="isMyTurn" visibility="public" method="_JVKmsYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVKmsIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVLNwIB2EeiyN7Yq9bqbrA" name="getCurrentPlayer" visibility="public" method="_JVL00IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVLNwYB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVL00YB2EeiyN7Yq9bqbrA" name="getRoundNumber" visibility="public" method="_JVMb4YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVMb4IB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVNC8IB2EeiyN7Yq9bqbrA" name="getSecondsRemaining" visibility="public" method="_JVNC8oB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVNC8YB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVNqAIB2EeiyN7Yq9bqbrA" name="getPastEvents" visibility="public" method="_JVOREoB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVNqAYB2EeiyN7Yq9bqbrA" type="_JUdcEIB2EeiyN7Yq9bqbrA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JVOREIB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JVOREYB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVO4IIB2EeiyN7Yq9bqbrA" name="getRoundDirection" visibility="public" method="_JVO4IoB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVO4IYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVPfMIB2EeiyN7Yq9bqbrA" name="getPublicObjective" visibility="public" method="_JVQGQoB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVQGQIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVQGQYB2EeiyN7Yq9bqbrA" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVQtUYB2EeiyN7Yq9bqbrA" name="handleGameStart" visibility="public" isAbstract="true">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVRUYIB2EeiyN7Yq9bqbrA" name="gameStartEvent" type="_JVQtUIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVRUYYB2EeiyN7Yq9bqbrA" name="isToolcardUsed" visibility="public" method="_JVR7cYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVR7cIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVSigIB2EeiyN7Yq9bqbrA" name="isDicePlaced" visibility="public" method="_JVSigoB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVSigYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVTJkIB2EeiyN7Yq9bqbrA" name="getToolIndexByName" visibility="public" method="_JVUXsIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVTJkYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVTwoIB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVUXsYB2EeiyN7Yq9bqbrA" name="setState" visibility="public" method="_JVU-wYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVU-wIB2EeiyN7Yq9bqbrA" name="state" type="_JRXEwIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVVl0IB2EeiyN7Yq9bqbrA" name="getRealeState" visibility="public" method="_JVVl0oB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVVl0YB2EeiyN7Yq9bqbrA" type="_JRXEwIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_IvDB4oB2EeiyN7Yq9bqbrA" name="GameEnding" visibility="public" isAbstract="true">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JVWz8IB2EeiyN7Yq9bqbrA" name="view" visibility="private" type="_JUUSIIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVZQMYB2EeiyN7Yq9bqbrA" name="GameEnding" specification="_JVXbAIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.view = view;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVbscIB2EeiyN7Yq9bqbrA" name="getView" specification="_JVbFYIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return view;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVXbAIB2EeiyN7Yq9bqbrA" name="GameEnding" visibility="public" method="_JVZQMYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVZQMIB2EeiyN7Yq9bqbrA" name="view" type="_JUUSIIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVZ3QIB2EeiyN7Yq9bqbrA" name="handleEndGameEvent" visibility="public" isAbstract="true">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVZ3QYB2EeiyN7Yq9bqbrA" name="event" type="_IvXyAIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVaeUIB2EeiyN7Yq9bqbrA" name="setActive" visibility="public" isAbstract="true"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVaeUYB2EeiyN7Yq9bqbrA" name="setInactive" visibility="public" isAbstract="true"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVbFYIB2EeiyN7Yq9bqbrA" name="getView" visibility="public" method="_JVbscIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVbFYYB2EeiyN7Yq9bqbrA" type="_JUUSIIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_IvFeIIB2EeiyN7Yq9bqbrA" name="SelectSchemaCardFace" visibility="public" isAbstract="true">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JdMhUIB2EeiyN7Yq9bqbrA" name="view" visibility="private" type="_JUUSIIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JdNIYIB2EeiyN7Yq9bqbrA" name="privateObjective" visibility="private" type="_Izy_AYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JdNvcIB2EeiyN7Yq9bqbrA" name="secondsRemaining" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JdNvcYB2EeiyN7Yq9bqbrA" name="logs" visibility="private" type="_IwxgMIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdOWgIB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdOWgYB2EeiyN7Yq9bqbrA" value="*"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JdO9kIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new ArrayList&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdQywYB2EeiyN7Yq9bqbrA" name="SelectSchemaCardFace" specification="_JdO9kYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.view = view;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdSA4oB2EeiyN7Yq9bqbrA" name="selectFace" specification="_JdRZ0IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    view.sendEventToController(new SchemaCardSelectedEvent(getClass().getCanonicalName(), view.getPlayer(), view.getPlayer(), index, side));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdTPAYB2EeiyN7Yq9bqbrA" name="handlePlayerCanged" specification="_JdSn8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (e.getPlayerName().equals(view.getPlayer())) {
        this.privateObjective = e.getPlayerImmutable().getPrivateObjective();
        renderPrivateObjective(privateObjective);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdUdIYB2EeiyN7Yq9bqbrA" name="handleTimeoutCommunication" specification="_JdT2EIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.secondsRemaining = event.getTimeout();
    renderSecondsRemaining();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdVrQIB2EeiyN7Yq9bqbrA" name="handleLogEvent" specification="_JdVEMIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    // TODO: here
    logs.add(event);
    renderEventLog();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdW5YIB2EeiyN7Yq9bqbrA" name="getPastEvents" specification="_JdVrQYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return logs;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdZ8sYB2EeiyN7Yq9bqbrA" name="getSecondsRemaining" specification="_JdZVoYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return secondsRemaining;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdO9kYB2EeiyN7Yq9bqbrA" name="SelectSchemaCardFace" visibility="public" method="_JdQywYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdQywIB2EeiyN7Yq9bqbrA" name="view" type="_JUUSIIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdRZ0IB2EeiyN7Yq9bqbrA" name="selectFace" visibility="protected" isLeaf="true" method="_JdSA4oB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdSA4IB2EeiyN7Yq9bqbrA" name="index">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdSA4YB2EeiyN7Yq9bqbrA" name="side" type="_JEVVYIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdSn8IB2EeiyN7Yq9bqbrA" name="handlePlayerCanged" visibility="public" method="_JdTPAYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdTPAIB2EeiyN7Yq9bqbrA" name="e" type="_I2JIYIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdT2EIB2EeiyN7Yq9bqbrA" name="handleTimeoutCommunication" visibility="public" isLeaf="true" method="_JdUdIYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdUdIIB2EeiyN7Yq9bqbrA" name="event" type="_Iv1sEIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdVEMIB2EeiyN7Yq9bqbrA" name="handleLogEvent" visibility="public" isLeaf="true" method="_JdVrQIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdVEMYB2EeiyN7Yq9bqbrA" name="event" type="_IwxgMIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdVrQYB2EeiyN7Yq9bqbrA" name="getPastEvents" visibility="public" method="_JdW5YIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdWSUIB2EeiyN7Yq9bqbrA" type="_IwxgMIB2EeiyN7Yq9bqbrA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdWSUYB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdWSUoB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdW5YYB2EeiyN7Yq9bqbrA" name="renderSecondsRemaining" visibility="protected" isAbstract="true"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdXgcIB2EeiyN7Yq9bqbrA" name="renderEventLog" visibility="public" isAbstract="true"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdXgcYB2EeiyN7Yq9bqbrA" name="showSchemaCardFaceSelection" visibility="public" isAbstract="true">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdYHgIB2EeiyN7Yq9bqbrA" name="event" type="_Iu0YYIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdYHgYB2EeiyN7Yq9bqbrA" name="setActive" visibility="public" isAbstract="true"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdYukIB2EeiyN7Yq9bqbrA" name="setInactive" visibility="public" isAbstract="true"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdYukYB2EeiyN7Yq9bqbrA" name="renderPrivateObjective" visibility="public" isAbstract="true">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdZVoIB2EeiyN7Yq9bqbrA" name="privateObjective" type="_Izy_AYB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdZVoYB2EeiyN7Yq9bqbrA" name="getSecondsRemaining" visibility="public" method="_JdZ8sYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdZ8sIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_IvMy44B2EeiyN7Yq9bqbrA" name="VisitableFromView" visibility="public">
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JXyc4IB2EeiyN7Yq9bqbrA" name="visit" visibility="public">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JXyc4YB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JXzD8IB2EeiyN7Yq9bqbrA" name="visit" visibility="public">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JXzD8YB2EeiyN7Yq9bqbrA" name="gameEnding" type="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JXzrAIB2EeiyN7Yq9bqbrA" name="visit" visibility="public">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JXzrAYB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" type="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JObFgIB2EeiyN7Yq9bqbrA" name="VirtualView" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_JRjSAIB2EeiyN7Yq9bqbrA" general="_ItydoIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JRjSAYB2EeiyN7Yq9bqbrA" name="localProxy" visibility="private" type="_IufBMYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JRnjcIB2EeiyN7Yq9bqbrA" name="VirtualView" specification="_JRkgIIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    super(player);
    this.connect(localProxy);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JRoxkIB2EeiyN7Yq9bqbrA" name="update" specification="_JRoKgIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (this.isConnected() &amp;&amp; localProxy != null)
        localProxy.sendEventToClient(message.filter(getPlayer()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JRp_sIB2EeiyN7Yq9bqbrA" name="dispatchProxyEvent" specification="_JRpYoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    notify(event);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JRqmwIB2EeiyN7Yq9bqbrA" name="disconnect" specification="_JRp_sYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.setConnected(false);
    this.localProxy = null;
    this.dispatchProxyEvent(new PlayerDisconnectedEvent(this.getClass().getName(), this.getPlayer(), &quot;&quot;));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JRr04IB2EeiyN7Yq9bqbrA" name="connect" specification="_JRrN0IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (this.localProxy != null)
        throw new IllegalStateException(this.getClass().getCanonicalName() + &quot; Attempting to connect with an already connected View &quot;);
    this.localProxy = localProxy;
    localProxy.setView(this);
    this.setConnected(true);
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JRkgIIB2EeiyN7Yq9bqbrA" name="VirtualView" visibility="public" method="_JRnjcIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JRm8YIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JRm8YYB2EeiyN7Yq9bqbrA" name="localProxy" type="_IufBMYB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JRoKgIB2EeiyN7Yq9bqbrA" name="update" visibility="public" method="_JRoxkIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JRoKgYB2EeiyN7Yq9bqbrA" name="message" type="_IvMy4YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JRpYoIB2EeiyN7Yq9bqbrA" name="dispatchProxyEvent" visibility="public" method="_JRp_sIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JRpYoYB2EeiyN7Yq9bqbrA" name="event" type="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JRp_sYB2EeiyN7Yq9bqbrA" name="disconnect" visibility="public" method="_JRqmwIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JRrN0IB2EeiyN7Yq9bqbrA" name="connect" visibility="public" method="_JRr04IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JRrN0YB2EeiyN7Yq9bqbrA" name="localProxy" type="_IufBMYB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JRWdsIB2EeiyN7Yq9bqbrA" name="AbstractChooseDice" visibility="public" isAbstract="true">
                <generalization xmi:type="uml:Generalization" xmi:id="_JRXEwYB2EeiyN7Yq9bqbrA" general="_JRXEwIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JRXr0IB2EeiyN7Yq9bqbrA" name="provider" visibility="private" isStatic="true" type="_IyEgsIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JRYS4IB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new HashMap&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JRY58IB2EeiyN7Yq9bqbrA" name="toolName" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JRckUYB2EeiyN7Yq9bqbrA" name="AbstractChooseDice" specification="_JRZhAIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    super(gameTable);
    this.toolName = toolName;
    this.setupProvider();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JRfAkIB2EeiyN7Yq9bqbrA" name="createFromContext" specification="_JRdLYIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (gameTable.getView().getGraphics() == RemoteView.Graphics.GUI) {
        return new GUIChooseDice(gameTable, toolName);
    } else {
        return new CLIChooseDice(gameTable, toolName);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JRfnoYB2EeiyN7Yq9bqbrA" name="setupProvider" specification="_JRfnoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (!provider.isEmpty())
        return;
    //1
    provider.put(&quot;RoughingNipper&quot;, ( i) -> AbstractIncrementDice.createFromContext(getGameTable(), i));
    //5
    provider.put(&quot;CircularCutter&quot;, ( i) -> AbstractExchangeWDiceHolder.createFromContext(getGameTable(), i));
    //6
    provider.put(&quot;FirmPastaBrush&quot;, ( i) -> {
        this.getGameTable().getView().sendEventToController(new DiceActionEvent(this.getClass().getName(), &quot;&quot;, getGameTable().getView().getPlayer(), this.getGameTable().getToolIndexByName(&quot;FirmPastaBrush&quot;), i));
        return AbstractMainMenuState.createFromContext(getGameTable());
    });
    //10
    provider.put(&quot;DiamondPad&quot;, ( i) -> {
        this.getGameTable().getView().sendEventToController(new DiceActionEvent(this.getClass().getName(), &quot;&quot;, getGameTable().getView().getPlayer(), this.getGameTable().getToolIndexByName(&quot;DiamondPad&quot;), i));
        return AbstractMainMenuState.createFromContext(getGameTable());
    });
    //11
    provider.put(&quot;FirmPastaDiluent&quot;, ( i) -> {
        this.getGameTable().getView().sendEventToController(new DiceActionEvent(this.getClass().getName(), &quot;&quot;, getGameTable().getView().getPlayer(), this.getGameTable().getToolIndexByName(&quot;FirmPastaDiluent&quot;), i));
        return AbstractMainMenuState.createFromContext(getGameTable());
    });
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JRg1wYB2EeiyN7Yq9bqbrA" name="processDice" specification="_JRgOsIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (diceFace &lt; 0 || diceFace >= this.getGameTable().getDraftBoardImmutable().getDices().length) {
        throw new InputError(&quot;Input out of range.&quot;);
    }
    getGameTable().setState(provider.get(this.toolName).apply(diceFace));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JRiD4IB2EeiyN7Yq9bqbrA" name="processCancel" specification="_JRhc0IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    getGameTable().setState(AbstractMainMenuState.createFromContext(this.getGameTable()));
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JRZhAIB2EeiyN7Yq9bqbrA" name="AbstractChooseDice" visibility="protected" method="_JRckUYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JRb9QIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JRckUIB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JRdLYIB2EeiyN7Yq9bqbrA" name="createFromContext" visibility="public" isStatic="true" method="_JRfAkIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JRdycIB2EeiyN7Yq9bqbrA" type="_JRWdsIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JReZgIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JReZgYB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JRfnoIB2EeiyN7Yq9bqbrA" name="setupProvider" visibility="private" method="_JRfnoYB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JRgOsIB2EeiyN7Yq9bqbrA" name="processDice" visibility="public" method="_JRg1wYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JRg1wIB2EeiyN7Yq9bqbrA" name="diceFace">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JRhc0IB2EeiyN7Yq9bqbrA" name="processCancel" visibility="public" method="_JRiD4IB2EeiyN7Yq9bqbrA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JRXEwIB2EeiyN7Yq9bqbrA" name="State" visibility="public" isAbstract="true">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JdHBwIB2EeiyN7Yq9bqbrA" name="gameTable" visibility="private" isLeaf="true" type="_IvCa0YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JdGasIB2EeiyN7Yq9bqbrA" name="State implements Renderizable" client="_JRXEwIB2EeiyN7Yq9bqbrA" supplier="_JUR14IB2EeiyN7Yq9bqbrA" contract="_JUR14IB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdJeAIB2EeiyN7Yq9bqbrA" name="State" specification="_JdHBwYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.gameTable = gameTable;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdKFEYB2EeiyN7Yq9bqbrA" name="getGameTable" specification="_JdJeAYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return gameTable;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdHBwYB2EeiyN7Yq9bqbrA" name="State" visibility="public" method="_JdJeAIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdI28IB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdJeAYB2EeiyN7Yq9bqbrA" name="getGameTable" visibility="public" method="_JdKFEYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdKFEIB2EeiyN7Yq9bqbrA" type="_IvCa0YB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdKsIIB2EeiyN7Yq9bqbrA" name="process" visibility="public" isAbstract="true">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdLTMIB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdLTMYB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" isAbstract="true"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JRuRIIB2EeiyN7Yq9bqbrA" name="AbstractPlaceDiceState" visibility="public" isAbstract="true">
                <generalization xmi:type="uml:Generalization" xmi:id="_JRu4MIB2EeiyN7Yq9bqbrA" general="_JRXEwIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JRvfQIB2EeiyN7Yq9bqbrA" name="ignore" visibility="private" type="_IyglkIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JRx7gIB2EeiyN7Yq9bqbrA" name="internalState" visibility="private" type="_JUQAsIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JRyikIB2EeiyN7Yq9bqbrA" name="selectedDice" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JRyikYB2EeiyN7Yq9bqbrA" name="isFromTool" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JRzJoIB2EeiyN7Yq9bqbrA" name="forceLoneliness" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JRzwsIB2EeiyN7Yq9bqbrA" name="shouldSelectNumber" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JRzwsYB2EeiyN7Yq9bqbrA" name="shouldNotSelectDice" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JRzwsoB2EeiyN7Yq9bqbrA" name="selectedNumber" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JR4CIIB2EeiyN7Yq9bqbrA" name="AbstractPlaceDiceState" specification="_JR0XwIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this(gameTable, ignore, isFromTool, forceLoneliness, -1, false);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JR9hsIB2EeiyN7Yq9bqbrA" name="AbstractPlaceDiceState" specification="_JR4pMIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    super(gameTable);
    this.ignore = ignore;
    this.isFromTool = isFromTool;
    this.forceLoneliness = forceLoneliness;
    this.shouldSelectNumber = shouldSelectNumber;
    shouldNotSelectDice = false;
    if (forceDice == -1) {
        internalState = InternalState.DICE_SELECTION;
    } else if (!shouldSelectNumber) {
        internalState = InternalState.POSITION_SELECTION;
        selectedDice = forceDice;
        shouldNotSelectDice = true;
    } else {
        internalState = InternalState.NUMBER_SELECTION;
        selectedDice = forceDice;
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JSAlAYB2EeiyN7Yq9bqbrA" name="createFromContext" specification="_JR-IwIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (gameTable.getView().getGraphics() == RemoteView.Graphics.GUI) {
        return new GUIPlaceDice(gameTable, ignore, isFromTool, forceLoneliness);
    } else {
        return new CLIPlaceDiceState(gameTable, ignore, isFromTool, forceLoneliness);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JSE2cYB2EeiyN7Yq9bqbrA" name="createFromContext" specification="_JSBzIIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (gameTable.getView().getGraphics() == RemoteView.Graphics.GUI) {
        return new GUIPlaceDice(gameTable, ignore, isFromTool, forceLoneliness, forceDice, shouldSelectNumber);
    } else {
        return new CLIPlaceDiceState(gameTable, ignore, isFromTool, forceLoneliness, forceDice, shouldSelectNumber);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JSGEkIB2EeiyN7Yq9bqbrA" name="processCancel" specification="_JSFdgIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (shouldNotSelectDice || shouldSelectNumber)
        this.getGameTable().getView().sendEventToController(new CancelActionEvent(this.getClass().getName(), this.getGameTable().getView().getPlayer(), &quot;&quot;));
    getGameTable().setState(AbstractMainMenuState.createFromContext(getGameTable()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JSHSsYB2EeiyN7Yq9bqbrA" name="processDiceSelection" specification="_JSGroIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.selectedDice = selectedDice;
    if (selectedDice &lt; 0 || selectedDice > getGameTable().getDraftBoardImmutable().getDices().length) {
        throw new InputError(selectedDice + &quot; is not in range!&quot;);
    } else {
        internalState = InternalState.POSITION_SELECTION;
        getGameTable().setState(this);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JSK9EIB2EeiyN7Yq9bqbrA" name="processPositionSelected" specification="_JSJu8YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    DiceFace diceFace = getGameTable().getDraftBoardImmutable().getDices()[selectedDice];
    if (getGameTable().getSchema(getGameTable().getView().getPlayer()).isDiceAllowed(point, diceFace, ignore, forceLoneliness)) {
        if (shouldNotSelectDice) {
            getGameTable().getView().sendEventToController(new PlaceAnotherDiceEvent(getClass().getName(), &quot;&quot;, getGameTable().getView().getPlayer(), getGameTable().getToolIndexByName(&quot;FirmPastaBrush&quot;), point, selectedDice));
        } else if (shouldSelectNumber) {
            getGameTable().getView().sendEventToController(new PlaceAnotherDiceSelectingNumberEvent(getClass().getName(), &quot;&quot;, getGameTable().getView().getPlayer(), getGameTable().getToolIndexByName(&quot;FirmPastaDiluent&quot;), point, selectedDice, selectedNumber));
        } else if (isFromTool &amp;&amp; forceLoneliness) {
            getGameTable().getView().sendEventToController(new PlaceAnotherDiceEvent(getClass().getName(), &quot;&quot;, getGameTable().getView().getPlayer(), getGameTable().getToolIndexByName(&quot;CorkRow&quot;), point, selectedDice));
        } else if (isFromTool &amp;&amp; !forceLoneliness) {
            getGameTable().getView().sendEventToController(new PlaceAnotherDiceEvent(getClass().getName(), &quot;&quot;, getGameTable().getView().getPlayer(), getGameTable().getToolIndexByName(&quot;WheeledPincer&quot;), point, selectedDice));
        } else {
            getGameTable().getView().sendEventToController(new PlaceDiceEvent(getClass().getName(), &quot;&quot;, getGameTable().getView().getPlayer(), selectedDice, point));
        }
        getGameTable().setState(AbstractMainMenuState.createFromContext(getGameTable()));
    } else {
        throw new InputError(&quot;This dice cannot be placed here!&quot;);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JSMLMYB2EeiyN7Yq9bqbrA" name="processNumberSelected" specification="_JSLkIIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.selectedNumber = selectedNumber;
    if (selectedNumber &lt;= 0 || selectedNumber > 6) {
        throw new InputError(selectedNumber + &quot; not between 1 and 6!&quot;);
    }
    internalState = InternalState.POSITION_SELECTION;
    getGameTable().setState(this);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JSOAYIB2EeiyN7Yq9bqbrA" name="getInternalState" specification="_JSMyQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return internalState;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JSOncYB2EeiyN7Yq9bqbrA" name="getSelectedNumber" specification="_JSOAYYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return selectedNumber;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JSP1kIB2EeiyN7Yq9bqbrA" name="isFromTool" specification="_JSPOgIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return isFromTool;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JSQcooB2EeiyN7Yq9bqbrA" name="isForceLoneliness" specification="_JSQcoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return forceLoneliness;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JSRqwIB2EeiyN7Yq9bqbrA" name="isShouldSelectNumber" specification="_JSRDsIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return shouldSelectNumber;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JSSR0YB2EeiyN7Yq9bqbrA" name="isShouldNotSelectDice" specification="_JSRqwYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return shouldNotSelectDice;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JSS44oB2EeiyN7Yq9bqbrA" name="getSelectedDice" specification="_JSS44IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return selectedDice;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JSUHAIB2EeiyN7Yq9bqbrA" name="getIgnore" specification="_JSTf8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return ignore;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JR0XwIB2EeiyN7Yq9bqbrA" name="AbstractPlaceDiceState" visibility="protected" method="_JR4CIIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JR2M8IB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JR20AIB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JR3bEIB2EeiyN7Yq9bqbrA" name="isFromTool">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JR3bEYB2EeiyN7Yq9bqbrA" name="forceLoneliness">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JR4pMIB2EeiyN7Yq9bqbrA" name="AbstractPlaceDiceState" visibility="protected" method="_JR9hsIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JR7FcIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JR7sgIB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JR8TkIB2EeiyN7Yq9bqbrA" name="isFromTool">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JR8TkYB2EeiyN7Yq9bqbrA" name="forceLoneliness">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JR86oIB2EeiyN7Yq9bqbrA" name="forceDice">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JR86oYB2EeiyN7Yq9bqbrA" name="shouldSelectNumber">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JR-IwIB2EeiyN7Yq9bqbrA" name="createFromContext" visibility="public" isStatic="true" method="_JSAlAYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JR-v0IB2EeiyN7Yq9bqbrA" type="_JRuRIIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JR_W4IB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JR_W4YB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JR_98IB2EeiyN7Yq9bqbrA" name="isFromTool">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSAlAIB2EeiyN7Yq9bqbrA" name="forceLoneliness">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JSBzIIB2EeiyN7Yq9bqbrA" name="createFromContext" visibility="public" isStatic="true" method="_JSE2cYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSCaMIB2EeiyN7Yq9bqbrA" type="_JRuRIIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSCaMYB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSDBQIB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSDoUIB2EeiyN7Yq9bqbrA" name="isFromTool">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSEPYIB2EeiyN7Yq9bqbrA" name="forceLoneliness">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSEPYYB2EeiyN7Yq9bqbrA" name="forceDice">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSE2cIB2EeiyN7Yq9bqbrA" name="shouldSelectNumber">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JSFdgIB2EeiyN7Yq9bqbrA" name="processCancel" visibility="public" method="_JSGEkIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JSGroIB2EeiyN7Yq9bqbrA" name="processDiceSelection" visibility="public" method="_JSHSsYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSHSsIB2EeiyN7Yq9bqbrA" name="selectedDice">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JSJu8YB2EeiyN7Yq9bqbrA" name="processPositionSelected" visibility="public" method="_JSK9EIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSKWAIB2EeiyN7Yq9bqbrA" name="point" type="_JSH5wIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JSLkIIB2EeiyN7Yq9bqbrA" name="processNumberSelected" visibility="public" method="_JSMLMYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSMLMIB2EeiyN7Yq9bqbrA" name="selectedNumber">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JSMyQIB2EeiyN7Yq9bqbrA" name="getInternalState" visibility="public" method="_JSOAYIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSNZUIB2EeiyN7Yq9bqbrA" type="_JUQAsIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JSOAYYB2EeiyN7Yq9bqbrA" name="getSelectedNumber" visibility="public" method="_JSOncYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSOncIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JSPOgIB2EeiyN7Yq9bqbrA" name="isFromTool" visibility="public" method="_JSP1kIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSPOgYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JSQcoIB2EeiyN7Yq9bqbrA" name="isForceLoneliness" visibility="public" method="_JSQcooB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSQcoYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JSRDsIB2EeiyN7Yq9bqbrA" name="isShouldSelectNumber" visibility="public" method="_JSRqwIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSRDsYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JSRqwYB2EeiyN7Yq9bqbrA" name="isShouldNotSelectDice" visibility="public" method="_JSSR0YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSSR0IB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JSS44IB2EeiyN7Yq9bqbrA" name="getSelectedDice" visibility="public" method="_JSS44oB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSS44YB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JSTf8IB2EeiyN7Yq9bqbrA" name="getIgnore" visibility="public" method="_JSUHAIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JSTf8YB2EeiyN7Yq9bqbrA" type="_IyglkIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_JUQAsIB2EeiyN7Yq9bqbrA" name="InternalState" visibility="public">
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JURO0IB2EeiyN7Yq9bqbrA" name="DICE_SELECTION"/>
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JURO0YB2EeiyN7Yq9bqbrA" name="POSITION_SELECTION"/>
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JURO0oB2EeiyN7Yq9bqbrA" name="NUMBER_SELECTION"/>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JSH5wIB2EeiyN7Yq9bqbrA" name="Point"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_JUR14IB2EeiyN7Yq9bqbrA" name="Renderizable" visibility="public">
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JUSc8IB2EeiyN7Yq9bqbrA" name="render" visibility="public"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JUUSIIB2EeiyN7Yq9bqbrA" name="RemoteView" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_JVsyMIB2EeiyN7Yq9bqbrA" general="_ItydoIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JVunYIB2EeiyN7Yq9bqbrA" name="graphics" visibility="private" isLeaf="true" type="_JXwnsIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JVunYYB2EeiyN7Yq9bqbrA" name="eventLoop" visibility="private" type="_It3WIIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JVvOcIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new ConcurrentLinkedQueue&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JVv1gIB2EeiyN7Yq9bqbrA" name="eventLoopHandler" visibility="private" type="_It_5AIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JVv1gYB2EeiyN7Yq9bqbrA" name="selectSchemaCardFace" visibility="private" type="_IvFeIIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JVwckIB2EeiyN7Yq9bqbrA" name="gameEnding" visibility="private" type="_IvDB4oB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JVwckYB2EeiyN7Yq9bqbrA" name="gameTable" visibility="private" type="_IvCa0YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVzf4YB2EeiyN7Yq9bqbrA" name="RemoteView" specification="_JVxDoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    super(player);
    this.graphics = graphics;
    if (graphics == Graphics.CLI) {
        selectSchemaCardFace = new CLISelectSchema(this);
        gameEnding = new CLIGameEnding(this);
        gameTable = new CLIGameTable(this);
    } else {
        GUILogger.go();
        selectSchemaCardFace = new GUISelectSchemaCardFace(this);
        gameEnding = new GUILeaderBoard(this);
        gameTable = new GUIGameTable(this);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JV0G8YB2EeiyN7Yq9bqbrA" name="start" specification="_JV0G8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.startEventLoopHandler();
    activateSelectSchemaCard();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JV0uAYB2EeiyN7Yq9bqbrA" name="startEventLoopHandler" specification="_JV0uAIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.eventLoopHandler = new Thread(() -> {
        while (true) {
            if (!this.eventLoop.isEmpty()) {
                VisitableFromView actualEvent = this.eventLoop.poll();
                actualEvent.visit(selectSchemaCardFace);
                actualEvent.visit(gameTable);
                actualEvent.visit(gameEnding);
            }
            try {
                Thread.sleep(50);
            } catch (InterruptedException e) {
                Log.d(&quot;eventLoopHandlerThread was interrupted&quot;);
            }
        }
    }, &quot;RemoteViewEventLoopHandler&quot;);
    eventLoopHandler.start();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JV18IIB2EeiyN7Yq9bqbrA" name="update" specification="_JV1VEIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (!(message instanceof TimeoutCommunicationEvent))
        Log.d(message.toString());
    if (// Message is for me
    message.getReceiver().equals(getPlayer()) || // Message is for everyone v2
    message.getReceiver().equals(&quot;&quot;)) {
        try {
            this.eventLoop.add((VisitableFromView) message);
        } catch (ClassCastException e) {
            Log.d(&quot;I couldn't receive this event! &quot; + message);
        }
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JV3KQIB2EeiyN7Yq9bqbrA" name="sendEventToController" specification="_JV2jMIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.notify(event);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JV3xUIB2EeiyN7Yq9bqbrA" name="activateSelectSchemaCard" specification="_JV3KQYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.gameEnding.setInactive();
    this.gameTable.setInactive();
    this.selectSchemaCardFace.setActive();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JV4YYIB2EeiyN7Yq9bqbrA" name="activateGameTable" specification="_JV3xUYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.selectSchemaCardFace.setInactive();
    this.gameTable.setActive();
    this.gameEnding.setInactive();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JV4_cIB2EeiyN7Yq9bqbrA" name="activateGameEnding" specification="_JV4YYYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.selectSchemaCardFace.setInactive();
    this.gameTable.setInactive();
    this.gameEnding.setActive();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JV5mgYB2EeiyN7Yq9bqbrA" name="getGraphics" specification="_JV4_cYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return graphics;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVxDoIB2EeiyN7Yq9bqbrA" name="RemoteView" visibility="public" method="_JVzf4YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVy40IB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVzf4IB2EeiyN7Yq9bqbrA" name="graphics" type="_JXwnsIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JV0G8IB2EeiyN7Yq9bqbrA" name="start" visibility="public" method="_JV0G8YB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JV0uAIB2EeiyN7Yq9bqbrA" name="startEventLoopHandler" visibility="private" method="_JV0uAYB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JV1VEIB2EeiyN7Yq9bqbrA" name="update" visibility="public" method="_JV18IIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JV1VEYB2EeiyN7Yq9bqbrA" name="message" type="_IvMy4YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JV2jMIB2EeiyN7Yq9bqbrA" name="sendEventToController" visibility="public" method="_JV3KQIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JV2jMYB2EeiyN7Yq9bqbrA" name="event" type="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JV3KQYB2EeiyN7Yq9bqbrA" name="activateSelectSchemaCard" visibility="public" method="_JV3xUIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JV3xUYB2EeiyN7Yq9bqbrA" name="activateGameTable" visibility="public" method="_JV4YYIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JV4YYYB2EeiyN7Yq9bqbrA" name="activateGameEnding" visibility="public" method="_JV4_cIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JV4_cYB2EeiyN7Yq9bqbrA" name="getGraphics" visibility="public" method="_JV5mgYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JV5mgIB2EeiyN7Yq9bqbrA" type="_JXwnsIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_JXwnsIB2EeiyN7Yq9bqbrA" name="Graphics" visibility="public">
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JXx10IB2EeiyN7Yq9bqbrA" name="GUI"/>
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JXx10YB2EeiyN7Yq9bqbrA" name="CLI"/>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JUdcEIB2EeiyN7Yq9bqbrA" name="LogEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JUl-8IB2EeiyN7Yq9bqbrA" name="DiceHolderChangedEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JUnNEIB2EeiyN7Yq9bqbrA" name="DraftBoardChangedEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JUobMIB2EeiyN7Yq9bqbrA" name="PlayerChangedEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JUregIB2EeiyN7Yq9bqbrA" name="SchemaChangedEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JUssoYB2EeiyN7Yq9bqbrA" name="ToolCardChangedEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JU12kYB2EeiyN7Yq9bqbrA" name="PublicObjectiveEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JU3EsIB2EeiyN7Yq9bqbrA" name="TurnChangedEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JU4S0IB2EeiyN7Yq9bqbrA" name="AskPlaceRedrawDiceEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JU5g8IB2EeiyN7Yq9bqbrA" name="AskPlaceRedrawDiceWithNumberSelectionEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JU6vEIB2EeiyN7Yq9bqbrA" name="PlayerTimeoutEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JU7WIYB2EeiyN7Yq9bqbrA" name="TimeoutCommunicationEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JVQtUIB2EeiyN7Yq9bqbrA" name="GameStartEvent"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JVcTgIB2EeiyN7Yq9bqbrA" name="AbstractExchangeWDiceHolder" visibility="public" isAbstract="true">
                <generalization xmi:type="uml:Generalization" xmi:id="_JVc6kIB2EeiyN7Yq9bqbrA" general="_JRXEwIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JVc6kYB2EeiyN7Yq9bqbrA" name="diceIndex" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVn5soB2EeiyN7Yq9bqbrA" name="AbstractExchangeWDiceHolder" specification="_JVdhoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    super(gameTable);
    this.diceIndex = diceIndex;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVpu4IB2EeiyN7Yq9bqbrA" name="createFromContext" specification="_JVogwIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (gameTable.getView().getGraphics() == RemoteView.Graphics.GUI) {
        return new GUIExchangeWDiceHolder(gameTable, diceIndex);
    } else {
        return new CLIExchangeWDiceHolder(gameTable, diceIndex);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVqV8YB2EeiyN7Yq9bqbrA" name="processVictim" specification="_JVpu4YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (victim == null) {
        throw new InputError(&quot;Invalid Input&quot;);
    }
    getGameTable().getView().sendEventToController(new SwapDiceFaceWithDiceHolderEvent(getClass().getName(), &quot;&quot;, getGameTable().getCurrentPlayer(), getGameTable().getToolIndexByName(&quot;CircularCutter&quot;), diceIndex, victim.y, victim.x));
    getGameTable().setState(AbstractMainMenuState.createFromContext(getGameTable()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JVq9AYB2EeiyN7Yq9bqbrA" name="processCancel" specification="_JVq9AIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    getGameTable().setState(AbstractMainMenuState.createFromContext(this.getGameTable()));
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVdhoIB2EeiyN7Yq9bqbrA" name="AbstractExchangeWDiceHolder" visibility="protected" method="_JVn5soB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVn5sIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVn5sYB2EeiyN7Yq9bqbrA" name="diceIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_ILxaUPaLEeW5KOK8aDMdgA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVogwIB2EeiyN7Yq9bqbrA" name="createFromContext" visibility="public" isStatic="true" method="_JVpu4IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVpH0IB2EeiyN7Yq9bqbrA" type="_JVcTgIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVpH0YB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVpH0oB2EeiyN7Yq9bqbrA" name="diceIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_ILxaUPaLEeW5KOK8aDMdgA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVpu4YB2EeiyN7Yq9bqbrA" name="processVictim" visibility="protected" method="_JVqV8YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JVqV8IB2EeiyN7Yq9bqbrA" name="victim" type="_JSH5wIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JVq9AIB2EeiyN7Yq9bqbrA" name="processCancel" visibility="protected" method="_JVq9AYB2EeiyN7Yq9bqbrA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JX0SEIB2EeiyN7Yq9bqbrA" name="InputError" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_JX1gMYB2EeiyN7Yq9bqbrA" general="_JX0SEYB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JX38cIB2EeiyN7Yq9bqbrA" name="InputError" specification="_JX2HQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    super(message);
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JX2HQIB2EeiyN7Yq9bqbrA" name="InputError" visibility="public" method="_JX38cIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JX3VYYB2EeiyN7Yq9bqbrA" name="message" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JX0SEYB2EeiyN7Yq9bqbrA" name="RuntimeException"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JX5KkIB2EeiyN7Yq9bqbrA" name="AbstractMoveDice" visibility="public" isAbstract="true">
                <generalization xmi:type="uml:Generalization" xmi:id="_JX5xoIB2EeiyN7Yq9bqbrA" general="_JRXEwIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JX5xoYB2EeiyN7Yq9bqbrA" name="firstSource" visibility="private" type="_JSH5wIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JX6YsIB2EeiyN7Yq9bqbrA" name="secondSource" visibility="private" type="_JSH5wIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JX6_wIB2EeiyN7Yq9bqbrA" name="firstDestination" visibility="private" type="_JSH5wIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JX7m0IB2EeiyN7Yq9bqbrA" name="secondDestination" visibility="private" type="_JSH5wIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JX7m0YB2EeiyN7Yq9bqbrA" name="ignore" visibility="private" type="_IyglkIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JX8N4IB2EeiyN7Yq9bqbrA" name="toolName" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JX-DEIB2EeiyN7Yq9bqbrA" name="times" visibility="private" type="_JaRJIIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JX-qIIB2EeiyN7Yq9bqbrA" name="color" visibility="private" isLeaf="true" type="_JACEMIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JYAfUIB2EeiyN7Yq9bqbrA" name="actionState" visibility="private" type="_Jchy8IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JYAfUYB2EeiyN7Yq9bqbrA" name="playerSchema" visibility="private" type="_IzxJ0IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JYEJsYB2EeiyN7Yq9bqbrA" name="AbstractMoveDice" specification="_JYBGYIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this(gameTable, ignore, toolName, times, null);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JYH0EYB2EeiyN7Yq9bqbrA" name="AbstractMoveDice" specification="_JYEwwIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    super(gameTable);
    this.ignore = ignore;
    this.toolName = toolName;
    this.times = times;
    this.color = color;
    actionState = ActionState.CHOOSE;
    playerSchema = this.getGameTable().getSchema(this.getGameTable().getView().getPlayer()).cloneSchema();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JYKQUIB2EeiyN7Yq9bqbrA" name="createFromContext" specification="_JYIbIIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (gameTable.getView().getGraphics() == RemoteView.Graphics.GUI) {
        return new GUIMoveDice(gameTable, ignore, toolName, times);
    } else {
        return new CLIMoveDice(gameTable, ignore, toolName, times);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JYMskYB2EeiyN7Yq9bqbrA" name="createFromContext" specification="_JYK3YIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (gameTable.getView().getGraphics() == RemoteView.Graphics.GUI) {
        return new GUIMoveDice(gameTable, ignore, toolName, times, color);
    } else {
        return new CLIMoveDice(gameTable, ignore, toolName, times, color);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JYN6sIB2EeiyN7Yq9bqbrA" name="processFirstSource" specification="_JYNToIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.firstSource = firstSource;
    if (playerSchema.getDiceFace(firstSource) == null) {
        throw new InputError(&quot;The cell is empty!&quot;);
    }
    if (color != null &amp;&amp; !playerSchema.getDiceFace(firstSource).getColor().equals(color)) {
        CLIPrinter.printError(&quot;You cannot move a dice of this color!&quot;);
        getGameTable().setState(this);
        return;
    }
    actionState = ActionState.PLACE;
    getGameTable().setState(this);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JYOhwYB2EeiyN7Yq9bqbrA" name="processSecondSource" specification="_JYN6sYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.secondSource = secondSource;
    if (playerSchema.getDiceFace(secondSource) == null) {
        throw new InputError(&quot;The cell is empty!&quot;);
    }
    if (color != null &amp;&amp; !playerSchema.getDiceFace(secondSource).getColor().equals(color)) {
        throw new InputError(&quot;You cannot move a dice of this color!&quot;);
    }
    actionState = ActionState.PLACE;
    getGameTable().setState(this);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JYPv4YB2EeiyN7Yq9bqbrA" name="processFirstDestination" specification="_JYPI0IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.firstDestination = firstDestination;
    if (playerSchema.getDiceFace(firstDestination) != null) {
        throw new InputError(&quot;The cell not empty!&quot;);
    }
    DiceFace prevDice = playerSchema.removeDiceFace(firstSource);
    if (!playerSchema.isDiceAllowed(firstDestination, prevDice, ignore)) {
        this.playerSchema = this.getGameTable().getSchema(this.getGameTable().getView().getPlayer());
        actionState = ActionState.CHOOSE;
        throw new InputError(&quot;Movement not permitted&quot;);
    }
    playerSchema.setDiceFace(firstDestination, prevDice);
    times = Times.SECOND;
    actionState = ActionState.CHOOSE;
    getGameTable().setState(this);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JYQ-AYB2EeiyN7Yq9bqbrA" name="processSecondDestination" specification="_JYQW8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (playerSchema.getDiceFace(secondDestination) != null) {
        throw new InputError(&quot;The cell not empty!&quot;);
    }
    DiceFace prevDice = playerSchema.removeDiceFace(secondSource);
    if (!playerSchema.isDiceAllowed(secondDestination, prevDice, ignore)) {
        this.playerSchema = this.getGameTable().getSchema(this.getGameTable().getView().getPlayer());
        actionState = ActionState.CHOOSE;
        throw new InputError(&quot;Movement not permitted&quot;);
    }
    playerSchema.setDiceFace(secondDestination, prevDice);
    if (this.toolName.equals(&quot;EglomiseBrush&quot;) || this.toolName.equals(&quot;CopperReamer&quot;))
        this.getGameTable().getView().sendEventToController(new MoveDiceEvent(this.getClass().getName(), &quot;&quot;, this.getGameTable().getView().getPlayer(), this.getGameTable().getToolIndexByName(this.toolName), secondSource, secondDestination));
    if (this.toolName.equals(&quot;Lathekin&quot;))
        this.getGameTable().getView().sendEventToController(new DoubleMoveDiceEvent(getClass().getName(), &quot;&quot;, this.getGameTable().getView().getPlayer(), getGameTable().getToolIndexByName(toolName), firstSource, firstDestination, secondSource, secondDestination));
    if (this.toolName.equals(&quot;ManualCutter&quot;)) {
        this.getGameTable().getView().sendEventToController(new DoubleMoveOfColorDiceEvent(getClass().getName(), &quot;&quot;, getGameTable().getView().getPlayer(), getGameTable().getToolIndexByName(toolName), firstSource, firstDestination, secondSource, secondDestination, color));
    }
    getGameTable().setState(AbstractMainMenuState.createFromContext(getGameTable()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JYRlEYB2EeiyN7Yq9bqbrA" name="processCancel" specification="_JYRlEIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    getGameTable().setState(AbstractMainMenuState.createFromContext(this.getGameTable()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JYSzMIB2EeiyN7Yq9bqbrA" name="getTimes" specification="_JYSMIIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return times;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JYTaQYB2EeiyN7Yq9bqbrA" name="getActionState" specification="_JYSzMYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return actionState;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JYUBUoB2EeiyN7Yq9bqbrA" name="getTemporaryPlayerSchema" specification="_JYUBUIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return playerSchema;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JYBGYIB2EeiyN7Yq9bqbrA" name="AbstractMoveDice" visibility="public" method="_JYEJsYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYC7kIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYC7kYB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYDioIB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYEJsIB2EeiyN7Yq9bqbrA" name="times" type="_JaRJIIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JYEwwIB2EeiyN7Yq9bqbrA" name="AbstractMoveDice" visibility="public" method="_JYH0EYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYF-4YB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYGl8IB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYHNAIB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYHNAYB2EeiyN7Yq9bqbrA" name="times" type="_JaRJIIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYH0EIB2EeiyN7Yq9bqbrA" name="color" type="_JACEMIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JYIbIIB2EeiyN7Yq9bqbrA" name="createFromContext" visibility="public" isStatic="true" method="_JYKQUIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYIbIYB2EeiyN7Yq9bqbrA" type="_JX5KkIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYJCMIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYJCMYB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYJpQIB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYJpQYB2EeiyN7Yq9bqbrA" name="times" type="_JaRJIIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JYK3YIB2EeiyN7Yq9bqbrA" name="createFromContext" visibility="public" isStatic="true" method="_JYMskYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYK3YYB2EeiyN7Yq9bqbrA" type="_JX5KkIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYLecIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYLecYB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYMFgIB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYMFgYB2EeiyN7Yq9bqbrA" name="times" type="_JaRJIIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYMskIB2EeiyN7Yq9bqbrA" name="color" type="_JACEMIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JYNToIB2EeiyN7Yq9bqbrA" name="processFirstSource" visibility="public" method="_JYN6sIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYNToYB2EeiyN7Yq9bqbrA" name="firstSource" type="_JSH5wIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JYN6sYB2EeiyN7Yq9bqbrA" name="processSecondSource" visibility="public" method="_JYOhwYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYOhwIB2EeiyN7Yq9bqbrA" name="secondSource" type="_JSH5wIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JYPI0IB2EeiyN7Yq9bqbrA" name="processFirstDestination" visibility="public" method="_JYPv4YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYPv4IB2EeiyN7Yq9bqbrA" name="firstDestination" type="_JSH5wIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JYQW8IB2EeiyN7Yq9bqbrA" name="processSecondDestination" visibility="public" method="_JYQ-AYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYQ-AIB2EeiyN7Yq9bqbrA" name="secondDestination" type="_JSH5wIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JYRlEIB2EeiyN7Yq9bqbrA" name="processCancel" visibility="public" method="_JYRlEYB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JYSMIIB2EeiyN7Yq9bqbrA" name="getTimes" visibility="public" method="_JYSzMIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYSMIYB2EeiyN7Yq9bqbrA" type="_JaRJIIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JYSzMYB2EeiyN7Yq9bqbrA" name="getActionState" visibility="public" method="_JYTaQYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYTaQIB2EeiyN7Yq9bqbrA" type="_Jchy8IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JYUBUIB2EeiyN7Yq9bqbrA" name="getTemporaryPlayerSchema" visibility="public" method="_JYUBUoB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JYUBUYB2EeiyN7Yq9bqbrA" type="_IzxJ0IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_JaRJIIB2EeiyN7Yq9bqbrA" name="Times" visibility="public">
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JaS-UIB2EeiyN7Yq9bqbrA" name="FIRST"/>
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JaS-UYB2EeiyN7Yq9bqbrA" name="SECOND"/>
                </nestedClassifier>
                <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_Jchy8IB2EeiyN7Yq9bqbrA" name="ActionState" visibility="public">
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JcjBEIB2EeiyN7Yq9bqbrA" name="CHOOSE"/>
                  <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JcjoIIB2EeiyN7Yq9bqbrA" name="PLACE"/>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Jck2QIB2EeiyN7Yq9bqbrA" name="AbstractMainMenuState" visibility="public" isAbstract="true">
                <generalization xmi:type="uml:Generalization" xmi:id="_JcldUIB2EeiyN7Yq9bqbrA" general="_JRXEwIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JcmEYIB2EeiyN7Yq9bqbrA" name="provider" visibility="private" isStatic="true" type="_IyEgsIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JcmEYYB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new HashMap&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JcpHsYB2EeiyN7Yq9bqbrA" name="AbstractMainMenuState" specification="_JcmrcIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    super(gameTable);
    this.setupProvider();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jcq84YB2EeiyN7Yq9bqbrA" name="createFromContext" specification="_JcpuwIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (gameTable.getView().getGraphics() == RemoteView.Graphics.GUI) {
        return new GUIMainMenuState(gameTable);
    } else {
        return new CLIMainMenuState(gameTable);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jcrj8YB2EeiyN7Yq9bqbrA" name="setupProvider" specification="_Jcrj8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (!provider.isEmpty())
        return;
    provider.put(0, () -> {
        CLIPrinter.printRecentEvents(getGameTable().getPastEvents());
        return this;
    });
    provider.put(1, () -> {
        CLIPrinter.printDraftBoard(this.getGameTable().getDraftBoardImmutable());
        return this;
    });
    provider.put(2, () -> new ShowPlayerState(this.getGameTable()));
    provider.put(3, () -> {
        CLIPrinter.printDiceHolder(this.getGameTable().getDiceHolderImmutable());
        return this;
    });
    provider.put(4, () -> {
        for (int i = 0; i &lt; Settings.TOOLCARDS_N; i++) {
            CLIPrinter.printToolcard(this.getGameTable().getToolCardImmutable(i), i);
        }
        for (int i = 0; i &lt; Settings.POBJECTIVES_N; i++) {
            CLIPrinter.printPublicObjectives(this.getGameTable().getPublicObjective(i), i);
        }
        return this;
    });
    provider.put(5, () -> {
        CLIPrinter.printSchema(this.getGameTable().getSchema(this.getGameTable().getView().getPlayer()));
        CLIPrinter.printPrivateObjective(this.getGameTable().getPlayer(this.getGameTable().getView().getPlayer()).getPrivateObjective());
        CLIPrinter.printTokens(this.getGameTable().getPlayer(this.getGameTable().getView().getPlayer()).getToken(), this.getGameTable().getSchema(this.getGameTable().getView().getPlayer()).getSchemaCardFace().getDifficulty());
        return this;
    });
    provider.put(6, () -> AbstractPlaceDiceState.createFromContext(this.getGameTable(), SchemaCardFace.Ignore.NOTHING, false, false));
    provider.put(7, () -> AbstractUseToolState.createFromContext(this.getGameTable()));
    provider.put(8, () -> {
        this.getGameTable().getView().sendEventToController(new EndTurnEvent(this.getClass().getName(), this.getGameTable().getView().getPlayer(), this.getGameTable().getView().getPlayer()));
        return this;
    });
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JcsyEYB2EeiyN7Yq9bqbrA" name="processSelection" specification="_JcsLAIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (selection &lt; 0 || selection > 8) {
        if (getGameTable().getView().getPlayer().equals(this.getGameTable().getCurrentPlayer())) {
            throw new InputError(&quot;The selection must be between 1 and 8&quot;);
        } else {
            throw new InputError(&quot;The selection must be between 1 and 5&quot;);
        }
    }
    if (!getGameTable().getView().getPlayer().equals(this.getGameTable().getCurrentPlayer()) &amp;&amp; selection > 5) {
        throw new InputError(&quot;It's not your turn, you motherfather!&quot;);
    }
    if (selection == 7) {
        if (getGameTable().isToolcardUsed()) {
            throw new InputError(&quot;You have already used a toolcard in this turn&quot;);
        } else {
            provider.get(7).get();
        }
    }
    if (selection == 6) {
        if (getGameTable().isDicePlaced()) {
            throw new InputError(&quot;You have already placed a dice in this turn&quot;);
        }
    }
    getGameTable().setState(provider.get(selection).get());
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JcmrcIB2EeiyN7Yq9bqbrA" name="AbstractMainMenuState" visibility="protected" method="_JcpHsYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JcpHsIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JcpuwIB2EeiyN7Yq9bqbrA" name="createFromContext" visibility="public" isStatic="true" method="_Jcq84YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JcqV0IB2EeiyN7Yq9bqbrA" type="_Jck2QIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jcq84IB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Jcrj8IB2EeiyN7Yq9bqbrA" name="setupProvider" visibility="private" method="_Jcrj8YB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JcsLAIB2EeiyN7Yq9bqbrA" name="processSelection" visibility="public" method="_JcsyEYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JcsyEIB2EeiyN7Yq9bqbrA" name="selection">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Jc18AIB2EeiyN7Yq9bqbrA" name="AbstractChooseColorFromDiceHolder" visibility="public" isAbstract="true">
                <generalization xmi:type="uml:Generalization" xmi:id="_Jc18AYB2EeiyN7Yq9bqbrA" general="_JRXEwIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Jc2jEIB2EeiyN7Yq9bqbrA" name="provider" visibility="private" isStatic="true" type="_IyEgsIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Jc3KIIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new HashMap&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_Jc3xMIB2EeiyN7Yq9bqbrA" name="toolName" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jc60gYB2EeiyN7Yq9bqbrA" name="AbstractChooseColorFromDiceHolder" specification="_Jc4YQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    super(gameTable);
    this.toolName = toolName;
    this.setupProvider();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jc9QwIB2EeiyN7Yq9bqbrA" name="createFromContext" specification="_Jc8CoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (gameTable.getView().getGraphics() == RemoteView.Graphics.GUI) {
        return new GUIChooseColorFromDiceHolder(gameTable, toolName);
    } else {
        return new CLIChooseColorFromDiceHolder(gameTable, toolName);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jc930YB2EeiyN7Yq9bqbrA" name="setupProvider" specification="_Jc930IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (!provider.isEmpty())
        return;
    //1
    provider.put(&quot;ManualCutter&quot;, ( i) -> AbstractMoveDice.createFromContext(getGameTable(), SchemaCardFace.Ignore.NOTHING, toolName, AbstractMoveDice.Times.FIRST, i));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jc_F8IB2EeiyN7Yq9bqbrA" name="processColorSelected" specification="_Jc-e4IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    boolean found = false;
    for (int i = 0; i &lt; Settings.TURNS; i++) {
        for (DiceFace el : getGameTable().getDiceHolderImmutable().getDiceFaces(i)) {
            if (el.getColor().equals(color)) {
                found = true;
            }
        }
    }
    if (!found) {
        throw new InputError(&quot;The color is not in the Round Track&quot;);
    }
    getGameTable().setState(provider.get(toolName).apply(color));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jc_tAIB2EeiyN7Yq9bqbrA" name="processCancel" specification="_Jc_F8YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    getGameTable().setState(AbstractMainMenuState.createFromContext(getGameTable()));
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Jc4YQIB2EeiyN7Yq9bqbrA" name="AbstractChooseColorFromDiceHolder" visibility="protected" method="_Jc60gYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jc6NcIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jc60gIB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Jc8CoIB2EeiyN7Yq9bqbrA" name="createFromContext" visibility="public" isStatic="true" method="_Jc9QwIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jc8CoYB2EeiyN7Yq9bqbrA" type="_Jc18AIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jc8psIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jc8psYB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Jc930IB2EeiyN7Yq9bqbrA" name="setupProvider" visibility="private" method="_Jc930YB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Jc-e4IB2EeiyN7Yq9bqbrA" name="processColorSelected" visibility="public" method="_Jc_F8IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jc-e4YB2EeiyN7Yq9bqbrA" name="color" type="_JACEMIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Jc_F8YB2EeiyN7Yq9bqbrA" name="processCancel" visibility="public" method="_Jc_tAIB2EeiyN7Yq9bqbrA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JdAUEIB2EeiyN7Yq9bqbrA" name="AbstractIncrementDice" visibility="public" isAbstract="true">
                <generalization xmi:type="uml:Generalization" xmi:id="_JdA7IIB2EeiyN7Yq9bqbrA" general="_JRXEwIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JdA7IYB2EeiyN7Yq9bqbrA" name="diceIndex" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdDXYIB2EeiyN7Yq9bqbrA" name="AbstractIncrementDice" specification="_JdBiMIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    super(gameTable);
    this.diceIndex = diceIndex;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdD-c4B2EeiyN7Yq9bqbrA" name="createFromContext" specification="_JdDXYYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (gameTable.getView().getGraphics() == RemoteView.Graphics.GUI) {
        return new GUIIncrementDice(gameTable, diceIndex);
    } else {
        return new CLIIncrementDice(gameTable, diceIndex);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdElgoB2EeiyN7Yq9bqbrA" name="processIncrement" specification="_JdElgIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (increment == -1 &amp;&amp; getGameTable().getDraftBoardImmutable().getDices()[diceIndex].getNumber() == 1) {
        throw new InputError(&quot;Cannot decrement a 1 dice!&quot;);
    }
    if (increment == 1 &amp;&amp; getGameTable().getDraftBoardImmutable().getDices()[diceIndex].getNumber() == 6) {
        throw new InputError(&quot;Cannot increment a 6 dice!&quot;);
    }
    this.getGameTable().getView().sendEventToController(new ChangeDiceNumberEvent(this.getClass().getName(), &quot;&quot;, this.getGameTable().getView().getPlayer(), this.getGameTable().getToolIndexByName(&quot;RoughingNipper&quot;), this.diceIndex, increment));
    getGameTable().setState(AbstractMainMenuState.createFromContext(this.getGameTable()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdElhIB2EeiyN7Yq9bqbrA" name="processCancel" specification="_JdElg4B2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    getGameTable().setState(AbstractMainMenuState.createFromContext(this.getGameTable()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdFMkoB2EeiyN7Yq9bqbrA" name="getDiceIndex" specification="_JdFMkIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return diceIndex;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdBiMIB2EeiyN7Yq9bqbrA" name="AbstractIncrementDice" visibility="protected" method="_JdDXYIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdCwUIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdCwUYB2EeiyN7Yq9bqbrA" name="diceIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_ILxaUPaLEeW5KOK8aDMdgA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdDXYYB2EeiyN7Yq9bqbrA" name="createFromContext" visibility="public" isStatic="true" method="_JdD-c4B2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdD-cIB2EeiyN7Yq9bqbrA" type="_JdAUEIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdD-cYB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdD-coB2EeiyN7Yq9bqbrA" name="diceIndex">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_ILxaUPaLEeW5KOK8aDMdgA"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdElgIB2EeiyN7Yq9bqbrA" name="processIncrement" visibility="public" method="_JdElgoB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdElgYB2EeiyN7Yq9bqbrA" name="increment">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdElg4B2EeiyN7Yq9bqbrA" name="processCancel" visibility="public" method="_JdElhIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdFMkIB2EeiyN7Yq9bqbrA" name="getDiceIndex" visibility="public" method="_JdFMkoB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdFMkYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Jdbx4IB2EeiyN7Yq9bqbrA" name="AbstractUseToolState" visibility="public" isAbstract="true">
                <generalization xmi:type="uml:Generalization" xmi:id="_Jdbx4YB2EeiyN7Yq9bqbrA" general="_JRXEwIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JdcY8IB2EeiyN7Yq9bqbrA" name="provider" visibility="private" isStatic="true" type="_IyEgsIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JddAAIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new HashMap&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jde1MYB2EeiyN7Yq9bqbrA" name="AbstractUseToolState" specification="_JddAAYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    super(gameTable);
    this.setupProvider();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdgDUYB2EeiyN7Yq9bqbrA" name="createFromContext" specification="_JdfcQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (gameTable.getView().getGraphics() == RemoteView.Graphics.GUI) {
        return new GUIUseToolState(gameTable);
    } else {
        return new CLIUseToolState(gameTable);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdgqYYB2EeiyN7Yq9bqbrA" name="setupProvider" specification="_JdgqYIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (!provider.isEmpty())
        return;
    //1
    provider.put(&quot;RoughingNipper&quot;, () -> {
        return AbstractChooseDice.createFromContext(getGameTable(), &quot;RoughingNipper&quot;);
    });
    //2
    provider.put(&quot;EglomiseBrush&quot;, () -> {
        return AbstractMoveDice.createFromContext(getGameTable(), SchemaCardFace.Ignore.COLOR, &quot;EglomiseBrush&quot;, AbstractMoveDice.Times.SECOND);
    });
    //3
    provider.put(&quot;CopperReamer&quot;, () -> {
        return AbstractMoveDice.createFromContext(getGameTable(), SchemaCardFace.Ignore.NUMBER, &quot;CopperReamer&quot;, AbstractMoveDice.Times.SECOND);
    });
    //4
    provider.put(&quot;Lathekin&quot;, () -> {
        return AbstractMoveDice.createFromContext(getGameTable(), SchemaCardFace.Ignore.NOTHING, &quot;Lathekin&quot;, AbstractMoveDice.Times.FIRST);
    });
    //5
    provider.put(&quot;CircularCutter&quot;, () -> {
        return AbstractChooseDice.createFromContext(getGameTable(), &quot;CircularCutter&quot;);
    });
    //6
    provider.put(&quot;FirmPastaBrush&quot;, () -> {
        return AbstractChooseDice.createFromContext(getGameTable(), &quot;FirmPastaBrush&quot;);
    });
    //7
    provider.put(&quot;Gavel&quot;, () -> {
        if (!getGameTable().getRoundDirection() &amp;&amp; !getGameTable().isDicePlaced()) {
            this.getGameTable().getView().sendEventToController(new DiceActionEvent(this.getClass().getName(), &quot;&quot;, getGameTable().getView().getPlayer(), this.getGameTable().getToolIndexByName(&quot;Gavel&quot;), -1));
        } else {
            throw new InputError(&quot;You can't activate this card now!&quot;);
        }
        return AbstractMainMenuState.createFromContext(getGameTable());
    });
    //8
    provider.put(&quot;WheeledPincer&quot;, () -> {
        if (!getGameTable().getRoundDirection()) {
            throw new InputError(&quot;You can't activate this card now!&quot;);
        }
        return AbstractPlaceDiceState.createFromContext(getGameTable(), SchemaCardFace.Ignore.NOTHING, true, false);
    });
    //9
    provider.put(&quot;CorkRow&quot;, () -> {
        return AbstractPlaceDiceState.createFromContext(getGameTable(), SchemaCardFace.Ignore.NOTHING, true, true);
    });
    //10
    provider.put(&quot;DiamondPad&quot;, () -> {
        return AbstractChooseDice.createFromContext(getGameTable(), &quot;DiamondPad&quot;);
    });
    //11
    provider.put(&quot;FirmPastaDiluent&quot;, () -> {
        return AbstractChooseDice.createFromContext(getGameTable(), &quot;FirmPastaDiluent&quot;);
    });
    provider.put(&quot;ManualCutter&quot;, () -> AbstractChooseColorFromDiceHolder.createFromContext(getGameTable(), &quot;ManualCutter&quot;));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdhRcYB2EeiyN7Yq9bqbrA" name="processCancel" specification="_JdhRcIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    getGameTable().setState(AbstractMainMenuState.createFromContext(getGameTable()));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdifkYB2EeiyN7Yq9bqbrA" name="processUseToolCard" specification="_Jdh4gIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (selection >= 0 &amp;&amp; selection &lt; Settings.TOOLCARDS_N) {
        if (getGameTable().getPlayer(getGameTable().getView().getPlayer()).getToken() &lt; getGameTable().getToolCardImmutable(selection).getNeededTokens()) {
            throw new InputError(&quot;You don't have enough tokens! :(&quot;);
        }
        getGameTable().setState(provider.get(this.getGameTable().getToolCardImmutable(selection).getName()).get());
    } else {
        throw new InputError(&quot;The number is not between 0 and &quot; + (Settings.TOOLCARDS_N - 1));
    }
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JddAAYB2EeiyN7Yq9bqbrA" name="AbstractUseToolState" visibility="public" method="_Jde1MYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jde1MIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdfcQIB2EeiyN7Yq9bqbrA" name="createFromContext" visibility="public" isStatic="true" method="_JdgDUYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdfcQYB2EeiyN7Yq9bqbrA" type="_Jdbx4IB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdgDUIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdgqYIB2EeiyN7Yq9bqbrA" name="setupProvider" visibility="private" method="_JdgqYYB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JdhRcIB2EeiyN7Yq9bqbrA" name="processCancel" visibility="public" method="_JdhRcYB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_Jdh4gIB2EeiyN7Yq9bqbrA" name="processUseToolCard" visibility="public" method="_JdifkYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdifkIB2EeiyN7Yq9bqbrA" name="selection">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_JdjtsIB2EeiyN7Yq9bqbrA" name="CLI">
                <packagedElement xmi:type="uml:Class" xmi:id="_JdkUwIB2EeiyN7Yq9bqbrA" name="CLIMainMenuState" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JdkUwYB2EeiyN7Yq9bqbrA" general="_Jck2QIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdnYEIB2EeiyN7Yq9bqbrA" name="CLIMainMenuState" specification="_Jdk70IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdomMIB2EeiyN7Yq9bqbrA" name="process" specification="_Jdn_IIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int selection = -1;
    Log.d(&quot;HANDLING PROCESSING OF INPUT&quot; + input);
    try {
        selection = Integer.parseInt(input);
    } catch (NumberFormatException exception) {
        CLIPrinter.printError(&quot;The selection must be a number!&quot;);
        getGameTable().setState(this);
        return;
    }
    try {
        processSelection(selection);
    } catch (InputError ie) {
        CLIPrinter.printError(ie.getMessage());
        getGameTable().setState(this);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdpNQYB2EeiyN7Yq9bqbrA" name="unrealize" specification="_JdpNQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JdqbYIB2EeiyN7Yq9bqbrA" name="render" specification="_Jdp0UIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.println();
    System.out.println(&quot;Round: &quot; + getGameTable().getRoundNumber() + &quot;\nTurn:&quot; + (getGameTable().getRoundDirection() ? &quot;1&quot; : &quot;2&quot; + &quot; &quot;));
    CLIPrinter.printMenuLine(0, &quot;Show recent activities&quot;);
    CLIPrinter.printMenuLine(1, &quot;View Draft Board&quot;);
    CLIPrinter.printMenuLine(2, &quot;View Players&quot;);
    CLIPrinter.printMenuLine(3, &quot;View Round Track&quot;);
    CLIPrinter.printMenuLine(4, &quot;View Toolcards and Public Objectives&quot;);
    CLIPrinter.printMenuLine(5, &quot;View your Table&quot;);
    if (this.getGameTable().isMyTurn()) {
        CLIPrinter.printMenuLine(6, &quot;Place dice&quot;, !getGameTable().isDicePlaced());
        CLIPrinter.printMenuLine(7, &quot;Use Toolcard&quot;, !getGameTable().isToolcardUsed());
        CLIPrinter.printMenuLine(8, &quot;End Turn&quot;);
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jdk70IB2EeiyN7Yq9bqbrA" name="CLIMainMenuState" visibility="public" method="_JdnYEIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JdmxAIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jdn_IIB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_JdomMIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jdn_IYB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JdpNQIB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_JdpNQYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jdp0UIB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_JdqbYIB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JdrpgIB2EeiyN7Yq9bqbrA" name="CLISelectSchema" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JdsQkIB2EeiyN7Yq9bqbrA" general="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JduFwYB2EeiyN7Yq9bqbrA" name="iAmActive" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Jdus0IB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>false</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JdvT4IB2EeiyN7Yq9bqbrA" name="faces" visibility="private" type="_I1x8AIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JdvT4YB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JdvT4oB2EeiyN7Yq9bqbrA" value="*"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Jdv68IB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new SchemaCardFace[4]</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JdxJEYB2EeiyN7Yq9bqbrA" name="subState" visibility="private" type="_Jfu38IB2EeiyN7Yq9bqbrA" isUnique="false">
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JdxwIIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>CLISelectSchemaSubState.WAITINGDATA</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JdyXMIB2EeiyN7Yq9bqbrA" name="choice" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JduFwIB2EeiyN7Yq9bqbrA" name="CLISelectSchema implements InputListener" client="_JdrpgIB2EeiyN7Yq9bqbrA" supplier="_Jds3oIB2EeiyN7Yq9bqbrA" contract="_Jds3oIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jd0MYYB2EeiyN7Yq9bqbrA" name="CLISelectSchema" specification="_JdyXMYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(view);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jd1agIB2EeiyN7Yq9bqbrA" name="renderSecondsRemaining" specification="_Jd0zcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
//Do nothing
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jd2BkIB2EeiyN7Yq9bqbrA" name="renderEventLog" specification="_Jd1agYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
// Do nothing
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jd2ooYB2EeiyN7Yq9bqbrA" name="showSchemaCardFaceSelection" specification="_Jd2BkYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    for (int i = 0; i &lt; 4; i++) {
        faces[i] = event.getSchemas()[i / 2].getFace(i % 2 == 0 ? Side.FRONT : Side.BACK);
    }
    CLIPrinter.printQuestion(&quot;Choose your Schema Card: \n\n&quot;);
    for (int i = 0; i &lt; 4; i++) {
        CLIPrinter.printQuestion(i + 1 + &quot; for: &quot;);
        CLIPrinter.printSchemaCardFace(faces[i]);
        System.out.println();
    }
    subState = CLISelectSchemaSubState.CHOICE;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jd32wYB2EeiyN7Yq9bqbrA" name="renderPrivateObjective" specification="_Jd3PsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jd4d0YB2EeiyN7Yq9bqbrA" name="setActive" specification="_Jd4d0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(&quot;CLISELECTSCHEMA ACTIVE&quot;);
    if (!iAmActive) {
        InputListenerThread.getInstance().setInputListener(this);
        iAmActive = true;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jd5E4YB2EeiyN7Yq9bqbrA" name="setInactive" specification="_Jd5E4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(&quot;CLISELECTSCHEMA INACTIVE &quot; + iAmActive);
    if (iAmActive) {
        iAmActive = false;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jd66EIB2EeiyN7Yq9bqbrA" name="onCommandRecived" specification="_Jd5r8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (subState == CLISelectSchemaSubState.CHOICE) {
        try {
            choice = Integer.parseInt(input);
        } catch (RuntimeException e) {
            CLIPrinter.printError(&quot;Invalid choice, try again&quot;);
        }
        if (choice >= 1 &amp;&amp; choice &lt;= 4) {
            subState = CLISelectSchemaSubState.USURE;
            CLIPrinter.printQuestion(&quot;You chose &quot; + faces[choice - 1].getName() + &quot;, are you sure? [y] [N]&quot;);
        } else {
            CLIPrinter.printError(&quot;Invalid choice, try again&quot;);
        }
    } else if (subState == CLISelectSchemaSubState.USURE) {
        if (!input.trim().equalsIgnoreCase(&quot;y&quot;) &amp;&amp; !input.trim().equalsIgnoreCase(&quot;n&quot;) &amp;&amp; !input.trim().equals(&quot;&quot;)) {
            CLIPrinter.printError(&quot;Invalid choice, try again&quot;);
        } else if (input.trim().equalsIgnoreCase(&quot;y&quot;)) {
            selectFace((choice - 1) / 2, (choice - 1) % 2 == 0 ? Side.FRONT : Side.BACK);
            subState = CLISelectSchemaSubState.END;
        } else {
            subState = CLISelectSchemaSubState.CHOICE;
        }
    } else if (subState == CLISelectSchemaSubState.END) {
        CLIPrinter.printError(&quot;Waiting for other players...&quot;);
    } else if (subState == CLISelectSchemaSubState.WAITINGDATA) {
        CLIPrinter.printError(&quot;Waiting for game to start...&quot;);
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JdyXMYB2EeiyN7Yq9bqbrA" name="CLISelectSchema" visibility="public" method="_Jd0MYYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jd0MYIB2EeiyN7Yq9bqbrA" name="view" type="_JUUSIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jd0zcIB2EeiyN7Yq9bqbrA" name="renderSecondsRemaining" visibility="protected" method="_Jd1agIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jd1agYB2EeiyN7Yq9bqbrA" name="renderEventLog" visibility="public" method="_Jd2BkIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jd2BkYB2EeiyN7Yq9bqbrA" name="showSchemaCardFaceSelection" visibility="public" method="_Jd2ooYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jd2ooIB2EeiyN7Yq9bqbrA" name="event" type="_Iu0YYIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jd3PsIB2EeiyN7Yq9bqbrA" name="renderPrivateObjective" visibility="public" method="_Jd32wYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jd32wIB2EeiyN7Yq9bqbrA" name="privateObjective" type="_Izy_AYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jd4d0IB2EeiyN7Yq9bqbrA" name="setActive" visibility="public" method="_Jd4d0YB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jd5E4IB2EeiyN7Yq9bqbrA" name="setInactive" visibility="public" method="_Jd5E4YB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jd5r8IB2EeiyN7Yq9bqbrA" name="onCommandRecived" visibility="public" method="_Jd66EIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jd6TAIB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <nestedClassifier xmi:type="uml:Enumeration" xmi:id="_Jfu38IB2EeiyN7Yq9bqbrA" name="CLISelectSchemaSubState" visibility="public">
                    <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JfvfAIB2EeiyN7Yq9bqbrA" name="WAITINGDATA"/>
                    <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JfwGEIB2EeiyN7Yq9bqbrA" name="CHOICE"/>
                    <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JfwGEYB2EeiyN7Yq9bqbrA" name="USURE"/>
                    <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_JfwGEoB2EeiyN7Yq9bqbrA" name="END"/>
                  </nestedClassifier>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JfxUMIB2EeiyN7Yq9bqbrA" name="CLIChooseDice" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JfxUMYB2EeiyN7Yq9bqbrA" general="_JRWdsIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JfzwcIB2EeiyN7Yq9bqbrA" name="CLIChooseDice" specification="_Jfx7QIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, toolName);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jf0XgIB2EeiyN7Yq9bqbrA" name="render" specification="_JfzwcYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    CLIPrinter.printQuestion(&quot;Choose a dice: [0] to [&quot; + getGameTable().getDraftBoardImmutable().getDices().length + &quot;]&quot;);
    CLIPrinter.printDraftBoard(getGameTable().getDraftBoardImmutable());
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jf0-kYB2EeiyN7Yq9bqbrA" name="process" specification="_Jf0XgYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (input.equalsIgnoreCase(&quot;cancel&quot;)) {
        processCancel();
        return;
    }
    int dice = -1;
    try {
        dice = Integer.parseInt(input);
    } catch (RuntimeException ignored) {
        CLIPrinter.printError(&quot;Invalid input.&quot;);
        getGameTable().setState(this);
        return;
    }
    try {
        processDice(dice);
    } catch (InputError ie) {
        CLIPrinter.printError(ie.getMessage());
        getGameTable().setState(this);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jf1loYB2EeiyN7Yq9bqbrA" name="unrealize" specification="_Jf1loIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jfx7QIB2EeiyN7Yq9bqbrA" name="CLIChooseDice" visibility="public" method="_JfzwcIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JfzJYIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JfzJYYB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JfzwcYB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_Jf0XgIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jf0XgYB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_Jf0-kYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jf0-kIB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jf1loIB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_Jf1loYB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jf2zwIB2EeiyN7Yq9bqbrA" name="ShowPlayerState" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Jf2zwYB2EeiyN7Yq9bqbrA" general="_JRXEwIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jf5QAIB2EeiyN7Yq9bqbrA" name="ShowPlayerState" specification="_Jf2zwoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jf6eIIB2EeiyN7Yq9bqbrA" name="process" specification="_Jf53EIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (input.equals(&quot;cancel&quot;)) {
        getGameTable().setState(AbstractMainMenuState.createFromContext(getGameTable()));
    } else if (getGameTable().getPlayer(input) != null) {
        CLIPrinter.printPlayer(getGameTable(), getGameTable().getPlayer(input));
        getGameTable().setState(AbstractMainMenuState.createFromContext(getGameTable()));
    } else {
        CLIPrinter.printError(&quot;No such player!&quot;);
        getGameTable().setState(this);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jf7FMIB2EeiyN7Yq9bqbrA" name="unrealize" specification="_Jf6eIYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jf7sQIB2EeiyN7Yq9bqbrA" name="render" specification="_Jf7FMYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    CLIPrinter.printQuestion(&quot;Available players:&quot;);
    for (String name : getGameTable().getPlayers()) {
        CLIPrinter.printQuestion(name);
    }
    CLIPrinter.printQuestion(&quot;Insert the name of a player or cancel: &quot;);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jf2zwoB2EeiyN7Yq9bqbrA" name="ShowPlayerState" visibility="public" method="_Jf5QAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jf4o8IB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jf53EIB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_Jf6eIIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jf53EYB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jf6eIYB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_Jf7FMIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jf7FMYB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_Jf7sQIB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JgHScIB2EeiyN7Yq9bqbrA" name="CLIPrinter" visibility="public">
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgIgkIB2EeiyN7Yq9bqbrA" name="setup" specification="_JgH5gIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    AnsiConsole.systemInstall();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgJusYB2EeiyN7Yq9bqbrA" name="printSchemaCardFace" specification="_JgJHoYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.println(&quot;Name: &quot; + schemaCardFace.getName() + &quot;\nDifficulty: &quot; + schemaCardFace.getDifficulty());
    for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
        printLineSeparator(Settings.CARD_WIDTH);
        for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
            printRestriction(schemaCardFace.getRestriction(new Point(x, y)));
        }
        System.out.println(&quot;|&quot;);
    }
    printLineSeparator(Settings.CARD_WIDTH);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgLj4IB2EeiyN7Yq9bqbrA" name="printRestriction" specification="_JgK80IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (cellRestriction instanceof NoRestriction) {
        System.out.print(&quot;| &quot;);
    } else if (cellRestriction instanceof NumberRestriction) {
        System.out.print(&quot;|&quot; + ((NumberRestriction) cellRestriction).getNumber());
    } else {
        System.out.print(&quot;|&quot; + ansi().bg(((ColorRestriction) cellRestriction).getColor().getAnsiColor()).a(&quot; &quot;).reset());
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgMyAIB2EeiyN7Yq9bqbrA" name="printLineSeparator" specification="_JgMK8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    for (int x = 0; x &lt; param; x++) {
        System.out.print(&quot;+-&quot;);
    }
    System.out.println(&quot;+&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgOAIIB2EeiyN7Yq9bqbrA" name="printPrivateObjective" specification="_JgNZEIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Ansi.Color color = privateObjective.getColor().getAnsiColor();
    System.out.print(ansi().bg(color).a(&quot; &quot;).reset());
    System.out.print(ansi().fg(color).a(&quot;>&quot;).reset() + &quot;Sum the values of all the &quot; + ansi().fg(color).a(color.toString().toLowerCase()).reset() + &quot; dice&quot;);
    System.out.print(ansi().fg(color).a(&quot;&lt;&quot;).reset());
    System.out.println(ansi().bg(color).a(&quot; &quot;).reset());
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgP1UIB2EeiyN7Yq9bqbrA" name="printPlayer" specification="_JgOnMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.println(player.getName());
    printSchema(cliGameTable.getSchema(player.getName()));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgRDcIB2EeiyN7Yq9bqbrA" name="printError" specification="_JgQcYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.println(ansi().fg(Ansi.Color.RED).a(error).reset());
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgSRkYB2EeiyN7Yq9bqbrA" name="printQuestion" specification="_JgRqgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.println(ansi().fg(Ansi.Color.BLUE).a(question).reset());
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgUGwYB2EeiyN7Yq9bqbrA" name="printMenuLine" specification="_JgS4oIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    printMenuLine(option, line, true);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgWjAIB2EeiyN7Yq9bqbrA" name="printMenuLine" specification="_JgUt0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.println(ansi().fg(RED).a(option + &quot; => &quot;).fg(enabled ? BLUE : MAGENTA).a(line).reset());
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgXxIYB2EeiyN7Yq9bqbrA" name="printInfo" specification="_JgXKEIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.println(ansi().fg(GREEN).a(info).reset());
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgZmUIB2EeiyN7Yq9bqbrA" name="printDraftBoard" specification="_JgYYMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    printLineSeparator(draftBoardImmutable.getDices().length);
    for (int i = 0; i &lt; draftBoardImmutable.getDices().length; i++) {
        System.out.print(&quot;|&quot; + ansi().bg(draftBoardImmutable.getDices()[i].getColor().getAnsiColor()).a(draftBoardImmutable.getDices()[i].getNumber()).reset());
    }
    System.out.println(&quot;|&quot;);
    printLineSeparator(draftBoardImmutable.getDices().length);
    for (int i = 0; i &lt; draftBoardImmutable.getDices().length; i++) {
        System.out.print(&quot; &quot; + (i));
    }
    System.out.println();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jga0cIB2EeiyN7Yq9bqbrA" name="printDiceHolder" specification="_JgaNYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int pastTurns = diceHolderImmutable.getDoneTurns();
    int[] tLenght = new int[pastTurns];
    for (int i = 0; i &lt; pastTurns; i++) {
        tLenght[i] = diceHolderImmutable.getDiceFaces(i).length;
    }
    int maxTLenght = tLenght[0];
    for (int i = 1; i &lt; pastTurns; i++) {
        if (maxTLenght &lt; tLenght[i])
            maxTLenght = tLenght[i];
    }
    //11 spaces
    System.out.print(&quot;           &quot;);
    for (char a = 'A'; a &lt; 'A' + maxTLenght; a++) {
        System.out.print(&quot; &quot; + a + &quot; &quot;);
    }
    System.out.println();
    for (int i = 0; i &lt; pastTurns; i++) {
        DiceFace[] dices = diceHolderImmutable.getDiceFaces(i);
        System.out.print(&quot;Turn &quot; + (i + 1) + (i == 9 ? &quot;&quot; : &quot; &quot;) + &quot; => &quot;);
        for (int j = 0; j &lt; dices.length; j++) {
            printDice(dices[j]);
            System.out.print(&quot;|&quot;);
        }
        System.out.println();
    }
    for (int i = pastTurns; i &lt; Settings.TURNS; i++) {
        System.out.print(&quot;Turn &quot; + (i + 1) + (i == 9 ? &quot;&quot; : &quot; &quot;) + &quot; => &quot;);
        System.out.print(&quot;|&quot; + ansi().bg(Ansi.Color.WHITE).fg(Ansi.Color.BLACK).a(&quot;X&quot;).reset() + &quot;|&quot;);
        System.out.println();
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jgfs8IB2EeiyN7Yq9bqbrA" name="decodePosition" specification="_JgbbgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int pastTurns = diceHolderImmutable.getDoneTurns();
    int[] tLenght = new int[pastTurns];
    for (int i = 0; i &lt; pastTurns; i++) {
        tLenght[i] = diceHolderImmutable.getDiceFaces(i).length;
    }
    int maxTLenght = tLenght[0];
    for (int i = 1; i &lt; pastTurns; i++) {
        if (maxTLenght &lt; tLenght[i])
            maxTLenght = tLenght[i];
    }
    if (input == null)
        throw new NullPointerException(&quot;Input should not be null!&quot;);
    if (input.length() != 2)
        return null;
    int x = input.toUpperCase().charAt(0) - 'A';
    int y;
    try {
        y = Integer.parseInt(input.substring(1)) - 1;
    } catch (NumberFormatException ex) {
        return null;
    }
    if (y &lt; 0 || y >= pastTurns)
        return null;
    if (x &lt; 0 || x >= diceHolderImmutable.getDiceFaces(y).length)
        return null;
    return new Point(x, y);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JghiIIB2EeiyN7Yq9bqbrA" name="printToolcard" specification="_JggUAIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.println(ansi().bg(WHITE).fg(RED).a(&quot;Toolcard n: &quot; + index).reset());
    String path = &quot;cli/toolcards/&quot; + toolCardImmutable.getName() + &quot;.json&quot;;
    FileInputStream fileInputStream = null;
    try {
        File toolcardResources = new File(Objects.requireNonNull(toolCardImmutable.getClass().getClassLoader().getResource(path)).toURI());
        fileInputStream = new FileInputStream(toolcardResources);
    } catch (FileNotFoundExceptionURISyntaxException | NullPointerException |  e) {
        Log.d(&quot;Resource file linked to &quot; + toolCardImmutable.getName() + &quot; not found.&quot;);
        return;
    }
    BufferedInputStream bufferedInputStream = new BufferedInputStream(fileInputStream);
    StringBuilder builder;
    try (Scanner scanner = new Scanner(bufferedInputStream)) {
        builder = new StringBuilder();
        while (scanner.hasNextLine()) {
            builder.append(scanner.nextLine());
        }
    }
    JSONObject root = new JSONObject(builder.toString());
    System.out.println(ansi().fg(GREEN).a(root.getString(&quot;title&quot;)).reset());
    System.out.println(ansi().fg(BLUE).a(&quot;Tokens needed: &quot; + toolCardImmutable.getToken()).reset());
    System.out.println(ansi().fg(BLUE).a(root.getString(&quot;description&quot;)).reset());
    try {
        System.out.println(ansi().fg(RED).a(root.getString(&quot;restriction&quot;)).reset());
    } catch (Exception ignored) {
    }
    // Yes, I want to print 2 newlines
    System.out.println(&quot;\n&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jgj-YIB2EeiyN7Yq9bqbrA" name="printPublicObjectives" specification="_JgiJMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.println(ansi().bg(WHITE).fg(RED).a(&quot;Public Objective n: &quot; + index).reset());
    String path = &quot;cli/publicObjectives/&quot; + publicObjective + &quot;.json&quot;;
    File publicObjectiveResource = null;
    FileInputStream fileInputStream = null;
    try {
        publicObjectiveResource = new File(Objects.requireNonNull(publicObjective.getClass().getClassLoader().getResource(path)).toURI());
        fileInputStream = new FileInputStream(publicObjectiveResource);
    } catch (FileNotFoundExceptionURISyntaxException | NullPointerException |  e) {
        Log.d(&quot;Resource file linked to &quot; + publicObjective + &quot; not found.&quot;);
        return;
    }
    BufferedInputStream bufferedInputStream = new BufferedInputStream(fileInputStream);
    StringBuilder builder;
    try (Scanner scanner = new Scanner(bufferedInputStream)) {
        builder = new StringBuilder();
        while (scanner.hasNextLine()) {
            builder.append(scanner.nextLine());
        }
    }
    JSONObject root = new JSONObject(builder.toString());
    System.out.println(ansi().fg(Ansi.Color.RED).a(root.getString(&quot;title&quot;)).reset());
    System.out.println(ansi().fg(Ansi.Color.BLUE).a(&quot;Points: &quot; + root.getInt(&quot;points&quot;)).reset());
    System.out.println(ansi().fg(Ansi.Color.BLUE).a(root.getString(&quot;description&quot;)).reset());
    // Yes, I want to print 2 newlines
    System.out.println(&quot;\n&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JglMgIB2EeiyN7Yq9bqbrA" name="printSchema" specification="_JgklcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.println(&quot;Name: &quot; + schema.getSchemaCardFace().getName() + &quot;\nDifficulty: &quot; + schema.getSchemaCardFace().getDifficulty());
    //two spaces
    System.out.print(&quot;  &quot;);
    for (char a = 'A'; a &lt; 'A' + Settings.CARD_WIDTH; a++) {
        System.out.print(&quot; &quot; + a);
    }
    System.out.println();
    for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
        System.out.print(&quot;  &quot;);
        printLineSeparator(Settings.CARD_WIDTH);
        System.out.print(y + &quot; &quot;);
        for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
            Point point = new Point(x, y);
            if (schema.getDiceFace(point) == null) {
                printRestriction(schema.getSchemaCardFace().getRestriction(new Point(x, y)));
            } else {
                printDice(schema.getDiceFace(point));
            }
        }
        System.out.println(&quot;|&quot;);
    }
    System.out.print(&quot;  &quot;);
    printLineSeparator(Settings.CARD_WIDTH);
    System.out.println();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgnBsIB2EeiyN7Yq9bqbrA" name="printDice" specification="_JgmaoIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.print(&quot;|&quot; + ansi().bg(diceFace.getColor().getAnsiColor()).fg(Ansi.Color.BLACK).a(&quot;&quot; + diceFace.getNumber()).reset());
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jgo24IB2EeiyN7Yq9bqbrA" name="printTokens" specification="_JgnowIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.print(ansi().fg(BLUE).a(&quot;Tokens &quot;));
    System.out.println(available + &quot; / &quot; + total);
    for (int i = 0; i &lt; available; i++) {
        System.out.print(ansi().bg(WHITE).a(&quot;O&quot;).reset());
    }
    for (int i = available; i &lt; total; i++) {
        System.out.print(ansi().bg(RED).a(&quot;X&quot;).reset());
    }
    System.out.println();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgqsEYB2EeiyN7Yq9bqbrA" name="decodePosition" specification="_Jgpd8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (input == null)
        throw new NullPointerException(&quot;Input should not be null!&quot;);
    if (input.length() != 2)
        return null;
    int x = input.toUpperCase().charAt(0) - 'A';
    if (x &lt; 0 || x >= Settings.CARD_WIDTH)
        return null;
    try {
        int y = Integer.parseInt(input.substring(1));
        if (y &lt; 0 || y >= Settings.CARD_HEIGHT)
            return null;
        return new Point(x, y);
    } catch (NumberFormatException ex) {
        return null;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jgr6MIB2EeiyN7Yq9bqbrA" name="printFinalAnimation" specification="_JgrTIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Random random = new Random();
    for (int i = 0; i &lt; 100000; i++) {
        Ansi.Color color = Ansi.Color.values()[random.nextInt(Ansi.Color.values().length)];
        System.out.print(ansi().bg(color).a(&quot;&quot; + random.nextInt(10)));
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JgtvYIB2EeiyN7Yq9bqbrA" name="printRecentEvents" specification="_JgshQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (pastEvents.isEmpty()) {
        CLIPrinter.printError(&quot;No recent events&quot;);
        return;
    }
    for (LogEvent ev : pastEvents) {
        CLIPrinter.printInfo(ev.getMessage());
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgH5gIB2EeiyN7Yq9bqbrA" name="setup" visibility="public" isStatic="true" method="_JgIgkIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgJHoYB2EeiyN7Yq9bqbrA" name="printSchemaCardFace" visibility="public" isStatic="true" method="_JgJusYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgJusIB2EeiyN7Yq9bqbrA" name="schemaCardFace" type="_JgJHoIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgK80IB2EeiyN7Yq9bqbrA" name="printRestriction" visibility="private" isStatic="true" method="_JgLj4IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgK80YB2EeiyN7Yq9bqbrA" name="cellRestriction" type="_JgKVwIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgMK8IB2EeiyN7Yq9bqbrA" name="printLineSeparator" visibility="private" isStatic="true" method="_JgMyAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgMK8YB2EeiyN7Yq9bqbrA" name="param">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgNZEIB2EeiyN7Yq9bqbrA" name="printPrivateObjective" visibility="public" isStatic="true" method="_JgOAIIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgNZEYB2EeiyN7Yq9bqbrA" name="privateObjective" type="_Izy_AYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgOnMIB2EeiyN7Yq9bqbrA" name="printPlayer" visibility="public" isStatic="true" method="_JgP1UIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgPOQIB2EeiyN7Yq9bqbrA" name="cliGameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgPOQYB2EeiyN7Yq9bqbrA" name="player" type="_Iz9-IYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgQcYIB2EeiyN7Yq9bqbrA" name="printError" visibility="public" isStatic="true" method="_JgRDcIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgQcYYB2EeiyN7Yq9bqbrA" name="error" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgRqgIB2EeiyN7Yq9bqbrA" name="printQuestion" visibility="public" isStatic="true" method="_JgSRkYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgSRkIB2EeiyN7Yq9bqbrA" name="question" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgS4oIB2EeiyN7Yq9bqbrA" name="printMenuLine" visibility="public" isStatic="true" method="_JgUGwYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgTfsIB2EeiyN7Yq9bqbrA" name="option">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgUGwIB2EeiyN7Yq9bqbrA" name="line" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgUt0IB2EeiyN7Yq9bqbrA" name="printMenuLine" visibility="public" isStatic="true" method="_JgWjAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgVU4IB2EeiyN7Yq9bqbrA" name="option">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgV78IB2EeiyN7Yq9bqbrA" name="line" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgV78YB2EeiyN7Yq9bqbrA" name="enabled">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgXKEIB2EeiyN7Yq9bqbrA" name="printInfo" visibility="public" isStatic="true" method="_JgXxIYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgXxIIB2EeiyN7Yq9bqbrA" name="info" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgYYMIB2EeiyN7Yq9bqbrA" name="printDraftBoard" visibility="public" isStatic="true" method="_JgZmUIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgY_QIB2EeiyN7Yq9bqbrA" name="draftBoardImmutable" type="_IztfcYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgaNYIB2EeiyN7Yq9bqbrA" name="printDiceHolder" visibility="public" isStatic="true" method="_Jga0cIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgaNYYB2EeiyN7Yq9bqbrA" name="diceHolderImmutable" type="_I0N1wIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgbbgIB2EeiyN7Yq9bqbrA" name="decodePosition" visibility="public" isStatic="true" method="_Jgfs8IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jgd3wIB2EeiyN7Yq9bqbrA" type="_JgcCkIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jgee0IB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgfF4IB2EeiyN7Yq9bqbrA" name="diceHolderImmutable" type="_I0N1wIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JggUAIB2EeiyN7Yq9bqbrA" name="printToolcard" visibility="public" isStatic="true" method="_JghiIIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jgg7EIB2EeiyN7Yq9bqbrA" name="toolCardImmutable" type="_I0bRIIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jgg7EYB2EeiyN7Yq9bqbrA" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgiJMIB2EeiyN7Yq9bqbrA" name="printPublicObjectives" visibility="public" isStatic="true" method="_Jgj-YIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgiwQIB2EeiyN7Yq9bqbrA" name="publicObjective" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgjXUIB2EeiyN7Yq9bqbrA" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgklcIB2EeiyN7Yq9bqbrA" name="printSchema" visibility="public" isStatic="true" method="_JglMgIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgklcYB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgmaoIB2EeiyN7Yq9bqbrA" name="printDice" visibility="public" isStatic="true" method="_JgnBsIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgmaoYB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgnowIB2EeiyN7Yq9bqbrA" name="printTokens" visibility="public" isStatic="true" method="_Jgo24IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgoP0IB2EeiyN7Yq9bqbrA" name="available">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgoP0YB2EeiyN7Yq9bqbrA" name="total">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jgpd8IB2EeiyN7Yq9bqbrA" name="decodePosition" visibility="public" isStatic="true" method="_JgqsEYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgqFAIB2EeiyN7Yq9bqbrA" type="_JgcCkIB2EeiyN7Yq9bqbrA" direction="return"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgqsEIB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgrTIIB2EeiyN7Yq9bqbrA" name="printFinalAnimation" visibility="public" isStatic="true" method="_Jgr6MIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgshQIB2EeiyN7Yq9bqbrA" name="printRecentEvents" visibility="public" isStatic="true" method="_JgtvYIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JgtIUIB2EeiyN7Yq9bqbrA" name="pastEvents" type="_IwxgMIB2EeiyN7Yq9bqbrA">
                      <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JgtIUYB2EeiyN7Yq9bqbrA"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JgtIUoB2EeiyN7Yq9bqbrA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JgJHoIB2EeiyN7Yq9bqbrA" name="SchemaCardFace"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_JgKVwIB2EeiyN7Yq9bqbrA" name="CellRestriction"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_JgcCkIB2EeiyN7Yq9bqbrA" name="Point"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_JgvkkIB2EeiyN7Yq9bqbrA" name="CLIGameEnding" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JgvkkYB2EeiyN7Yq9bqbrA" general="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JgwysIB2EeiyN7Yq9bqbrA" name="iAmActive" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JgxZwIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>false</body>
                    </defaultValue>
                  </ownedAttribute>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JgwLoIB2EeiyN7Yq9bqbrA" name="CLIGameEnding implements InputListener" client="_JgvkkIB2EeiyN7Yq9bqbrA" supplier="_Jds3oIB2EeiyN7Yq9bqbrA" contract="_Jds3oIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jg0dEYB2EeiyN7Yq9bqbrA" name="CLIGameEnding" specification="_JgyA0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(view);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jg2SQIB2EeiyN7Yq9bqbrA" name="onCommandRecived" specification="_Jg1rMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
// TODO: Terminate the game. Or see stats.
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jg3gYIB2EeiyN7Yq9bqbrA" name="handleEndGameEvent" specification="_Jg25UIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    this.getView().activateGameEnding();
    CLIPrinter.printFinalAnimation();
    for (ScoreHolder sc : event.getLeaderBoard()) {
        System.out.println(sc.getPlayerName());
    }
    //System.out.println(&quot;The winner that takes it all &quot; + event.getLeaderBoard().get(event.getLeaderBoard().size() - 1).getPlayerName());
    System.exit(0);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jg3gYoB2EeiyN7Yq9bqbrA" name="setActive" specification="_Jg3gYYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (!iAmActive) {
        //inputListenerThread = new InputListenerThread(this);
        //inputListenerThread.start();
        InputListenerThread.getInstance().setInputListener(this);
        iAmActive = true;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jg4HcYB2EeiyN7Yq9bqbrA" name="setInactive" specification="_Jg4HcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (iAmActive) {
        iAmActive = false;
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JgyA0IB2EeiyN7Yq9bqbrA" name="CLIGameEnding" visibility="public" method="_Jg0dEYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jg0dEIB2EeiyN7Yq9bqbrA" name="view" type="_JUUSIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jg1rMIB2EeiyN7Yq9bqbrA" name="onCommandRecived" visibility="public" method="_Jg2SQIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jg1rMYB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jg25UIB2EeiyN7Yq9bqbrA" name="handleEndGameEvent" visibility="public" method="_Jg3gYIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jg25UYB2EeiyN7Yq9bqbrA" name="event" type="_IvXyAIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jg3gYYB2EeiyN7Yq9bqbrA" name="setActive" visibility="public" method="_Jg3gYoB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jg4HcIB2EeiyN7Yq9bqbrA" name="setInactive" visibility="public" method="_Jg4HcYB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jg58oIB2EeiyN7Yq9bqbrA" name="CLIGameTable" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Jg6jsIB2EeiyN7Yq9bqbrA" general="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jg7KwYB2EeiyN7Yq9bqbrA" name="iAmActive" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Jg7x0IB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>false</body>
                    </defaultValue>
                  </ownedAttribute>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_Jg7KwIB2EeiyN7Yq9bqbrA" name="CLIGameTable implements InputListener" client="_Jg58oIB2EeiyN7Yq9bqbrA" supplier="_Jds3oIB2EeiyN7Yq9bqbrA" contract="_Jds3oIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jg_cMIB2EeiyN7Yq9bqbrA" name="CLIGameTable" specification="_Jg8Y4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(view);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhAqUYB2EeiyN7Yq9bqbrA" name="handlePlayerTimeout" specification="_JhADQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (event.getPlayerName().equals(getView().getPlayer())) {
        CLIPrinter.printError(&quot;Time is up!&quot;);
    }
    super.handlePlayerTimeout(event);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhB4cIB2EeiyN7Yq9bqbrA" name="renderDiceHolder" specification="_JhBRYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.println(&quot;DiceHolder Changed.&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhCfgYB2EeiyN7Yq9bqbrA" name="renderLogEvent" specification="_JhCfgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhDtoIB2EeiyN7Yq9bqbrA" name="renderDraftBoard" specification="_JhDGkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    System.out.println(&quot;Draftboard Changed.&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhE7wYB2EeiyN7Yq9bqbrA" name="renderPlayer" specification="_JhEUsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhGw8IB2EeiyN7Yq9bqbrA" name="renderSchema" specification="_JhGJ4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhH_EIB2EeiyN7Yq9bqbrA" name="renderToolcard" specification="_JhHYAIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhJNMIB2EeiyN7Yq9bqbrA" name="renderPublicObjective" specification="_JhImIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhJ0QYB2EeiyN7Yq9bqbrA" name="renderTurn" specification="_JhJ0QIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhLCYIB2EeiyN7Yq9bqbrA" name="setActive" specification="_JhKbUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(&quot;CLIGAMETABLE ACTIVE&quot;);
    if (!iAmActive) {
        InputListenerThread.getInstance().setInputListener(this);
        iAmActive = true;
    }
    this.getRealeState().render();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhLpcYB2EeiyN7Yq9bqbrA" name="setInactive" specification="_JhLpcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(&quot;CLIGAMETABLE INACTIVE&quot;);
    if (iAmActive) {
        iAmActive = false;
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhM3kIB2EeiyN7Yq9bqbrA" name="renderTimeOut" specification="_JhMQgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (getSecondsRemaining() % 10 == 0) {
        if (getCurrentPlayer() != null)
            if (getCurrentPlayer().equals(getView().getPlayer())) {
                CLIPrinter.printError(&quot;Remaining seconds: &quot; + getSecondsRemaining() + &quot;.&quot;);
            } else {
                CLIPrinter.printError(&quot;Player &quot; + getCurrentPlayer() + &quot; has &quot; + getSecondsRemaining() + &quot; seconds left.&quot;);
            }
        else {
            CLIPrinter.printError(getSecondsRemaining() + &quot; seconds left.&quot;);
        }
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhOFsIB2EeiyN7Yq9bqbrA" name="handleGameStart" specification="_JhNeoIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    renderTurn();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhPT0YB2EeiyN7Yq9bqbrA" name="onCommandRecived" specification="_JhOswIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    getRealeState().process(input);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jg8Y4IB2EeiyN7Yq9bqbrA" name="CLIGameTable" visibility="public" method="_Jg_cMIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jg-1IIB2EeiyN7Yq9bqbrA" name="view" type="_JUUSIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhADQIB2EeiyN7Yq9bqbrA" name="handlePlayerTimeout" visibility="public" method="_JhAqUYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhAqUIB2EeiyN7Yq9bqbrA" name="event" type="_Ivqs8IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhBRYIB2EeiyN7Yq9bqbrA" name="renderDiceHolder" visibility="protected" method="_JhB4cIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhCfgIB2EeiyN7Yq9bqbrA" name="renderLogEvent" visibility="protected" method="_JhCfgYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhDGkIB2EeiyN7Yq9bqbrA" name="renderDraftBoard" visibility="protected" method="_JhDtoIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhEUsIB2EeiyN7Yq9bqbrA" name="renderPlayer" visibility="protected" method="_JhE7wYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhE7wIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhGJ4IB2EeiyN7Yq9bqbrA" name="renderSchema" visibility="protected" method="_JhGw8IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhGJ4YB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhHYAIB2EeiyN7Yq9bqbrA" name="renderToolcard" visibility="protected" method="_JhH_EIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhHYAYB2EeiyN7Yq9bqbrA" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhImIIB2EeiyN7Yq9bqbrA" name="renderPublicObjective" visibility="protected" method="_JhJNMIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhImIYB2EeiyN7Yq9bqbrA" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhJ0QIB2EeiyN7Yq9bqbrA" name="renderTurn" visibility="protected" method="_JhJ0QYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhKbUIB2EeiyN7Yq9bqbrA" name="setActive" visibility="public" method="_JhLCYIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhLpcIB2EeiyN7Yq9bqbrA" name="setInactive" visibility="public" method="_JhLpcYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhMQgIB2EeiyN7Yq9bqbrA" name="renderTimeOut" visibility="public" method="_JhM3kIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhNeoIB2EeiyN7Yq9bqbrA" name="handleGameStart" visibility="public" method="_JhOFsIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhNeoYB2EeiyN7Yq9bqbrA" name="gameStartEvent" type="_IwTmIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhOswIB2EeiyN7Yq9bqbrA" name="onCommandRecived" visibility="public" method="_JhPT0YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhPT0IB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JhRJAIB2EeiyN7Yq9bqbrA" name="CLIPlaceDiceState" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JhRwEIB2EeiyN7Yq9bqbrA" general="_JRuRIIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhWBgYB2EeiyN7Yq9bqbrA" name="CLIPlaceDiceState" specification="_JhSXIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, ignore, isFromTool, forceLoneliness);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhbhEYB2EeiyN7Yq9bqbrA" name="CLIPlaceDiceState" specification="_JhXPoIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, ignore, isFromTool, forceLoneliness, forceDice, shouldSelectNumber);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhdWQIB2EeiyN7Yq9bqbrA" name="process" specification="_JhcIIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (input.equals(&quot;cancel&quot;)) {
        processCancel();
        return;
    } else if (getInternalState() == InternalState.DICE_SELECTION) {
        int selectedDice;
        try {
            selectedDice = Integer.parseInt(input);
        } catch (NumberFormatException ex) {
            CLIPrinter.printError(input + &quot; is not a valid dice!&quot;);
            getGameTable().setState(this);
            return;
        }
        try {
            processDiceSelection(selectedDice);
        } catch (InputError ie) {
            CLIPrinter.printError(ie.getMessage());
            getGameTable().setState(this);
            return;
        }
    } else if (getInternalState() == InternalState.POSITION_SELECTION) {
        Point point = CLIPrinter.decodePosition(input);
        if (point == null) {
            CLIPrinter.printError(&quot;Invalid position!&quot;);
            getGameTable().setState(this);
            return;
        }
        try {
            processPositionSelected(point);
        } catch (InputError ie) {
            CLIPrinter.printError(ie.getMessage());
            getGameTable().setState(this);
            return;
        }
    } else if (getInternalState() == InternalState.NUMBER_SELECTION) {
        int selectedNumber;
        try {
            selectedNumber = Integer.parseInt(input);
        } catch (NumberFormatException ex) {
            CLIPrinter.printError(input + &quot; is not a valid dice number!&quot;);
            getGameTable().setState(this);
            return;
        }
        try {
            processNumberSelected(selectedNumber);
        } catch (InputError ie) {
            CLIPrinter.printError(ie.getMessage());
            getGameTable().setState(this);
            return;
        }
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jhd9UYB2EeiyN7Yq9bqbrA" name="unrealize" specification="_Jhd9UIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhfLcIB2EeiyN7Yq9bqbrA" name="render" specification="_JhekYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (getInternalState() == InternalState.DICE_SELECTION) {
        CLIPrinter.printQuestion(&quot;Select a dice:&quot;);
        CLIPrinter.printDraftBoard(getGameTable().getDraftBoardImmutable());
    } else if (getInternalState() == InternalState.POSITION_SELECTION) {
        if (isShouldNotSelectDice()) {
            CLIPrinter.printQuestion(&quot;Select where to place the new dice:&quot;);
            CLIPrinter.printDice(getGameTable().getDraftBoardImmutable().getDices()[getSelectedDice()]);
            System.out.println(&quot;|&quot;);
        }
        CLIPrinter.printQuestion(&quot;Select a position:&quot;);
        CLIPrinter.printSchema(getGameTable().getSchema(getGameTable().getView().getPlayer()));
    } else if (getInternalState() == InternalState.NUMBER_SELECTION) {
        CLIPrinter.printQuestion(&quot;This dice was drawn:&quot;);
        CLIPrinter.printDice(getGameTable().getDraftBoardImmutable().getDices()[getSelectedDice()]);
        System.out.println(&quot;|&quot;);
        CLIPrinter.printQuestion(&quot;Select the number of the new dice: &quot;);
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhSXIIB2EeiyN7Yq9bqbrA" name="CLIPlaceDiceState" visibility="public" method="_JhWBgYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhUMUIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhUzYIB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhVacIB2EeiyN7Yq9bqbrA" name="isFromTool">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhWBgIB2EeiyN7Yq9bqbrA" name="forceLoneliness">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhXPoIB2EeiyN7Yq9bqbrA" name="CLIPlaceDiceState" visibility="public" method="_JhbhEYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhZE0IB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhZr4IB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhaS8IB2EeiyN7Yq9bqbrA" name="isFromTool">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jha6AIB2EeiyN7Yq9bqbrA" name="forceLoneliness">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jha6AYB2EeiyN7Yq9bqbrA" name="forceDice">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhbhEIB2EeiyN7Yq9bqbrA" name="shouldSelectNumber">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhcIIIB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_JhdWQIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhcvMIB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jhd9UIB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_Jhd9UYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhekYIB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_JhfLcIB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JhhAoIB2EeiyN7Yq9bqbrA" name="CLIIncrementDice" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JhhAoYB2EeiyN7Yq9bqbrA" general="_JdAUEIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhlSEIB2EeiyN7Yq9bqbrA" name="CLIIncrementDice" specification="_JhhnsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, diceIndex);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhmgMYB2EeiyN7Yq9bqbrA" name="process" specification="_Jhl5IIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (input.equalsIgnoreCase(&quot;cancel&quot;)) {
        processCancel();
        return;
    }
    if (!input.equalsIgnoreCase(&quot;d&quot;) &amp;&amp; !input.equalsIgnoreCase(&quot;i&quot;)) {
        CLIPrinter.printError(&quot;Invalid choice&quot;);
        getGameTable().setState(this);
        return;
    }
    int increment = input.equalsIgnoreCase(&quot;d&quot;) ? -1 : 1;
    try {
        processIncrement(increment);
    } catch (InputError ie) {
        CLIPrinter.printError(ie.getMessage());
        getGameTable().setState(this);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhnuUIB2EeiyN7Yq9bqbrA" name="unrealize" specification="_JhnHQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhoVYYB2EeiyN7Yq9bqbrA" name="render" specification="_JhoVYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    CLIPrinter.printQuestion(&quot;Insert [i] to increment or [d] to decrement, or cancel:&quot;);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhhnsIB2EeiyN7Yq9bqbrA" name="CLIIncrementDice" visibility="public" method="_JhlSEIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhkD8IB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhkrAIB2EeiyN7Yq9bqbrA" name="diceIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_ILxaUPaLEeW5KOK8aDMdgA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jhl5IIB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_JhmgMYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhmgMIB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhnHQIB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_JhnuUIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhoVYIB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_JhoVYYB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JhqKkIB2EeiyN7Yq9bqbrA" name="CLIChooseColorFromDiceHolder" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JhqxoIB2EeiyN7Yq9bqbrA" general="_Jc18AIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhucAIB2EeiyN7Yq9bqbrA" name="CLIChooseColorFromDiceHolder" specification="_JhqxoYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, toolName);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhvqIYB2EeiyN7Yq9bqbrA" name="process" specification="_JhvDEIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (input.equalsIgnoreCase(&quot;cancel&quot;)) {
        processCancel();
        return;
    }
    GameColor color = null;
    for (GameColor c : GameColor.values()) {
        if (c.toString().equalsIgnoreCase(input)) {
            color = c;
        }
    }
    if (color == null) {
        CLIPrinter.printError(&quot;Invalid choice&quot;);
        getGameTable().setState(this);
        return;
    }
    try {
        processColorSelected(color);
    } catch (InputError ie) {
        CLIPrinter.printError(ie.getMessage());
        getGameTable().setState(this);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jhw4QIB2EeiyN7Yq9bqbrA" name="unrealize" specification="_JhwRMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JhxfUYB2EeiyN7Yq9bqbrA" name="render" specification="_JhxfUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    CLIPrinter.printQuestion(&quot;Select a color:&quot;);
    for (GameColor c : GameColor.values()) {
        CLIPrinter.printQuestion(c.toString().toLowerCase());
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhqxoYB2EeiyN7Yq9bqbrA" name="CLIChooseColorFromDiceHolder" visibility="public" method="_JhucAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhtN4IB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jht08IB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhvDEIB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_JhvqIYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JhvqIIB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhwRMIB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_Jhw4QIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhxfUIB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_JhxfUYB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JhytcIB2EeiyN7Yq9bqbrA" name="CLIUseToolState" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JhytcYB2EeiyN7Yq9bqbrA" general="_Jdbx4IB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jh1wwYB2EeiyN7Yq9bqbrA" name="CLIUseToolState" specification="_JhzUgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jh3l8IB2EeiyN7Yq9bqbrA" name="process" specification="_Jh2X0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (input.equalsIgnoreCase(&quot;cancel&quot;)) {
        processCancel();
        return;
    }
    int selection = -1;
    try {
        selection = Integer.parseInt(input);
    } catch (RuntimeException ex) {
        CLIPrinter.printError(&quot;Invalid input!&quot;);
        getGameTable().setState(this);
        return;
    }
    try {
        processUseToolCard(selection);
    } catch (InputError ie) {
        CLIPrinter.printError(ie.getMessage());
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jh4NAYB2EeiyN7Yq9bqbrA" name="unrealize" specification="_Jh4NAIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jh40EYB2EeiyN7Yq9bqbrA" name="render" specification="_Jh40EIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    CLIPrinter.printQuestion(&quot;Select the tool card you want to use:&quot;);
    for (int i = 0; i &lt; Settings.TOOLCARDS_N; i++) {
        CLIPrinter.printToolcard(getGameTable().getToolCardImmutable(i), i);
    }
    CLIPrinter.printQuestion(&quot;[0] to [&quot; + (Settings.TOOLCARDS_N - 1) + &quot;] or [cancel]&quot;);
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JhzUgIB2EeiyN7Yq9bqbrA" name="CLIUseToolState" visibility="public" method="_Jh1wwYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jh1wwIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jh2X0IB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_Jh3l8IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jh2-4IB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jh4NAIB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_Jh4NAYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jh40EIB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_Jh40EYB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jh6CMIB2EeiyN7Yq9bqbrA" name="CLIMoveDice" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Jh6pQIB2EeiyN7Yq9bqbrA" general="_JX5KkIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jh-6sIB2EeiyN7Yq9bqbrA" name="CLIMoveDice" specification="_Jh73YYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, ignore, toolName, times);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JiB-AYB2EeiyN7Yq9bqbrA" name="CLIMoveDice" specification="_Jh_hwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, ignore, toolName, times, color);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JiDzMIB2EeiyN7Yq9bqbrA" name="process" specification="_JiClEIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (input.equalsIgnoreCase(&quot;cancel&quot;)) {
        getGameTable().setState(AbstractMainMenuState.createFromContext(this.getGameTable()));
        return;
    }
    if (getActionState() == ActionState.CHOOSE) {
        if (getTimes() == Times.FIRST) {
            Point firstSource = CLIPrinter.decodePosition(input);
            if (firstSource == null) {
                CLIPrinter.printError(&quot;Invalid input&quot;);
                getGameTable().setState(this);
                return;
            }
            try {
                processFirstSource(firstSource);
            } catch (InputError ie) {
                CLIPrinter.printError(ie.getMessage());
                getGameTable().setState(this);
                return;
            }
        } else if (getTimes() == Times.SECOND) {
            Point secondSource = CLIPrinter.decodePosition(input);
            if (secondSource == null) {
                CLIPrinter.printError(&quot;Invalid input&quot;);
                getGameTable().setState(this);
                return;
            }
            try {
                processSecondSource(secondSource);
            } catch (InputError ie) {
                CLIPrinter.printError(ie.getMessage());
                getGameTable().setState(this);
                return;
            }
        }
        return;
    } else if (getActionState() == ActionState.PLACE) {
        if (getTimes() == Times.FIRST) {
            Point firstDestination = CLIPrinter.decodePosition(input);
            if (firstDestination == null) {
                CLIPrinter.printError(&quot;Invalid input&quot;);
                getGameTable().setState(this);
                return;
            }
            try {
                processFirstDestination(firstDestination);
            } catch (InputError ie) {
                CLIPrinter.printError(ie.getMessage());
                getGameTable().setState(this);
                return;
            }
        } else if (getTimes() == Times.SECOND) {
            Point secondDestination = CLIPrinter.decodePosition(input);
            if (secondDestination == null) {
                CLIPrinter.printError(&quot;Invalid input&quot;);
                getGameTable().setState(this);
                return;
            }
            try {
                processSecondDestination(secondDestination);
            } catch (InputError ie) {
                CLIPrinter.printError(ie.getMessage());
                getGameTable().setState(this);
                return;
            }
        }
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JiEaQYB2EeiyN7Yq9bqbrA" name="unrealize" specification="_JiEaQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JiFoYIB2EeiyN7Yq9bqbrA" name="render" specification="_JiFBUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (getActionState() == ActionState.CHOOSE) {
        CLIPrinter.printQuestion(&quot;Choose the &quot; + this.getTimes().toString().toLowerCase() + &quot; dice to move: &quot;);
        CLIPrinter.printSchema(getTemporaryPlayerSchema());
    } else {
        CLIPrinter.printQuestion(&quot;Choose the destination: &quot;);
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jh73YYB2EeiyN7Yq9bqbrA" name="CLIMoveDice" visibility="public" method="_Jh-6sIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jh9skIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jh9skYB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jh-ToIB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jh-ToYB2EeiyN7Yq9bqbrA" name="times" type="_Jh6pQYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jh_hwIB2EeiyN7Yq9bqbrA" name="CLIMoveDice" visibility="public" method="_JiB-AYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JiAv4IB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JiAv4YB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JiBW8IB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JiBW8YB2EeiyN7Yq9bqbrA" name="times" type="_Jh6pQYB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JiB-AIB2EeiyN7Yq9bqbrA" name="color" type="_JACEMIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JiClEIB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_JiDzMIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JiDMIIB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JiEaQIB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_JiEaQYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JiFBUIB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_JiFoYIB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jh6pQYB2EeiyN7Yq9bqbrA" name="Times"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_JiG2gIB2EeiyN7Yq9bqbrA" name="InputListenerThread" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JiHdkIB2EeiyN7Yq9bqbrA" general="_It_5AIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JiJSwYB2EeiyN7Yq9bqbrA" name="scanner" visibility="private" type="_JiIEoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JiLH8IB2EeiyN7Yq9bqbrA" name="inputListener" visibility="private" type="_Jkh4YIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JiLH8YB2EeiyN7Yq9bqbrA" name="goAhead" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JiLvAIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>true</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JiLvAYB2EeiyN7Yq9bqbrA" name="instance" visibility="private" isStatic="true" type="_JiG2gIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JiNkMIB2EeiyN7Yq9bqbrA" name="InputListenerThread" specification="_JiMWEIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(&quot;InputListenerThread&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JiOLQYB2EeiyN7Yq9bqbrA" name="run" specification="_JiOLQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    scanner = new Scanner(System.in);
    while (goAhead) {
        try {
            String input = scanner.nextLine();
            if (inputListener != null) {
                inputListener.onCommandRecived(input);
            }
        } catch (RuntimeException ignored) {
            ignored.printStackTrace();
            Log.d(&quot;Input listener &quot; + ignored.getMessage());
            Log.d(inputListener.getClass().getName());
            goAhead = false;
        }
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JiPZYIB2EeiyN7Yq9bqbrA" name="setInputListener" specification="_JiOyUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    this.inputListener = inputListener;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jkk7sIB2EeiyN7Yq9bqbrA" name="getInstance" specification="_JkjGgYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (instance == null) {
        instance = new InputListenerThread();
        instance.start();
    }
    return instance;
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JiMWEIB2EeiyN7Yq9bqbrA" name="InputListenerThread" visibility="private" method="_JiNkMIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JiOLQIB2EeiyN7Yq9bqbrA" name="run" visibility="public" method="_JiOLQYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JiOyUIB2EeiyN7Yq9bqbrA" name="setInputListener" visibility="private" method="_JiPZYIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JiOyUYB2EeiyN7Yq9bqbrA" name="inputListener" type="_Jkh4YIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JkjGgYB2EeiyN7Yq9bqbrA" name="getInstance" visibility="public" isStatic="true" method="_Jkk7sIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JkkUoYB2EeiyN7Yq9bqbrA" type="_JiG2gIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <nestedClassifier xmi:type="uml:Interface" xmi:id="_Jkh4YIB2EeiyN7Yq9bqbrA" name="InputListener" visibility="public">
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_JkifcIB2EeiyN7Yq9bqbrA" name="onCommandRecived" visibility="public">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_JkjGgIB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    </ownedOperation>
                  </nestedClassifier>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JkliwIB2EeiyN7Yq9bqbrA" name="CLIExchangeWDiceHolder" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JkmJ0IB2EeiyN7Yq9bqbrA" general="_JVcTgIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JkpNIYB2EeiyN7Yq9bqbrA" name="CLIExchangeWDiceHolder" specification="_JkmJ0YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, diceIndex);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JkrCUIB2EeiyN7Yq9bqbrA" name="process" specification="_Jkp0MIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (input.equalsIgnoreCase(&quot;cancel&quot;)) {
        processCancel();
        return;
    }
    Point victim = CLIPrinter.decodePosition(input, getGameTable().getDiceHolderImmutable());
    try {
        processVictim(victim);
    } catch (InputError ie) {
        CLIPrinter.printError(ie.getMessage());
        getGameTable().setState(this);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JkrpYYB2EeiyN7Yq9bqbrA" name="unrealize" specification="_JkrpYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JksQcYB2EeiyN7Yq9bqbrA" name="render" specification="_JksQcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    CLIPrinter.printQuestion(&quot;Choose the dice you want to exchange:&quot;);
    CLIPrinter.printDiceHolder(getGameTable().getDiceHolderImmutable());
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JkmJ0YB2EeiyN7Yq9bqbrA" name="CLIExchangeWDiceHolder" visibility="public" method="_JkpNIYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JkomEIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JkpNIIB2EeiyN7Yq9bqbrA" name="diceIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_ILxaUPaLEeW5KOK8aDMdgA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jkp0MIB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_JkrCUIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JkqbQIB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JkrpYIB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_JkrpYYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JksQcIB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_JksQcYB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_JktekIB2EeiyN7Yq9bqbrA" name="gui">
                <packagedElement xmi:type="uml:Class" xmi:id="_JkuFoIB2EeiyN7Yq9bqbrA" name="Restriction" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Jkv60IB2EeiyN7Yq9bqbrA" general="_JkussYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JkyXEIB2EeiyN7Yq9bqbrA" name="diceColour" visibility="private" type="_Jkwh4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jky-IIB2EeiyN7Yq9bqbrA" name="diceNumber" visibility="private" type="_Jkwh4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jk1aYIB2EeiyN7Yq9bqbrA" name="Restriction" specification="_JkzlMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    FXMLLoader fxmlLoader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/Dice.fxml&quot;));
    fxmlLoader.setRoot(this);
    fxmlLoader.setController(this);
    try {
        fxmlLoader.load();
    } catch (IOException exception) {
        throw new RuntimeException(exception);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jk2BcYB2EeiyN7Yq9bqbrA" name="setRestriction" specification="_Jk1aYYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (restriction.toString().equals(&quot;&quot;)) {
        diceColour.setImage(new Image(&quot;gui/restrictions/no.png&quot;));
        return;
    }
    try {
        diceColour.setImage(new Image(&quot;gui/restrictions/number/&quot; + Integer.parseInt(restriction.toString()) + &quot;.png&quot;));
        return;
    } catch (Exception ignored) {
    }
    diceColour.setImage(new Image(&quot;gui/restrictions/color/&quot; + restriction.toString() + &quot;.png&quot;));
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JkzlMIB2EeiyN7Yq9bqbrA" name="Restriction" visibility="public" method="_Jk1aYIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jk1aYYB2EeiyN7Yq9bqbrA" name="setRestriction" visibility="private" method="_Jk2BcYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jk2BcIB2EeiyN7Yq9bqbrA" name="restriction" type="_JAtZoYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jk4dsIB2EeiyN7Yq9bqbrA" name="SchemaPanel" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Jk6S4YB2EeiyN7Yq9bqbrA" general="_Jk4dsYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jk658IB2EeiyN7Yq9bqbrA" name="restrictions" visibility="private" type="_JkuFoIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jk7hAIB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jk7hAYB2EeiyN7Yq9bqbrA" value="*"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Jk8IEIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new Restriction[Settings.CARD_WIDTH][Settings.CARD_HEIGHT]</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jk8vIIB2EeiyN7Yq9bqbrA" name="dice" visibility="private" type="_Jk8IEYB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jk8vIYB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jk9WMIB2EeiyN7Yq9bqbrA" value="*"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Jk9WMYB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new Dice[Settings.CARD_WIDTH][Settings.CARD_HEIGHT]</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jk_ycIB2EeiyN7Yq9bqbrA" name="pane" visibility="private" type="_Jk99QIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JlAZgIB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JlAZgYB2EeiyN7Yq9bqbrA" value="*"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JlAZgoB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new Pane[Settings.CARD_WIDTH][Settings.CARD_HEIGHT]</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JlC1wYB2EeiyN7Yq9bqbrA" name="cardName" visibility="private" type="_JlBnoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JlFSAYB2EeiyN7Yq9bqbrA" name="difficultyContainer" visibility="private" type="_JlDc0IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JlF5EIB2EeiyN7Yq9bqbrA" name="token" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JlF5EYB2EeiyN7Yq9bqbrA" name="usedToken" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JlGgIIB2EeiyN7Yq9bqbrA" name="schema" visibility="private" type="_IzxJ0IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JlIVUYB2EeiyN7Yq9bqbrA" name="listener" visibility="private" type="_JnQcQIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JlKxkYB2EeiyN7Yq9bqbrA" name="SchemaPanel" specification="_JlI8YIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    this.listener = listener;
    for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
        ColumnConstraints columnConstraints = new ColumnConstraints(x);
        columnConstraints.setHgrow(Priority.ALWAYS);
        columnConstraints.prefWidthProperty().setValue(60);
        getColumnConstraints().addAll(columnConstraints);
    }
    for (int y = 0; y &lt; Settings.CARD_HEIGHT + 1; y++) {
        RowConstraints rowConstraints = new RowConstraints(y);
        rowConstraints.prefHeightProperty().setValue(y == Settings.CARD_HEIGHT ? 20 : 60);
        rowConstraints.setVgrow(Priority.ALWAYS);
        getRowConstraints().add(rowConstraints);
    }
    for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
        for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
            final int _x = x, _y = y;
            restrictions[x][y] = new Restriction();
            GridPane.setConstraints(restrictions[x][y], x, y);
            GridPane.setMargin(restrictions[x][y], new Insets(5, 5, 5, 5));
            this.getChildren().addAll(restrictions[x][y]);
            dice[x][y] = new Dice();
            GridPane.setConstraints(dice[x][y], x, y);
            GridPane.setMargin(dice[x][y], new Insets(5, 5, 5, 5));
            this.getChildren().addAll(dice[x][y]);
            pane[x][y] = new Pane();
            GridPane.setConstraints(pane[x][y], x, y);
            GridPane.setMargin(pane[x][y], new Insets(5, 5, 5, 5));
            this.getChildren().addAll(pane[x][y]);
            pane[x][y].setOnMouseClicked( event -> clicked(new Point(_x, _y)));
        }
    }
    setStyle(&quot;-fx-background-color:#000000;&quot;);
    //Name of the card
    cardName = new Label();
    GridPane.setConstraints(cardName, 0, Settings.CARD_HEIGHT, Settings.CARD_WIDTH, 1);
    GridPane.setFillWidth(cardName, true);
    GridPane.setHalignment(cardName, HPos.CENTER);
    getChildren().add(cardName);
    cardName.setStyle(&quot;-fx-font: 20px Tahoma;\n&quot; + &quot;-fx-text-fill: #FFFFFFFF;\n&quot; + &quot;-fx-font-weight: bold;\n&quot; + &quot;-fx-text-alignment: center;&quot;);
    //difficulty
    difficultyContainer = new HBox();
    GridPane.setConstraints(difficultyContainer, Settings.CARD_WIDTH - 1, Settings.CARD_HEIGHT, 1, 1);
    GridPane.setFillWidth(difficultyContainer, true);
    GridPane.setHalignment(difficultyContainer, HPos.LEFT);
    getChildren().add(difficultyContainer);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JlL_sIB2EeiyN7Yq9bqbrA" name="updateSchema" specification="_JlLYoIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (schema == null)
        return;
    this.schema = schema;
    for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
        for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
            restrictions[x][y].setRestriction(schema.getSchemaCardFace().getRestriction(new Point(x, y)));
            dice[x][y].setDiceFace(schema.getDiceFace(new Point(x, y)));
        }
    }
    cardName.setText(schema.getSchemaCardFace().getName());
    this.token = schema.getSchemaCardFace().getDifficulty();
    updateToken();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JlL_soB2EeiyN7Yq9bqbrA" name="updateToken" specification="_JlL_sYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    difficultyContainer.getChildren().clear();
    for (int i = 0; i &lt; token; i++) {
        Circle circle = new Circle();
        circle.setRadius(5);
        if (i &lt; usedToken) {
            circle.setStyle(&quot;-fx-fill: #FF0000FF;&quot;);
        } else {
            circle.setStyle(&quot;-fx-fill: #FFFFFFFF;&quot;);
        }
        if (i != 0)
            HBox.setMargin(circle, new Insets(0, 0, 0, 2));
        difficultyContainer.getChildren().add(circle);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JlNN0IB2EeiyN7Yq9bqbrA" name="updateToken" specification="_JlMmwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    this.usedToken = usedToken;
    updateToken();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JlPDAIB2EeiyN7Yq9bqbrA" name="clicked" specification="_JlOb8YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.i(&quot;Clicked: &quot; + point.x + &quot;:&quot; + point.y);
    if (listener != null)
        listener.onCellSelected(point);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JlQRIYB2EeiyN7Yq9bqbrA" name="highlightAllowedPoints" specification="_JlPqEIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    for (int x = 0; x &lt; Settings.CARD_WIDTH; x++) {
        for (int y = 0; y &lt; Settings.CARD_HEIGHT; y++) {
            if (schema.isDiceAllowed(new Point(x, y), dice, ignore, forceLoneliness)) {
                pane[x][y].setStyle(&quot;-fx-background-color:#FF000066;\n&quot; + &quot;-fx-border-color: orange;\n&quot; + &quot;    -fx-border-width: 5;\n&quot; + &quot;-fx-border-radius: 5&quot;);
            } else {
                pane[x][y].setStyle(&quot;-fx-background-color:#00000000;\n&quot; + &quot;-fx-border-color: none;\n&quot; + &quot;    -fx-border-width: 0;\n&quot; + &quot;-fx-border-radius: 0&quot;);
            }
        }
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JlI8YIB2EeiyN7Yq9bqbrA" name="SchemaPanel" visibility="public" method="_JlKxkYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JlKxkIB2EeiyN7Yq9bqbrA" name="listener" type="_JnQcQIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JlLYoIB2EeiyN7Yq9bqbrA" name="updateSchema" visibility="public" method="_JlL_sIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JlLYoYB2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JlL_sYB2EeiyN7Yq9bqbrA" name="updateToken" visibility="private" method="_JlL_soB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JlMmwIB2EeiyN7Yq9bqbrA" name="updateToken" visibility="public" method="_JlNN0IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JlMmwYB2EeiyN7Yq9bqbrA" name="usedToken">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JlOb8YB2EeiyN7Yq9bqbrA" name="clicked" visibility="private" method="_JlPDAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JlOb8oB2EeiyN7Yq9bqbrA" name="point" type="_JlNN0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JlPqEIB2EeiyN7Yq9bqbrA" name="highlightAllowedPoints" visibility="public" method="_JlQRIYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JlPqEYB2EeiyN7Yq9bqbrA" name="dice" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JlPqEoB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JlQRIIB2EeiyN7Yq9bqbrA" name="forceLoneliness">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <nestedClassifier xmi:type="uml:Interface" xmi:id="_JnQcQIB2EeiyN7Yq9bqbrA" name="OnSchemaInteractionListener" visibility="public">
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_JnRDUIB2EeiyN7Yq9bqbrA" name="onCellSelected" visibility="private">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_JnRqYIB2EeiyN7Yq9bqbrA" name="point" type="_JlNN0YB2EeiyN7Yq9bqbrA"/>
                    </ownedOperation>
                  </nestedClassifier>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jk4dsYB2EeiyN7Yq9bqbrA" name="GridPane"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jk8IEYB2EeiyN7Yq9bqbrA" name="Dice" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JtoKAIB2EeiyN7Yq9bqbrA" general="_JkussYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JtoxEIB2EeiyN7Yq9bqbrA" name="diceNumber" visibility="private" type="_Jkwh4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JtpYIIB2EeiyN7Yq9bqbrA" name="diceColour" visibility="private" type="_Jkwh4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JtqmQYB2EeiyN7Yq9bqbrA" name="Dice" specification="_JtpYIYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    FXMLLoader fxmlLoader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/Dice.fxml&quot;));
    fxmlLoader.setRoot(this);
    fxmlLoader.setController(this);
    try {
        fxmlLoader.load();
    } catch (IOException exception) {
        throw new RuntimeException(exception);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jtr0YIB2EeiyN7Yq9bqbrA" name="setDiceFace" specification="_JtrNUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (diceFace == null) {
        diceColour.setImage(null);
        diceNumber.setImage(null);
        return;
    }
    diceColour.setImage(new Image(&quot;gui/dice/color/&quot; + diceFace.getColor().toString() + &quot;.png&quot;));
    diceNumber.setImage(new Image(&quot;gui/dice/number/&quot; + diceFace.getNumber() + &quot;.png&quot;));
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JtpYIYB2EeiyN7Yq9bqbrA" name="Dice" visibility="public" method="_JtqmQYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JtrNUIB2EeiyN7Yq9bqbrA" name="setDiceFace" visibility="public" method="_Jtr0YIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JtrNUYB2EeiyN7Yq9bqbrA" name="diceFace" type="_Ixi8QIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jk99QIB2EeiyN7Yq9bqbrA" name="Pane"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_JlDc0IB2EeiyN7Yq9bqbrA" name="HBox"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_JlNN0YB2EeiyN7Yq9bqbrA" name="Point"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_JnSRcIB2EeiyN7Yq9bqbrA" name="GUIIncrementDice" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JnS4gIB2EeiyN7Yq9bqbrA" general="_JdAUEIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnUGoYB2EeiyN7Yq9bqbrA" name="root" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnUtsYB2EeiyN7Yq9bqbrA" name="draftBoardView" visibility="private" type="_JnUtsIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnWi4IB2EeiyN7Yq9bqbrA" name="exchangeDice" visibility="private" type="_JnVUwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnXxAIB2EeiyN7Yq9bqbrA" name="increment" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnXxAYB2EeiyN7Yq9bqbrA" name="decrement" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JnaNQIB2EeiyN7Yq9bqbrA" name="GUIIncrementDice" specification="_JnYYEIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, diceIndex);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jna0UYB2EeiyN7Yq9bqbrA" name="process" specification="_JnaNQYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JnbbYYB2EeiyN7Yq9bqbrA" name="unrealize" specification="_JnbbYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root != null) {
        Platform.runLater(() -> {
            Stage stage = (Stage) root.getScene().getWindow();
            stage.close();
            root = null;
        });
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JncCcYB2EeiyN7Yq9bqbrA" name="render" specification="_JncCcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root == null) {
        buildInterface();
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JncpgYB2EeiyN7Yq9bqbrA" name="buildInterface" specification="_JncpgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    FXMLLoader loader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/IncrementDice.fxml&quot;));
    try {
        root = loader.load();
    } catch (IOException e) {
        e.printStackTrace();
    }
    Platform.runLater(() -> {
        Stage secondStage = new Stage();
        secondStage.setResizable(false);
        Scene scene = new Scene(root);
        secondStage.setScene(scene);
        secondStage.setOnCloseRequest(( windowEvent) -> processCancel());
        secondStage.show();
        Dice diceToUpdate = new Dice();
        diceToUpdate.setDiceFace(getGameTable().getDraftBoardImmutable().getDices()[getDiceIndex()]);
        increment = new Button();
        decrement = new Button();
        increment.setText(&quot;Increment&quot;);
        decrement.setText(&quot;Decrement&quot;);
        root.getChildren().add(increment);
        root.getChildren().add(decrement);
        increment.addEventHandler(MouseEvent.MOUSE_CLICKED, ( mouseEvent) -> {
            try {
                processIncrement(1);
            } catch (InputError ie) {
                GUIUtils.showError(ie.getMessage());
            }
        });
        decrement.addEventHandler(MouseEvent.MOUSE_CLICKED, ( mouseEvent) -> {
            try {
                processIncrement(-1);
            } catch (InputError ie) {
                GUIUtils.showError(ie.getMessage());
            }
        });
        root.setStyle(&quot;-fx-background-image: url('/gui/background.jpg');\n&quot; + &quot;    -fx-background-repeat: repeat;&quot;);
    });
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JnYYEIB2EeiyN7Yq9bqbrA" name="GUIIncrementDice" visibility="public" method="_JnaNQIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JnZmMIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JnZmMYB2EeiyN7Yq9bqbrA" name="diceIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_ILxaUPaLEeW5KOK8aDMdgA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JnaNQYB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_Jna0UYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jna0UIB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JnbbYIB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_JnbbYYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JncCcIB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_JncCcYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JncpgIB2EeiyN7Yq9bqbrA" name="buildInterface" visibility="private" method="_JncpgYB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JnUtsIB2EeiyN7Yq9bqbrA" name="DraftBoard" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JuZmEIB2EeiyN7Yq9bqbrA" general="_JnVUwIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jua0MIB2EeiyN7Yq9bqbrA" name="dicePlacer" visibility="private" type="_Jw4SUIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Jua0MYB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>null</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JucpYIB2EeiyN7Yq9bqbrA" name="DraftBoard" specification="_JubbQIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JufFoIB2EeiyN7Yq9bqbrA" name="DraftBoard" specification="_JudQcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    this.dicePlacer = dicePlacer;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JufssYB2EeiyN7Yq9bqbrA" name="setDraftBoard" specification="_JufFoYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (draftBoard == null)
        return;
    Platform.runLater(() -> {
        this.getChildren().clear();
        for (int i = 0; i &lt; draftBoard.getDices().length; i++) {
            Dice dice = new Dice();
            dice.setDiceFace(draftBoard.getDices()[i]);
            if (dicePlacer != null) {
                final int index = i;
                dice.addEventHandler(MouseEvent.MOUSE_CLICKED, ( mouseEvent) -> {
                    Log.d(&quot;Selected dice on index: &quot; + index);
                    dicePlacer.onDiceSelected(index);
                });
            }
            this.getChildren().add(dice);
        }
    });
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JubbQIB2EeiyN7Yq9bqbrA" name="DraftBoard" visibility="public" method="_JucpYIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JudQcIB2EeiyN7Yq9bqbrA" name="DraftBoard" visibility="public" method="_JufFoIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JueekIB2EeiyN7Yq9bqbrA" name="dicePlacer" type="_Jw4SUIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JufFoYB2EeiyN7Yq9bqbrA" name="setDraftBoard" visibility="public" method="_JufssYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JufssIB2EeiyN7Yq9bqbrA" name="draftBoard" type="_IztfcYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <nestedClassifier xmi:type="uml:Interface" xmi:id="_Jw4SUIB2EeiyN7Yq9bqbrA" name="OnDiceSelectedListener" visibility="public">
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_Jw45YIB2EeiyN7Yq9bqbrA" name="onDiceSelected" visibility="public">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jw5gcIB2EeiyN7Yq9bqbrA" name="index">
                        <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                      </ownedParameter>
                    </ownedOperation>
                  </nestedClassifier>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JnfFwIB2EeiyN7Yq9bqbrA" name="GUIPlaceDice" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JnfFwYB2EeiyN7Yq9bqbrA" general="_JRuRIIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JniwIYB2EeiyN7Yq9bqbrA" name="root" visibility="private" type="_JnVUwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnjXMIB2EeiyN7Yq9bqbrA" name="schemaBox" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jnj-QIB2EeiyN7Yq9bqbrA" name="draftBox" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jnj-QYB2EeiyN7Yq9bqbrA" name="messages" visibility="private" type="_JlBnoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnklUIB2EeiyN7Yq9bqbrA" name="buttonOne" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnklUYB2EeiyN7Yq9bqbrA" name="buttonTwo" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnlMYIB2EeiyN7Yq9bqbrA" name="buttonThree" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnlzcIB2EeiyN7Yq9bqbrA" name="buttonFour" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnlzcYB2EeiyN7Yq9bqbrA" name="buttonFive" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnmagIB2EeiyN7Yq9bqbrA" name="buttonSix" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnnBkIB2EeiyN7Yq9bqbrA" name="schemaView" visibility="private" type="_Jk4dsIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnnBkYB2EeiyN7Yq9bqbrA" name="draftBoardView" visibility="private" type="_JnUtsIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JnnooIB2EeiyN7Yq9bqbrA" name="dice" visibility="private" type="_Jk8IEYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_Jng68IB2EeiyN7Yq9bqbrA" name="GUIPlaceDice implements OnDiceSelectedListener" client="_JnfFwIB2EeiyN7Yq9bqbrA" supplier="_Jnfs0YB2EeiyN7Yq9bqbrA" contract="_Jnfs0YB2EeiyN7Yq9bqbrA"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JniJEYB2EeiyN7Yq9bqbrA" name="GUIPlaceDice implements EventHandler" client="_JnfFwIB2EeiyN7Yq9bqbrA" supplier="_Jng68oB2EeiyN7Yq9bqbrA" contract="_Jng68oB2EeiyN7Yq9bqbrA"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JniwIIB2EeiyN7Yq9bqbrA" name="GUIPlaceDice implements OnSchemaInteractionListener" client="_JnfFwIB2EeiyN7Yq9bqbrA" supplier="_JnQcQIB2EeiyN7Yq9bqbrA" contract="_JnQcQIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jnqr8IB2EeiyN7Yq9bqbrA" name="GUIPlaceDice" specification="_JnnooYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, ignore, isFromTool, forceLoneliness);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JnuWUYB2EeiyN7Yq9bqbrA" name="GUIPlaceDice" specification="_JnrTAIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, ignore, isFromTool, forceLoneliness, forceDice, shouldSelectNumber);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JnwLgIB2EeiyN7Yq9bqbrA" name="render" specification="_JnvkcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root == null) {
        FXMLLoader loader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/DiceSelection.fxml&quot;));
        try {
            root = loader.load();
        } catch (IOException e) {
            e.printStackTrace();
        }
        Platform.runLater(() -> {
            Stage secondStage = new Stage();
            secondStage.setResizable(false);
            Scene scene = new Scene(root);
            secondStage.setScene(scene);
            secondStage.initOwner(((GUIGameTable) getGameTable()).getWindow());
            secondStage.initModality(Modality.APPLICATION_MODAL);
            secondStage.show();
            schemaBox = (VBox) scene.lookup(&quot;#schemaBox&quot;);
            draftBox = (VBox) scene.lookup(&quot;#draftBox&quot;);
            messages = (Label) scene.lookup(&quot;#messages&quot;);
            buttonOne = (Button) scene.lookup(&quot;#buttonOne&quot;);
            buttonTwo = (Button) scene.lookup(&quot;#buttonTwo&quot;);
            buttonThree = (Button) scene.lookup(&quot;#buttonThree&quot;);
            buttonFour = (Button) scene.lookup(&quot;#buttonFour&quot;);
            buttonFive = (Button) scene.lookup(&quot;#buttonFive&quot;);
            buttonSix = (Button) scene.lookup(&quot;#buttonSix&quot;);
            this.schemaView = new SchemaPanel(this);
            this.draftBoardView = new DraftBoard(this);
            this.dice = new Dice();
            schemaView.updateSchema(getGameTable().getSchema(getGameTable().getView().getPlayer()));
            draftBoardView.setDraftBoard(getGameTable().getDraftBoardImmutable());
            /*                root.getChildren().add(schemaView);
                root.getChildren().add(draftBoardView);*/
            schemaBox.getChildren().add(schemaView);
            draftBox.getChildren().add(0, draftBoardView);
            draftBox.getChildren().add(2, dice);
            buttonOne.setOnAction(this);
            buttonTwo.setOnAction(this);
            buttonThree.setOnAction(this);
            buttonFour.setOnAction(this);
            buttonFive.setOnAction(this);
            buttonSix.setOnAction(this);
            secondStage.setOnCloseRequest(( windowEvent) -> {
                processCancel();
            });
            root.setStyle(&quot;-fx-background-image: url('/gui/background.jpg');\n&quot; + &quot;    -fx-background-repeat: repeat;&quot;);
        });
    }
    Platform.runLater(() -> {
        if (getInternalState() == InternalState.POSITION_SELECTION) {
            messages.setText(&quot;Select a cell on the schema&quot;);
            setButtonVisible(false);
            this.dice.setVisible(false);
            this.schemaView.setDisable(false);
            this.draftBoardView.setDisable(true);
            schemaView.highlightAllowedPoints(getGameTable().getDraftBoardImmutable().getDices()[getSelectedDice()], getIgnore(), isForceLoneliness());
        } else if (getInternalState() == InternalState.DICE_SELECTION) {
            messages.setText(&quot;Select a dice&quot;);
            setButtonVisible(false);
            this.dice.setVisible(false);
            this.schemaView.setDisable(true);
            this.draftBoardView.setDisable(false);
        } else if (getInternalState() == InternalState.NUMBER_SELECTION) {
            messages.setText(&quot;This dice was drawn, select its number&quot;);
            dice.setDiceFace(getGameTable().getDraftBoardImmutable().getDices()[getSelectedDice()]);
            setButtonVisible(true);
            this.dice.setVisible(true);
            this.schemaView.setDisable(true);
            this.draftBoardView.setDisable(true);
        }
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JnxZoIB2EeiyN7Yq9bqbrA" name="setButtonVisible" specification="_JnwykIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    buttonOne.setVisible(b);
    buttonTwo.setVisible(b);
    buttonThree.setVisible(b);
    buttonFour.setVisible(b);
    buttonFive.setVisible(b);
    buttonSix.setVisible(b);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JnynwIB2EeiyN7Yq9bqbrA" name="onDiceSelected" specification="_JnyAsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (getInternalState() != InternalState.DICE_SELECTION)
        return;
    try {
        Log.d(&quot;Selected dice on index: &quot; + index + &quot; &lt;== Going to process&quot;);
        processDiceSelection(index);
    } catch (InputError ie) {
        GUIUtils.showError(ie.getMessage());
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jnz14IB2EeiyN7Yq9bqbrA" name="process" specification="_JnzO0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jn0c8YB2EeiyN7Yq9bqbrA" name="unrealize" specification="_Jn0c8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root == null)
        return;
    ((Stage) (root.getScene().getWindow())).close();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jn3gQIB2EeiyN7Yq9bqbrA" name="handle" specification="_Jn25MIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (getInternalState() != InternalState.NUMBER_SELECTION)
        return;
    int selection = Integer.parseInt(((Button) event.getSource()).getText());
    try {
        processNumberSelected(selection);
    } catch (InputError ie) {
        GUIUtils.showError(ie.getMessage());
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jn4uYYB2EeiyN7Yq9bqbrA" name="onCellSelected" specification="_Jn4HUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (getInternalState() == InternalState.POSITION_SELECTION) {
        try {
            processPositionSelected(point);
        } catch (InputError ie) {
            GUIUtils.showError(ie.getMessage());
        }
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JnnooYB2EeiyN7Yq9bqbrA" name="GUIPlaceDice" visibility="public" method="_Jnqr8IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jnpd0IB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JnqE4IB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JnqE4YB2EeiyN7Yq9bqbrA" name="isFromTool">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JnqE4oB2EeiyN7Yq9bqbrA" name="forceLoneliness">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JnrTAIB2EeiyN7Yq9bqbrA" name="GUIPlaceDice" visibility="public" method="_JnuWUYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JnshIYB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JntIMIB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JntvQIB2EeiyN7Yq9bqbrA" name="isFromTool">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JntvQYB2EeiyN7Yq9bqbrA" name="forceLoneliness">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JntvQoB2EeiyN7Yq9bqbrA" name="forceDice">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JnuWUIB2EeiyN7Yq9bqbrA" name="shouldSelectNumber">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JnvkcIB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_JnwLgIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JnwykIB2EeiyN7Yq9bqbrA" name="setButtonVisible" visibility="private" method="_JnxZoIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JnwykYB2EeiyN7Yq9bqbrA" name="b">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JnyAsIB2EeiyN7Yq9bqbrA" name="onDiceSelected" visibility="public" method="_JnynwIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JnyAsYB2EeiyN7Yq9bqbrA" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JnzO0IB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_Jnz14IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JnzO0YB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jn0c8IB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_Jn0c8YB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jn25MIB2EeiyN7Yq9bqbrA" name="handle" visibility="public" method="_Jn3gQIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jn25MYB2EeiyN7Yq9bqbrA" name="event" type="_Jn1EAIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jn4HUIB2EeiyN7Yq9bqbrA" name="onCellSelected" visibility="public" method="_Jn4uYYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jn4uYIB2EeiyN7Yq9bqbrA" name="point" type="_JlNN0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jn7KoIB2EeiyN7Yq9bqbrA" name="PersonalPlayerArea" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Jn7KoYB2EeiyN7Yq9bqbrA" general="_JnVUwIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jn8YwIB2EeiyN7Yq9bqbrA" name="gameTable" visibility="private" isLeaf="true" type="_IvCa0YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jn8_0YB2EeiyN7Yq9bqbrA" name="privateObjectiveView" visibility="private" type="_Jn8_0IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jn9m4IB2EeiyN7Yq9bqbrA" name="schemaView" visibility="private" type="_Jk4dsIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jn-N8IB2EeiyN7Yq9bqbrA" name="player" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jn-N8YB2EeiyN7Yq9bqbrA" name="personalPlayerArea" visibility="private" type="_JnVUwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jn-1AIB2EeiyN7Yq9bqbrA" name="schema" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jn_cEIB2EeiyN7Yq9bqbrA" name="privateObjective" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JoADIIB2EeiyN7Yq9bqbrA" name="interactionPanel" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JoAqMIB2EeiyN7Yq9bqbrA" name="token" visibility="private" type="_JlBnoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JoB4UIB2EeiyN7Yq9bqbrA" name="placeDice" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JoCfYIB2EeiyN7Yq9bqbrA" name="useToolCard" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JoDGcIB2EeiyN7Yq9bqbrA" name="endTurn" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JoDtgIB2EeiyN7Yq9bqbrA" name="actionPanel" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_Jn7xsIB2EeiyN7Yq9bqbrA" name="PersonalPlayerArea implements EventHandler" client="_Jn7KoIB2EeiyN7Yq9bqbrA" supplier="_Jng68oB2EeiyN7Yq9bqbrA" contract="_Jng68oB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JoGw0IB2EeiyN7Yq9bqbrA" name="PersonalPlayerArea" specification="_JoEUkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    this.gameTable = gameTable;
    this.player = player;
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JoH-8IB2EeiyN7Yq9bqbrA" name="renderPlayer" specification="_JoHX4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (player == null || !player.getName().equals(this.player))
        return;
    Platform.runLater(() -> {
        //The schema sould not be here
        this.schemaView.updateSchema(this.gameTable.getSchema(player.getName()));
        this.schemaView.updateToken(player.getToken());
        this.token.setText(&quot;Token: &quot; + player.getToken());
        this.privateObjectiveView.setObjective(player.getPrivateObjective());
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JoImAYB2EeiyN7Yq9bqbrA" name="setActive" specification="_JoImAIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    FXMLLoader loader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/PlayerPersonalArea.fxml&quot;));
    try {
        this.personalPlayerArea = loader.load();
    } catch (IOException e) {
        e.printStackTrace();
    }
    Platform.runLater(() -> {
        Stage secondStage = new Stage();
        secondStage.setResizable(false);
        Scene scene = new Scene(this.personalPlayerArea);
        secondStage.setScene(scene);
        secondStage.show();
        this.schema = (VBox) scene.lookup(&quot;#schema&quot;);
        this.privateObjective = (VBox) scene.lookup(&quot;#privateObjective&quot;);
        this.interactionPanel = (VBox) scene.lookup(&quot;#interactionPanel&quot;);
        this.actionPanel = (VBox) scene.lookup(&quot;#actionPanel&quot;);
        this.token = (Label) scene.lookup(&quot;#token&quot;);
        this.placeDice = (Button) scene.lookup(&quot;#placeDice&quot;);
        this.useToolCard = (Button) scene.lookup(&quot;#useToolCard&quot;);
        this.endTurn = (Button) scene.lookup(&quot;#endTurn&quot;);
        this.schemaView = new SchemaPanel(null);
        this.privateObjectiveView = new ObjectiveView();
        this.schema.getChildren().add(this.schemaView);
        this.privateObjective.getChildren().add(this.privateObjectiveView);
        this.endTurn.setText(&quot;End Turn&quot;);
        this.useToolCard.setText(&quot;Use ToolCard&quot;);
        this.placeDice.setText(&quot;Place a dice&quot;);
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JoJ0IYB2EeiyN7Yq9bqbrA" name="handle" specification="_JoJNEIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JoEUkIB2EeiyN7Yq9bqbrA" name="PersonalPlayerArea" visibility="public" method="_JoGw0IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JoGJwIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JoGJwYB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JoHX4IB2EeiyN7Yq9bqbrA" name="renderPlayer" visibility="public" method="_JoH-8IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JoHX4YB2EeiyN7Yq9bqbrA" name="player" type="_Iz9-IYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JoImAIB2EeiyN7Yq9bqbrA" name="setActive" visibility="public" method="_JoImAYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JoJNEIB2EeiyN7Yq9bqbrA" name="handle" visibility="public" method="_JoJ0IYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JoJ0IIB2EeiyN7Yq9bqbrA" name="event" type="_Jn1EAIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jn8_0IB2EeiyN7Yq9bqbrA" name="ObjectiveView" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JrRZkIB2EeiyN7Yq9bqbrA" general="_JkussYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JrSAoIB2EeiyN7Yq9bqbrA" name="objectiveIm" visibility="private" type="_Jkwh4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrUc4IB2EeiyN7Yq9bqbrA" name="ObjectiveView" specification="_JrSnsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    FXMLLoader fxmlLoader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/Objectives.fxml&quot;));
    fxmlLoader.setRoot(this);
    fxmlLoader.setController(this);
    try {
        fxmlLoader.load();
    } catch (IOException exception) {
        throw new RuntimeException(exception);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrW5IoB2EeiyN7Yq9bqbrA" name="setObjective" specification="_JrW5IIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (objective == null) {
        objectiveIm.setImage(new Image(&quot;gui/objectives/private/back.png&quot;));
        return;
    }
    if (objective instanceof PrivateObjective) {
        objectiveIm.setImage(new Image(&quot;gui/objectives/private/&quot; + ((PrivateObjective) objective).getColor().toString().toUpperCase() + &quot;.png&quot;));
        return;
    }
    objectiveIm.setImage(new Image(&quot;gui/objectives/public/&quot; + ((String) objective) + &quot;.png&quot;));
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrSnsIB2EeiyN7Yq9bqbrA" name="ObjectiveView" visibility="public" method="_JrUc4IB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrW5IIB2EeiyN7Yq9bqbrA" name="setObjective" visibility="public" method="_JrW5IoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrW5IYB2EeiyN7Yq9bqbrA" name="objective" type="_JrVD8IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JoLCQIB2EeiyN7Yq9bqbrA" name="GUIUtils" visibility="public">
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JoMQYYB2EeiyN7Yq9bqbrA" name="showError" specification="_JoLpUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Alert alert = new Alert(Alert.AlertType.ERROR);
    alert.setTitle(&quot;Error&quot;);
    alert.setContentText(message);
    alert.show();
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JoLpUIB2EeiyN7Yq9bqbrA" name="showError" visibility="public" isStatic="true" method="_JoMQYYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JoMQYIB2EeiyN7Yq9bqbrA" name="message" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JoNegIB2EeiyN7Yq9bqbrA" name="DiceHolderView" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JoNegYB2EeiyN7Yq9bqbrA" general="_JnVUwIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JoOFkYB2EeiyN7Yq9bqbrA" name="turns" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JoOsoIB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JoOsoYB2EeiyN7Yq9bqbrA" value="*"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JoOsooB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new VBox[Settings.TURNS]</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JoPTsIB2EeiyN7Yq9bqbrA" name="token" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JoPTsYB2EeiyN7Yq9bqbrA" name="usedToken" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JoP6wIB2EeiyN7Yq9bqbrA" name="schema" visibility="private" type="_IzxJ0IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JoRI4YB2EeiyN7Yq9bqbrA" name="interactionListener" visibility="private" type="_JqgkkIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JoOFkIB2EeiyN7Yq9bqbrA" name="DiceHolderView implements EventHandler" client="_JoNegIB2EeiyN7Yq9bqbrA" supplier="_Jng68oB2EeiyN7Yq9bqbrA" contract="_Jng68oB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JoS-EIB2EeiyN7Yq9bqbrA" name="DiceHolderView" specification="_JoRv8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    this(null);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JoUzQYB2EeiyN7Yq9bqbrA" name="DiceHolderView" specification="_JoS-EYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    this.interactionListener = interactionListener;
    for (int x = 0; x &lt; Settings.TURNS; x++) {
        turns[x] = new VBox();
        this.getChildren().add(turns[x]);
        turns[x].getChildren().add(new Label(&quot;Turn &quot; + (x + 1) + &quot; &quot;));
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JoWBYIB2EeiyN7Yq9bqbrA" name="setDiceHolder" specification="_JoVaUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (diceHolder == null)
        return;
    Platform.runLater(() -> {
        for (int x = 0; x &lt; Settings.TURNS; x++) {
            turns[x].getChildren().clear();
            turns[x].getChildren().add(new Label(&quot;Turn &quot; + (x + 1)));
            for (int y = 0; y &lt; diceHolder.getDiceFaces(x).length; y++) {
                Dice dice = new Dice();
                dice.setDiceFace(diceHolder.getDiceFaces(x)[y]);
                final int x1 = x, y1 = y;
                dice.addEventHandler(javafx.scene.input.MouseEvent.MOUSE_CLICKED,  event -> interactionListener.onDiceSelected(new Point(x1, y1)));
                turns[x].getChildren().add(dice);
            }
        }
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JoX2kYB2EeiyN7Yq9bqbrA" name="handle" specification="_JoXPgYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JoRv8IB2EeiyN7Yq9bqbrA" name="DiceHolderView" visibility="public" method="_JoS-EIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JoS-EYB2EeiyN7Yq9bqbrA" name="DiceHolderView" visibility="public" method="_JoUzQYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JoUzQIB2EeiyN7Yq9bqbrA" name="interactionListener" type="_JqgkkIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JoVaUIB2EeiyN7Yq9bqbrA" name="setDiceHolder" visibility="public" method="_JoWBYIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JoVaUYB2EeiyN7Yq9bqbrA" name="diceHolder" type="_I0N1wIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JoXPgYB2EeiyN7Yq9bqbrA" name="handle" visibility="public" method="_JoX2kYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JoX2kIB2EeiyN7Yq9bqbrA" name="event" type="_JoWocIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <nestedClassifier xmi:type="uml:Interface" xmi:id="_JqgkkIB2EeiyN7Yq9bqbrA" name="OnTurnHolderInteractionListener" visibility="public">
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_JqhysIB2EeiyN7Yq9bqbrA" name="onDiceSelected" visibility="public">
                      <ownedParameter xmi:type="uml:Parameter" xmi:id="_JqhysYB2EeiyN7Yq9bqbrA" name="point" type="_JUhGcYB2EeiyN7Yq9bqbrA"/>
                    </ownedOperation>
                  </nestedClassifier>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JqjA0IB2EeiyN7Yq9bqbrA" name="GUIChooseDice" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Jqjn4IB2EeiyN7Yq9bqbrA" general="_JRWdsIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jqjn4oB2EeiyN7Yq9bqbrA" name="root" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JqkO8IB2EeiyN7Yq9bqbrA" name="draftBoardView" visibility="private" type="_JnUtsIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_Jqjn4YB2EeiyN7Yq9bqbrA" name="GUIChooseDice implements OnDiceSelectedListener" client="_JqjA0IB2EeiyN7Yq9bqbrA" supplier="_Jnfs0YB2EeiyN7Yq9bqbrA" contract="_Jnfs0YB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JqmEIIB2EeiyN7Yq9bqbrA" name="GUIChooseDice" specification="_JqkO8YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, toolName);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JqmrMYB2EeiyN7Yq9bqbrA" name="process" specification="_JqmEIYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JqnSQIB2EeiyN7Yq9bqbrA" name="unrealize" specification="_JqmrMoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root != null) {
        Platform.runLater(() -> {
            Stage stage = (Stage) root.getScene().getWindow();
            stage.close();
            root = null;
        });
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jqn5UIB2EeiyN7Yq9bqbrA" name="render" specification="_JqnSQYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root == null) {
        buildInterface();
    }
    Platform.runLater(() -> {
        draftBoardView.setDraftBoard(getGameTable().getDraftBoardImmutable());
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JqogYIB2EeiyN7Yq9bqbrA" name="buildInterface" specification="_Jqn5UYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    FXMLLoader loader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/ChooseDice.fxml&quot;));
    try {
        root = loader.load();
    } catch (IOException e) {
        e.printStackTrace();
    }
    Platform.runLater(() -> {
        Stage secondStage = new Stage();
        secondStage.setResizable(false);
        Scene scene = new Scene(root);
        secondStage.setScene(scene);
        secondStage.setOnCloseRequest(( windowEvent) -> processCancel());
        draftBoardView = new DraftBoard(this);
        draftBoardView.setDraftBoard(getGameTable().getDraftBoardImmutable());
        root.getChildren().add(draftBoardView);
        secondStage.show();
        root.setStyle(&quot;-fx-background-image: url('/gui/background.jpg');\n&quot; + &quot;    -fx-background-repeat: repeat;&quot;);
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JqpHcYB2EeiyN7Yq9bqbrA" name="onDiceSelected" specification="_JqogYYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    try {
        processDice(index);
    } catch (InputError ie) {
        GUIUtils.showError(ie.getMessage());
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JqkO8YB2EeiyN7Yq9bqbrA" name="GUIChooseDice" visibility="public" method="_JqmEIIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JqldEYB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JqldEoB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JqmEIYB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_JqmrMYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JqmrMIB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JqmrMoB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_JqnSQIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JqnSQYB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_Jqn5UIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jqn5UYB2EeiyN7Yq9bqbrA" name="buildInterface" visibility="private" method="_JqogYIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JqogYYB2EeiyN7Yq9bqbrA" name="onDiceSelected" visibility="public" method="_JqpHcYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JqpHcIB2EeiyN7Yq9bqbrA" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JqqVkIB2EeiyN7Yq9bqbrA" name="GUIExchangeWDiceHolder" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Jqq8oIB2EeiyN7Yq9bqbrA" general="_JVcTgIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JqrjsIB2EeiyN7Yq9bqbrA" name="root" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JqrjsYB2EeiyN7Yq9bqbrA" name="roundTrack" visibility="private" type="_JoNegIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JqsKwIB2EeiyN7Yq9bqbrA" name="exchangeDice" visibility="private" type="_JnVUwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jqsx0IB2EeiyN7Yq9bqbrA" name="buttons" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jqsx0YB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jqsx0oB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedAttribute>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_Jqq8oYB2EeiyN7Yq9bqbrA" name="GUIExchangeWDiceHolder implements OnTurnHolderInteractionListener" client="_JqqVkIB2EeiyN7Yq9bqbrA" supplier="_JqgkkIB2EeiyN7Yq9bqbrA" contract="_JqgkkIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JqvOEoB2EeiyN7Yq9bqbrA" name="GUIExchangeWDiceHolder" specification="_JqtY4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, diceIndex);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jqv1IYB2EeiyN7Yq9bqbrA" name="process" specification="_JqvOE4B2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jqv1I4B2EeiyN7Yq9bqbrA" name="unrealize" specification="_Jqv1IoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root != null) {
        Platform.runLater(() -> {
            Stage stage = (Stage) root.getScene().getWindow();
            stage.close();
            root = null;
        });
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jqv1JYB2EeiyN7Yq9bqbrA" name="render" specification="_Jqv1JIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root == null) {
        buildInterface();
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JqwcMIB2EeiyN7Yq9bqbrA" name="buildInterface" specification="_Jqv1JoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    FXMLLoader loader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/ExchangeWDiceHolder.fxml&quot;));
    try {
        root = loader.load();
    } catch (IOException e) {
        e.printStackTrace();
    }
    Platform.runLater(() -> {
        Stage secondStage = new Stage();
        secondStage.setResizable(false);
        Scene scene = new Scene(root);
        secondStage.setScene(scene);
        secondStage.setOnCloseRequest(( windowEvent) -> processCancel());
        secondStage.show();
        exchangeDice = (HBox) scene.lookup(&quot;#chooseDice&quot;);
        roundTrack = new DiceHolderView(this);
        roundTrack.setDiceHolder(getGameTable().getDiceHolderImmutable());
        exchangeDice.getChildren().add(roundTrack);
        root.setStyle(&quot;-fx-background-image: url('/gui/background.jpg');\n&quot; + &quot;    -fx-background-repeat: repeat;&quot;);
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JqxDQYB2EeiyN7Yq9bqbrA" name="onDiceSelected" specification="_JqwcMYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    try {
        processVictim(point);
    } catch (InputError ie) {
        GUIUtils.showError(ie.getMessage());
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JqtY4IB2EeiyN7Yq9bqbrA" name="GUIExchangeWDiceHolder" visibility="public" method="_JqvOEoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JqvOEIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JqvOEYB2EeiyN7Yq9bqbrA" name="diceIndex">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_ILxaUPaLEeW5KOK8aDMdgA"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JqvOE4B2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_Jqv1IYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jqv1IIB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jqv1IoB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_Jqv1I4B2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jqv1JIB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_Jqv1JYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jqv1JoB2EeiyN7Yq9bqbrA" name="buildInterface" visibility="private" method="_JqwcMIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JqwcMYB2EeiyN7Yq9bqbrA" name="onDiceSelected" visibility="public" method="_JqxDQYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JqxDQIB2EeiyN7Yq9bqbrA" name="point" type="_JlNN0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jq7bUIB2EeiyN7Yq9bqbrA" name="GUILogger" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Jq8pcYB2EeiyN7Yq9bqbrA" general="_Jq7bUoB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jq9QgIB2EeiyN7Yq9bqbrA" name="go" specification="_Jq8pcoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    new Thread(() -> {
        launch(&quot;&quot;);
    }).start();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jq-eo4B2EeiyN7Yq9bqbrA" name="start" specification="_Jq-eoYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Scene scene = new Scene(new HBox(new Label(&quot;LOL&quot;)));
    primaryStage.setScene(scene);
    primaryStage.setResizable(true);
    primaryStage.show();
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jq8pcoB2EeiyN7Yq9bqbrA" name="go" visibility="public" isStatic="true" method="_Jq9QgIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jq-eoYB2EeiyN7Yq9bqbrA" name="start" visibility="public" method="_Jq-eo4B2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jq-eooB2EeiyN7Yq9bqbrA" name="primaryStage" type="_Jq9QgoB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jq_swIB2EeiyN7Yq9bqbrA" name="GUIMoveDice" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JrAT0IB2EeiyN7Yq9bqbrA" general="_JX5KkIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JrA64IB2EeiyN7Yq9bqbrA" name="root" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JrA64YB2EeiyN7Yq9bqbrA" name="schemaPanel" visibility="private" type="_Jk4dsIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JrBh8IB2EeiyN7Yq9bqbrA" name="questionLabel" visibility="private" type="_JlBnoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JrAT0YB2EeiyN7Yq9bqbrA" name="GUIMoveDice implements OnSchemaInteractionListener" client="_Jq_swIB2EeiyN7Yq9bqbrA" supplier="_JnQcQIB2EeiyN7Yq9bqbrA" contract="_JnQcQIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrFzYIB2EeiyN7Yq9bqbrA" name="GUIMoveDice" specification="_JrCwEYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, ignore, toolName, times);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrJdwYB2EeiyN7Yq9bqbrA" name="GUIMoveDice" specification="_JrGacIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, ignore, toolName, times, color);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrKr4YB2EeiyN7Yq9bqbrA" name="process" specification="_JrKE0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrLS8YB2EeiyN7Yq9bqbrA" name="unrealize" specification="_JrLS8IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root != null) {
        Platform.runLater(() -> {
            Stage stage = (Stage) root.getScene().getWindow();
            stage.close();
            root = null;
        });
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrLS84B2EeiyN7Yq9bqbrA" name="buildInterface" specification="_JrLS8oB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    FXMLLoader loader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/MoveDice.fxml&quot;));
    try {
        root = loader.load();
    } catch (IOException e) {
        e.printStackTrace();
    }
    Platform.runLater(() -> {
        Stage secondStage = new Stage();
        secondStage.setResizable(false);
        Scene scene = new Scene(root);
        secondStage.setScene(scene);
        secondStage.setOnCloseRequest(( windowEvent) -> processCancel());
        schemaPanel = new SchemaPanel(this);
        schemaPanel.updateSchema(getTemporaryPlayerSchema());
        root.getChildren().add(schemaPanel);
        secondStage.show();
        questionLabel = (Label) scene.lookup(&quot;#question&quot;);
        root.setStyle(&quot;-fx-background-image: url('/gui/background.jpg');\n&quot; + &quot;    -fx-background-repeat: repeat;&quot;);
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrL6AYB2EeiyN7Yq9bqbrA" name="render" specification="_JrL6AIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root == null) {
        buildInterface();
    }
    Platform.runLater(() -> {
        schemaPanel.updateSchema(getTemporaryPlayerSchema());
        if (getActionState() == ActionState.CHOOSE) {
            questionLabel.setText(&quot;Choose the &quot; + this.getTimes().toString().toLowerCase() + &quot; dice to move: &quot;);
        } else {
            questionLabel.setText(&quot;Choose the destination: &quot;);
        }
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrL6BIB2EeiyN7Yq9bqbrA" name="onCellSelected" specification="_JrL6AoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    try {
        if (getActionState() == ActionState.CHOOSE) {
            if (getTimes() == Times.FIRST) {
                processFirstSource(point);
            } else if (getTimes() == Times.SECOND) {
                processSecondSource(point);
            }
            return;
        } else if (getActionState() == ActionState.PLACE) {
            if (getTimes() == Times.FIRST) {
                processFirstDestination(point);
            } else if (getTimes() == Times.SECOND) {
                processSecondDestination(point);
            }
        }
    } catch (InputError ie) {
        GUIUtils.showError(ie.getMessage());
        getGameTable().setState(this);
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrCwEYB2EeiyN7Yq9bqbrA" name="GUIMoveDice" visibility="public" method="_JrFzYIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrElQYB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrElQoB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrFMUIB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrFMUYB2EeiyN7Yq9bqbrA" name="times" type="_JrBh8YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrGacIB2EeiyN7Yq9bqbrA" name="GUIMoveDice" visibility="public" method="_JrJdwYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrHokYB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrIPoIB2EeiyN7Yq9bqbrA" name="ignore" type="_IyglkIB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrI2sIB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrI2sYB2EeiyN7Yq9bqbrA" name="times" type="_JrBh8YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrJdwIB2EeiyN7Yq9bqbrA" name="color" type="_JACEMIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrKE0IB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_JrKr4YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrKr4IB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrLS8IB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_JrLS8YB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrLS8oB2EeiyN7Yq9bqbrA" name="buildInterface" visibility="private" method="_JrLS84B2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrL6AIB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_JrL6AYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrL6AoB2EeiyN7Yq9bqbrA" name="onCellSelected" visibility="public" method="_JrL6BIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrL6A4B2EeiyN7Yq9bqbrA" name="point" type="_JlNN0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JrBh8YB2EeiyN7Yq9bqbrA" name="Times"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_JrNIIIB2EeiyN7Yq9bqbrA" name="GUIMainMenuState" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JrNIIYB2EeiyN7Yq9bqbrA" general="_Jck2QIB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrOWQoB2EeiyN7Yq9bqbrA" name="GUIMainMenuState" specification="_JrNIIoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrPkYIB2EeiyN7Yq9bqbrA" name="process" specification="_JrO9UIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int in = Integer.parseInt(input);
    try {
        processSelection(in);
    } catch (InputError ie) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle(&quot;Errore&quot;);
        alert.setContentText(ie.getMessage());
        alert.show();
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrPkYoB2EeiyN7Yq9bqbrA" name="unrealize" specification="_JrPkYYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrQLcYB2EeiyN7Yq9bqbrA" name="render" specification="_JrQLcIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrNIIoB2EeiyN7Yq9bqbrA" name="GUIMainMenuState" visibility="public" method="_JrOWQoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrOWQYB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrO9UIB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_JrPkYIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrO9UYB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrPkYYB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_JrPkYoB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrQLcIB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_JrQLcYB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JrYHQIB2EeiyN7Yq9bqbrA" name="PlayerBoard" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JrYuUIB2EeiyN7Yq9bqbrA" general="_JnS4gYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JrYuUoB2EeiyN7Yq9bqbrA" name="playerNameToken" visibility="private" type="_JlBnoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JrZVYIB2EeiyN7Yq9bqbrA" name="playerBoard" visibility="private" type="_JnVUwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JrZVYYB2EeiyN7Yq9bqbrA" name="token" visibility="private" type="_JlBnoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JrZVYoB2EeiyN7Yq9bqbrA" name="actionArea" visibility="private" type="_JnVUwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JrZ8cIB2EeiyN7Yq9bqbrA" name="placeDice" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JrajgIB2EeiyN7Yq9bqbrA" name="useToolCard" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JrbKkIB2EeiyN7Yq9bqbrA" name="endTurn" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JrcYsIB2EeiyN7Yq9bqbrA" name="schemaPanel" visibility="private" type="_Jk4dsIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JrcYsYB2EeiyN7Yq9bqbrA" name="objectiveView" visibility="private" type="_Jn8_0IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JreN4YB2EeiyN7Yq9bqbrA" name="eventHandler" visibility="private" type="_JtmU0IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JrYuUYB2EeiyN7Yq9bqbrA" name="PlayerBoard implements EventHandler" client="_JrYHQIB2EeiyN7Yq9bqbrA" supplier="_Jng68oB2EeiyN7Yq9bqbrA" contract="_Jng68oB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrgqIYB2EeiyN7Yq9bqbrA" name="PlayerBoard" specification="_Jre08IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (eventHandler == null)
        throw new NullPointerException(&quot;eventHandler cannot be null!!!&quot;);
    this.eventHandler = eventHandler;
    FXMLLoader fxmlLoader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/PlayerBoard.fxml&quot;));
    fxmlLoader.setRoot(this);
    fxmlLoader.setController(this);
    try {
        fxmlLoader.load();
    } catch (IOException exception) {
        throw new RuntimeException(exception);
    }
    this.schemaPanel = new SchemaPanel(null);
    this.objectiveView = new ObjectiveView();
    playerBoard.getChildren().add(this.schemaPanel);
    playerBoard.getChildren().add(this.objectiveView);
    placeDice.setOnAction(this);
    useToolCard.setOnAction(this);
    endTurn.setOnAction(this);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrhRMYB2EeiyN7Yq9bqbrA" name="setPlayer" specification="_JrgqIoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (player == null)
        return;
    if (player.getPrivateObjective() == null) {
        placeDice.setVisible(false);
        useToolCard.setVisible(false);
        endTurn.setVisible(false);
    /*            this.getChildren().removeAll(placeDice, useToolCard, endTurn);*/
    }
    playerNameToken.setText(player.getName() + &quot;   &quot; + &quot;Token: &quot; + player.getToken());
    this.objectiveView.setObjective(player.getPrivateObjective());
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JrhRNIB2EeiyN7Yq9bqbrA" name="setSchema" specification="_JrhRMoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (schema == null)
        return;
    this.schemaPanel.updateSchema(schema);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jrh4QoB2EeiyN7Yq9bqbrA" name="handle" specification="_Jrh4QIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (event.getSource().equals(placeDice)) {
        eventHandler.onPlayerPlaceDice();
        return;
    }
    if (event.getSource().equals(useToolCard)) {
        eventHandler.onPlayerUseToolCard();
        return;
    }
    if (event.getSource().equals(endTurn)) {
        eventHandler.onPlayerEndTurn();
        return;
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jre08IB2EeiyN7Yq9bqbrA" name="PlayerBoard" visibility="public" method="_JrgqIYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrgqIIB2EeiyN7Yq9bqbrA" name="eventHandler" type="_JtmU0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrgqIoB2EeiyN7Yq9bqbrA" name="setPlayer" visibility="public" method="_JrhRMYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrhRMIB2EeiyN7Yq9bqbrA" name="player" type="_Iz9-IYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JrhRMoB2EeiyN7Yq9bqbrA" name="setSchema" visibility="public" method="_JrhRNIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JrhRM4B2EeiyN7Yq9bqbrA" name="schema" type="_IzxJ0IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jrh4QIB2EeiyN7Yq9bqbrA" name="handle" visibility="public" method="_Jrh4QoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jrh4QYB2EeiyN7Yq9bqbrA" name="event" type="_Jn1EAIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <nestedClassifier xmi:type="uml:Interface" xmi:id="_JtmU0IB2EeiyN7Yq9bqbrA" name="OnPlayerBoardAction" visibility="public">
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_Jtm74IB2EeiyN7Yq9bqbrA" name="onPlayerPlaceDice" visibility="public"/>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_Jtni8IB2EeiyN7Yq9bqbrA" name="onPlayerEndTurn" visibility="public"/>
                    <ownedOperation xmi:type="uml:Operation" xmi:id="_Jtni8YB2EeiyN7Yq9bqbrA" name="onPlayerUseToolCard" visibility="public"/>
                  </nestedClassifier>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JttpkIB2EeiyN7Yq9bqbrA" name="GUIGameTable" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JtuQoIB2EeiyN7Yq9bqbrA" general="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JtwF0YB2EeiyN7Yq9bqbrA" name="root" visibility="private" type="_Jtu3sYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jtws4IB2EeiyN7Yq9bqbrA" name="players" visibility="private" type="_JrYHQIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jtws4YB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jtws4oB2EeiyN7Yq9bqbrA" value="*"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Jtws44B2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new ArrayList&lt;>()</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jtws5YB2EeiyN7Yq9bqbrA" name="toolCardsList" visibility="private" type="_Jtws5IB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jtws5oB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JtxT8IB2EeiyN7Yq9bqbrA" value="*"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JtxT8YB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new ArrayList&lt;>()</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JtxT8oB2EeiyN7Yq9bqbrA" name="publicObjectivesList" visibility="private" type="_Jn8_0IB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JtxT84B2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JtxT9IB2EeiyN7Yq9bqbrA" value="*"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Jtx7AIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new ArrayList&lt;>()</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jtx7AYB2EeiyN7Yq9bqbrA" name="diceHolderView" visibility="private" type="_JoNegIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JtyiEIB2EeiyN7Yq9bqbrA" name="draftBoardView" visibility="private" type="_JnUtsIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JtzJIIB2EeiyN7Yq9bqbrA" name="player1" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jt0-UIB2EeiyN7Yq9bqbrA" name="logsPanel" visibility="private" type="_JtzwMIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jt0-UYB2EeiyN7Yq9bqbrA" name="roundTrack" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jt1lYIB2EeiyN7Yq9bqbrA" name="publicObjectives" visibility="private" type="_JnVUwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jt2McIB2EeiyN7Yq9bqbrA" name="draftBoard" visibility="private" type="_JnVUwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jt2zgIB2EeiyN7Yq9bqbrA" name="turnMessage" visibility="private" type="_JlBnoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jt3akIB2EeiyN7Yq9bqbrA" name="player3" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jt4BoIB2EeiyN7Yq9bqbrA" name="player2" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jt4osIB2EeiyN7Yq9bqbrA" name="toolCards" visibility="private" type="_JnVUwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jt4osYB2EeiyN7Yq9bqbrA" name="player4" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JtuQoYB2EeiyN7Yq9bqbrA" name="GUIGameTable implements EventHandler" client="_JttpkIB2EeiyN7Yq9bqbrA" supplier="_Jng68oB2EeiyN7Yq9bqbrA" contract="_Jng68oB2EeiyN7Yq9bqbrA"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_Jtu3sIB2EeiyN7Yq9bqbrA" name="GUIGameTable implements OnPlayerBoardAction" client="_JttpkIB2EeiyN7Yq9bqbrA" supplier="_JtmU0IB2EeiyN7Yq9bqbrA" contract="_JtmU0IB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jt6d4IB2EeiyN7Yq9bqbrA" name="GUIGameTable" specification="_Jt4osoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(view);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jt6d4oB2EeiyN7Yq9bqbrA" name="renderDiceHolder" specification="_Jt6d4YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (diceHolderView == null)
        return;
    this.diceHolderView.setDiceHolder(this.getDiceHolderImmutable());
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jt6d5IB2EeiyN7Yq9bqbrA" name="renderLogEvent" specification="_Jt6d44B2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    ArrayList&lt;LogEvent> pastEvents = getPastEvents();
    Platform.runLater(() -> {
        VBox events = new VBox();
        if (pastEvents.isEmpty()) {
            events.getChildren().add(new Label(&quot;No recent events.&quot;));
            logsPanel.setContent(events);
            return;
        } else {
            for (int i = 0; i &lt; pastEvents.size(); i++) {
                events.getChildren().add(new Label(pastEvents.get(i).getMessage()));
            }
            logsPanel.setContent(events);
        }
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jt7E8IB2EeiyN7Yq9bqbrA" name="renderDraftBoard" specification="_Jt6d5YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (draftBoardView == null || getDraftBoardImmutable() == null)
        return;
    draftBoardView.setDraftBoard(getDraftBoardImmutable());
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jt7E84B2EeiyN7Yq9bqbrA" name="renderPlayer" specification="_Jt7E8YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (this.players.isEmpty())
        return;
    PlayerImmutable playerImmutable = getPlayer(player);
    Platform.runLater(() -> {
        this.players.get(getPlayerIndex(player)).setVisible(true);
        this.players.get(getPlayerIndex(player)).setPlayer(playerImmutable);
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jt8TEIB2EeiyN7Yq9bqbrA" name="renderSchema" specification="_Jt7sAIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (this.players.isEmpty())
        return;
    Schema schema = getSchema(player);
    Platform.runLater(() -> {
        this.players.get(getPlayerIndex(player)).setVisible(true);
        this.players.get(getPlayerIndex(player)).setSchema(schema);
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jt86IYB2EeiyN7Yq9bqbrA" name="renderToolcard" specification="_Jt8TEYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (this.toolCardsList.isEmpty())
        return;
    ToolCardImmutable toolcard = getToolCardImmutable(index);
    Platform.runLater(() -> {
        this.toolCardsList.get(index).setToolCard(toolcard);
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jt-IQIB2EeiyN7Yq9bqbrA" name="renderPublicObjective" specification="_Jt9hMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jt-vUYB2EeiyN7Yq9bqbrA" name="renderTurn" specification="_Jt-vUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (turnMessage == null)
        return;
    Platform.runLater(() -> turnMessage.setText(&quot;Now it's &quot; + getCurrentPlayer() + &quot; turn. Round &quot; + getRoundNumber() + &quot;, turn &quot; + (getRoundDirection() ? 1 : 2) + &quot;. Remaining &quot; + getSecondsRemaining() + &quot; seconds.&quot;));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jt_WYYB2EeiyN7Yq9bqbrA" name="setActive" specification="_Jt_WYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root != null)
        return;
    FXMLLoader loader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/MainView.fxml&quot;));
    try {
        root = loader.load();
    } catch (IOException e) {
        e.printStackTrace();
    }
    Platform.runLater(() -> {
        Stage secondStage = new Stage();
        secondStage.setResizable(false);
        Scene scene = new Scene(root);
        secondStage.setScene(scene);
        secondStage.setFullScreen(true);
        secondStage.show();
        secondStage.setOnCloseRequest(( windowEvent) -> {
            Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
            alert.setTitle(&quot;Closing game...&quot;);
            alert.setContentText(&quot;Are you sure you want to exit?&quot;);
            Optional&lt;ButtonType> result = alert.showAndWait();
            if (((Optional) result).get() == ButtonType.OK) {
                Platform.exit();
                System.exit(-1);
            } else {
                // This is the only way I found to prevent the closing of a window, LèL
                windowEvent.consume();
            }
        });
        player1 = (VBox) scene.lookup(&quot;#player1&quot;);
        player2 = (VBox) scene.lookup(&quot;#player2&quot;);
        player3 = (VBox) scene.lookup(&quot;#player3&quot;);
        player4 = (VBox) scene.lookup(&quot;#player4&quot;);
        logsPanel = (ScrollPane) scene.lookup(&quot;#pastEvents&quot;);
        turnMessage = (Label) scene.lookup(&quot;#turnMessage&quot;);
        renderTurn();
        players.add(new PlayerBoard(this));
        players.add(new PlayerBoard(this));
        players.add(new PlayerBoard(this));
        players.add(new PlayerBoard(this));
        player1.getChildren().add(players.get(0));
        player2.getChildren().add(players.get(1));
        player3.getChildren().add(players.get(2));
        player4.getChildren().add(players.get(3));
        players.forEach(( a) -> {
            a.setVisible(false);
        });
        diceHolderView = new DiceHolderView();
        draftBoardView = new DraftBoard();
        Arrays.stream(getPlayers()).forEach( player -> {
            this.players.get(getPlayerIndex(player)).setVisible(true);
            this.players.get(getPlayerIndex(player)).setPlayer(getPlayer(player));
            this.players.get(getPlayerIndex(player)).setSchema(getSchema(player));
        });
        publicObjectives = (HBox) scene.lookup(&quot;#publicObjectives&quot;);
        toolCards = (HBox) scene.lookup(&quot;#toolCards&quot;);
        draftBoard = (HBox) scene.lookup(&quot;#draftBoard&quot;);
        roundTrack = (VBox) scene.lookup(&quot;#roundTrack&quot;);
        for (int i = 0; i &lt; Settings.POBJECTIVES_N; i++) {
            this.publicObjectivesList.add(new ObjectiveView());
            this.publicObjectivesList.get(i).setObjective(getPublicObjective(i));
            this.publicObjectives.getChildren().add(this.publicObjectivesList.get(i));
        }
        for (int i = 0; i &lt; Settings.TOOLCARDS_N; i++) {
            this.toolCardsList.add(new ToolCard());
            this.toolCardsList.get(i).setToolCard(getToolCardImmutable(i));
            this.toolCards.getChildren().add(this.toolCardsList.get(i));
        }
        roundTrack.getChildren().add(diceHolderView);
        draftBoard.getChildren().add(draftBoardView);
        draftBoardView.setDraftBoard(getDraftBoardImmutable());
        renderLogEvent();
        root.setStyle(&quot;-fx-background-image: url('/gui/background.jpg');\n&quot; + &quot;    -fx-background-repeat: repeat;&quot;);
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuByoYB2EeiyN7Yq9bqbrA" name="getWindow" specification="_Jt_9cIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    return root.getScene().getWindow();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuCZsYB2EeiyN7Yq9bqbrA" name="setInactive" specification="_JuCZsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root == null)
        return;
    Platform.runLater(() -> {
        Stage stage = (Stage) root.getScene().getWindow();
        stage.close();
        root = null;
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuCZs4B2EeiyN7Yq9bqbrA" name="renderTimeOut" specification="_JuCZsoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    renderTurn();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuDAwoB2EeiyN7Yq9bqbrA" name="handleGameStart" specification="_JuDAwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuDn0YB2EeiyN7Yq9bqbrA" name="handle" specification="_JuDAw4B2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuDn04B2EeiyN7Yq9bqbrA" name="onPlayerPlaceDice" specification="_JuDn0oB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (!getView().getPlayer().equals(this.getCurrentPlayer())) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle(&quot;Not your turn!&quot;);
        alert.setContentText(&quot;You cannot place a dice, if it's not your turn :)&quot;);
        alert.showAndWait();
    } else {
        getRealeState().process(&quot;6&quot;);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuEO4IB2EeiyN7Yq9bqbrA" name="onPlayerEndTurn" specification="_JuDn1IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (!getView().getPlayer().equals(this.getCurrentPlayer())) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle(&quot;Not your turn!&quot;);
        alert.setContentText(&quot;You cannot end your turn, if it's not yours :)&quot;);
        alert.showAndWait();
    } else {
        getRealeState().process(&quot;8&quot;);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuEO4oB2EeiyN7Yq9bqbrA" name="onPlayerUseToolCard" specification="_JuEO4YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (!getView().getPlayer().equals(this.getCurrentPlayer())) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle(&quot;Not your turn!&quot;);
        alert.setContentText(&quot;You cannot use a toolcard, if it's not yours :)&quot;);
        alert.showAndWait();
    } else {
        getRealeState().process(&quot;7&quot;);
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jt4osoB2EeiyN7Yq9bqbrA" name="GUIGameTable" visibility="public" method="_Jt6d4IB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jt520YB2EeiyN7Yq9bqbrA" name="view" type="_JUUSIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jt6d4YB2EeiyN7Yq9bqbrA" name="renderDiceHolder" visibility="protected" method="_Jt6d4oB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jt6d44B2EeiyN7Yq9bqbrA" name="renderLogEvent" visibility="protected" method="_Jt6d5IB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jt6d5YB2EeiyN7Yq9bqbrA" name="renderDraftBoard" visibility="protected" method="_Jt7E8IB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jt7E8YB2EeiyN7Yq9bqbrA" name="renderPlayer" visibility="protected" method="_Jt7E84B2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jt7E8oB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jt7sAIB2EeiyN7Yq9bqbrA" name="renderSchema" visibility="protected" method="_Jt8TEIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jt7sAYB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jt8TEYB2EeiyN7Yq9bqbrA" name="renderToolcard" visibility="protected" method="_Jt86IYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jt86IIB2EeiyN7Yq9bqbrA" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jt9hMIB2EeiyN7Yq9bqbrA" name="renderPublicObjective" visibility="protected" method="_Jt-IQIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jt9hMYB2EeiyN7Yq9bqbrA" name="index">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jt-vUIB2EeiyN7Yq9bqbrA" name="renderTurn" visibility="protected" method="_Jt-vUYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jt_WYIB2EeiyN7Yq9bqbrA" name="setActive" visibility="public" method="_Jt_WYYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jt_9cIB2EeiyN7Yq9bqbrA" name="getWindow" visibility="public" method="_JuByoYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JuByoIB2EeiyN7Yq9bqbrA" type="_JuAkgIB2EeiyN7Yq9bqbrA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuCZsIB2EeiyN7Yq9bqbrA" name="setInactive" visibility="public" method="_JuCZsYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuCZsoB2EeiyN7Yq9bqbrA" name="renderTimeOut" visibility="public" method="_JuCZs4B2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuDAwIB2EeiyN7Yq9bqbrA" name="handleGameStart" visibility="public" method="_JuDAwoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JuDAwYB2EeiyN7Yq9bqbrA" name="gameStartEvent" type="_IwTmIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuDAw4B2EeiyN7Yq9bqbrA" name="handle" visibility="public" method="_JuDn0YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JuDn0IB2EeiyN7Yq9bqbrA" name="event" type="_Jn1EAIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuDn0oB2EeiyN7Yq9bqbrA" name="onPlayerPlaceDice" visibility="public" method="_JuDn04B2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuDn1IB2EeiyN7Yq9bqbrA" name="onPlayerEndTurn" visibility="public" method="_JuEO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuEO4YB2EeiyN7Yq9bqbrA" name="onPlayerUseToolCard" visibility="public" method="_JuEO4oB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jtws5IB2EeiyN7Yq9bqbrA" name="ToolCard" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JuV7sIB2EeiyN7Yq9bqbrA" general="_JkussYB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JuV7sYB2EeiyN7Yq9bqbrA" name="toolcard" visibility="private" type="_Jkwh4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JuWiwIB2EeiyN7Yq9bqbrA" name="token" visibility="private" type="_JlBnoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuYX8IB2EeiyN7Yq9bqbrA" name="ToolCard" specification="_JuXJ0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    FXMLLoader fxmlLoader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/ToolCard.fxml&quot;));
    fxmlLoader.setRoot(this);
    fxmlLoader.setController(this);
    try {
        fxmlLoader.load();
    } catch (IOException exception) {
        throw new RuntimeException(exception);
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuYX84B2EeiyN7Yq9bqbrA" name="setToolCard" specification="_JuYX8YB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (toolCardImmutable == null) {
        toolcard.setImage(new Image(&quot;gui/toolcards/back.png&quot;));
        token.setText(&quot;&quot; + 0);
        return;
    }
    toolcard.setImage(new Image(&quot;gui/toolcards/&quot; + toolCardImmutable.getName() + &quot;.png&quot;));
    token.setText(Integer.toString(toolCardImmutable.getToken()));
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuXJ0IB2EeiyN7Yq9bqbrA" name="ToolCard" visibility="public" method="_JuYX8IB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuYX8YB2EeiyN7Yq9bqbrA" name="setToolCard" visibility="public" method="_JuYX84B2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JuYX8oB2EeiyN7Yq9bqbrA" name="toolCardImmutable" type="_I0bRIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JuE18IB2EeiyN7Yq9bqbrA" name="GUIUseToolState" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JuFdAIB2EeiyN7Yq9bqbrA" general="_Jdbx4IB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JuGEEIB2EeiyN7Yq9bqbrA" name="root" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JuGrIIB2EeiyN7Yq9bqbrA" name="toolBox" visibility="private" type="_JnVUwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JuHSMIB2EeiyN7Yq9bqbrA" name="toolCards" visibility="private" type="_Jtws5IB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JuHSMYB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JuHSMoB2EeiyN7Yq9bqbrA" value="*"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JuH5QIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new ToolCard[Settings.TOOLCARDS_N]</body>
                    </defaultValue>
                  </ownedAttribute>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JuFdAYB2EeiyN7Yq9bqbrA" name="GUIUseToolState implements EventHandler" client="_JuE18IB2EeiyN7Yq9bqbrA" supplier="_Jng68oB2EeiyN7Yq9bqbrA" contract="_Jng68oB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuJucYB2EeiyN7Yq9bqbrA" name="GUIUseToolState" specification="_JuH5QYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuK8kYB2EeiyN7Yq9bqbrA" name="process" specification="_JuKVgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuLjoYB2EeiyN7Yq9bqbrA" name="unrealize" specification="_JuLjoIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root != null) {
        Platform.runLater(() -> {
            Stage stage = (Stage) root.getScene().getWindow();
            stage.close();
            root = null;
        });
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuMKsYB2EeiyN7Yq9bqbrA" name="render" specification="_JuMKsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root == null) {
        buildInterface();
    }
    Platform.runLater(() -> {
        for (int i = 0; i &lt; Settings.TOOLCARDS_N; i++) {
            toolCards[i].setToolCard(getGameTable().getToolCardImmutable(i));
        }
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuMxwYB2EeiyN7Yq9bqbrA" name="buildInterface" specification="_JuMxwIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    FXMLLoader loader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/ChooseToolcard.fxml&quot;));
    try {
        root = loader.load();
    } catch (IOException e) {
        e.printStackTrace();
    }
    Platform.runLater(() -> {
        Stage secondStage = new Stage();
        secondStage.setResizable(false);
        Scene scene = new Scene(root);
        secondStage.setScene(scene);
        secondStage.setOnCloseRequest(( windowEvent) -> processCancel());
        secondStage.show();
        toolBox = (HBox) scene.lookup(&quot;#toolBox&quot;);
        for (int i = 0; i &lt; Settings.TOOLCARDS_N; i++) {
            toolCards[i] = new ToolCard();
            toolBox.getChildren().add(toolCards[i]);
            toolCards[i].addEventHandler(MouseEvent.MOUSE_CLICKED, this);
        }
        root.setStyle(&quot;-fx-background-image: url('/gui/background.jpg');\n&quot; + &quot;    -fx-background-repeat: repeat;&quot;);
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuNY0YB2EeiyN7Yq9bqbrA" name="handle" specification="_JuMxwoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    int index = -1;
    for (int i = 0; i &lt; Settings.TOOLCARDS_N; i++) {
        if (event.getSource() == toolCards[i]) {
            index = i;
        }
    }
    try {
        processUseToolCard(index);
    } catch (InputError ie) {
        GUIUtils.showError(ie.getMessage());
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuH5QYB2EeiyN7Yq9bqbrA" name="GUIUseToolState" visibility="public" method="_JuJucYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JuJucIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuKVgIB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_JuK8kYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JuK8kIB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuLjoIB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_JuLjoYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuMKsIB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_JuMKsYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuMxwIB2EeiyN7Yq9bqbrA" name="buildInterface" visibility="private" method="_JuMxwYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuMxwoB2EeiyN7Yq9bqbrA" name="handle" visibility="public" method="_JuNY0YB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JuNY0IB2EeiyN7Yq9bqbrA" name="event" type="_JoWocIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JuOm8IB2EeiyN7Yq9bqbrA" name="GUILeaderBoard" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JuOm8YB2EeiyN7Yq9bqbrA" general="_IvDB4oB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JuPOAIB2EeiyN7Yq9bqbrA" name="root" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JuPOAYB2EeiyN7Yq9bqbrA" name="leaderboard" visibility="private" type="_JnVUwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JuPOAoB2EeiyN7Yq9bqbrA" name="players" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JuPOA4B2EeiyN7Yq9bqbrA" name="scores" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JuP1EIB2EeiyN7Yq9bqbrA" name="scoreHolders" visibility="private" type="_IvYZEIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JuP1EYB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JuP1EoB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuRqQYB2EeiyN7Yq9bqbrA" name="GUILeaderBoard" specification="_JuP1E4B2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(view);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuSRUYB2EeiyN7Yq9bqbrA" name="render" specification="_JuSRUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    FXMLLoader loader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/LeaderBoard.fxml&quot;));
    try {
        root = loader.load();
    } catch (IOException e) {
        e.printStackTrace();
    }
    Platform.runLater(() -> {
        Stage secondStage = new Stage();
        secondStage.setResizable(false);
        Scene scene = new Scene(root);
        secondStage.setScene(scene);
        secondStage.show();
        leaderboard = (HBox) scene.lookup(&quot;#leaderboard&quot;);
        players = (VBox) scene.lookup(&quot;#players&quot;);
        scores = (VBox) scene.lookup(&quot;#scores&quot;);
        for (ScoreHolder sh : scoreHolders) {
            Label player = new Label();
            Label score = new Label();
            player.setText(&quot;&quot; + sh.getPlayerName());
            score.setText(&quot;&quot; + sh.getTotalScore());
            player.setFont(new Font(16));
            score.setFont(new Font(16));
            players.getChildren().add(player);
            scores.getChildren().add(score);
        }
        root.setStyle(&quot;-fx-background-image: url('/gui/fireworks.gif');\n&quot; + &quot;    -fx-background-repeat: no-repeat;&quot;);
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuTfcYB2EeiyN7Yq9bqbrA" name="handleEndGameEvent" specification="_JuS4YIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    this.scoreHolders = event.getLeaderBoard();
    this.getView().activateGameEnding();
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuUGgYB2EeiyN7Yq9bqbrA" name="setActive" specification="_JuUGgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root == null) {
        render();
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JuUtkYB2EeiyN7Yq9bqbrA" name="setInactive" specification="_JuUtkIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root != null) {
        Platform.runLater(() -> {
            Stage stage = (Stage) root.getScene().getWindow();
            stage.close();
            root = null;
        });
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuP1E4B2EeiyN7Yq9bqbrA" name="GUILeaderBoard" visibility="public" method="_JuRqQYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JuRqQIB2EeiyN7Yq9bqbrA" name="view" type="_JUUSIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuSRUIB2EeiyN7Yq9bqbrA" name="render" visibility="private" method="_JuSRUYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuS4YIB2EeiyN7Yq9bqbrA" name="handleEndGameEvent" visibility="public" method="_JuTfcYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JuTfcIB2EeiyN7Yq9bqbrA" name="event" type="_IvXyAIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuUGgIB2EeiyN7Yq9bqbrA" name="setActive" visibility="public" method="_JuUGgYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JuUtkIB2EeiyN7Yq9bqbrA" name="setInactive" visibility="public" method="_JuUtkYB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_Jw6ukIB2EeiyN7Yq9bqbrA" name="GUIChooseColorFromDiceHolder" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_Jw6ukYB2EeiyN7Yq9bqbrA" general="_Jc18AIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jw7VoIB2EeiyN7Yq9bqbrA" name="root" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jw7VoYB2EeiyN7Yq9bqbrA" name="chooseColor" visibility="private" type="_JnVUwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_Jw7VooB2EeiyN7Yq9bqbrA" name="buttons" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Jw78sIB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Jw78sYB2EeiyN7Yq9bqbrA" value="*"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_Jw78soB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new Button[GameColor.values().length]</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxO3oIB2EeiyN7Yq9bqbrA" name="GUIChooseColorFromDiceHolder" specification="_Jw78s4B2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(gameTable, toolName);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxO3o4B2EeiyN7Yq9bqbrA" name="process" specification="_JxO3oYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxPesYB2EeiyN7Yq9bqbrA" name="unrealize" specification="_JxPesIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root != null) {
        Platform.runLater(() -> {
            Stage stage = (Stage) root.getScene().getWindow();
            stage.close();
            root = null;
        });
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxPes4B2EeiyN7Yq9bqbrA" name="render" specification="_JxPesoB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root == null) {
        buildInterface();
    }
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxPetYB2EeiyN7Yq9bqbrA" name="buildInterface" specification="_JxPetIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    FXMLLoader loader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/ChooseColorFromDiceHolder.fxml&quot;));
    try {
        root = loader.load();
    } catch (IOException e) {
        e.printStackTrace();
    }
    Platform.runLater(() -> {
        Stage secondStage = new Stage();
        secondStage.setResizable(false);
        Scene scene = new Scene(root);
        secondStage.setScene(scene);
        secondStage.setOnCloseRequest(( windowEvent) -> processCancel());
        secondStage.show();
        chooseColor = (HBox) scene.lookup(&quot;#chooseColor&quot;);
        for (int i = 0; i &lt; GameColor.values().length; i++) {
            buttons[i] = new Button();
            buttons[i].setText(GameColor.values()[i].toString());
            chooseColor.getChildren().add(buttons[i]);
            final int index = i;
            buttons[i].setOnAction(( ev) -> {
                try {
                    processColorSelected(GameColor.values()[index]);
                } catch (InputError ie) {
                    GUIUtils.showError(ie.getMessage());
                }
            });
        }
        root.setStyle(&quot;-fx-background-image: url('/gui/background.jpg');\n&quot; + &quot;    -fx-background-repeat: repeat;&quot;);
    });
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jw78s4B2EeiyN7Yq9bqbrA" name="GUIChooseColorFromDiceHolder" visibility="public" method="_JxO3oIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxOQkIB2EeiyN7Yq9bqbrA" name="gameTable" type="_IvCa0YB2EeiyN7Yq9bqbrA"/>
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxOQkYB2EeiyN7Yq9bqbrA" name="toolName" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxO3oYB2EeiyN7Yq9bqbrA" name="process" visibility="public" method="_JxO3o4B2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxO3ooB2EeiyN7Yq9bqbrA" name="input" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxPesIB2EeiyN7Yq9bqbrA" name="unrealize" visibility="public" method="_JxPesYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxPesoB2EeiyN7Yq9bqbrA" name="render" visibility="public" method="_JxPes4B2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxPetIB2EeiyN7Yq9bqbrA" name="buildInterface" visibility="private" method="_JxPetYB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_JxRT4IB2EeiyN7Yq9bqbrA" name="GUISelectSchemaCardFace" visibility="public">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JxR68IB2EeiyN7Yq9bqbrA" general="_IvFeIIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxSiAIB2EeiyN7Yq9bqbrA" name="root" visibility="private" type="_Jtu3sYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxTJEIB2EeiyN7Yq9bqbrA" name="logsPanel" visibility="private" type="_JtzwMIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxUXMYB2EeiyN7Yq9bqbrA" name="resources" visibility="private" type="_JxTJEYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxWMYIB2EeiyN7Yq9bqbrA" name="location" visibility="private" type="_JxU-QIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxWzcIB2EeiyN7Yq9bqbrA" name="buttonSchema1" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxXagIB2EeiyN7Yq9bqbrA" name="buttonSchema2" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxXagYB2EeiyN7Yq9bqbrA" name="box3" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxYBkIB2EeiyN7Yq9bqbrA" name="playerPrivateObjectiveBox" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxYooIB2EeiyN7Yq9bqbrA" name="box4" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxYooYB2EeiyN7Yq9bqbrA" name="box1" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxZPsIB2EeiyN7Yq9bqbrA" name="box2" visibility="private" type="_JnS4gYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxZPsYB2EeiyN7Yq9bqbrA" name="buttonSchema3" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxZPsoB2EeiyN7Yq9bqbrA" name="buttonSchema4" visibility="private" type="_JnWi4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxZ2wIB2EeiyN7Yq9bqbrA" name="remainingSeconds" visibility="private" type="_JlBnoIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxZ2wYB2EeiyN7Yq9bqbrA" name="schemaPanel1" visibility="private" type="_Jk4dsIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxZ2woB2EeiyN7Yq9bqbrA" name="schemaPanel2" visibility="private" type="_Jk4dsIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxZ2w4B2EeiyN7Yq9bqbrA" name="schemaPanel3" visibility="private" type="_Jk4dsIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxZ2xIB2EeiyN7Yq9bqbrA" name="schemaPanel4" visibility="private" type="_Jk4dsIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JxZ2xYB2EeiyN7Yq9bqbrA" name="objectiveView" visibility="private" type="_Jn8_0IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                  <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JxR68YB2EeiyN7Yq9bqbrA" name="GUISelectSchemaCardFace implements EventHandler" client="_JxRT4IB2EeiyN7Yq9bqbrA" supplier="_Jng68oB2EeiyN7Yq9bqbrA" contract="_Jng68oB2EeiyN7Yq9bqbrA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxcTAIB2EeiyN7Yq9bqbrA" name="GUISelectSchemaCardFace" specification="_Jxad0IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    super(view);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Jxc6EoB2EeiyN7Yq9bqbrA" name="showSchemaCardFaceSelection" specification="_Jxc6EIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Platform.runLater(() -> {
        schemaPanel1.updateSchema(new Schema(event.getSchemas()[0].getFace(Side.FRONT)));
        schemaPanel2.updateSchema(new Schema(event.getSchemas()[0].getFace(Side.BACK)));
        schemaPanel3.updateSchema(new Schema(event.getSchemas()[1].getFace(Side.FRONT)));
        schemaPanel4.updateSchema(new Schema(event.getSchemas()[1].getFace(Side.BACK)));
        buttonSchema1.setText(&quot;Select &quot; + event.getSchemas()[0].getFace(Side.FRONT).getName());
        buttonSchema2.setText(&quot;Select &quot; + event.getSchemas()[0].getFace(Side.BACK).getName());
        buttonSchema3.setText(&quot;Select &quot; + event.getSchemas()[1].getFace(Side.FRONT).getName());
        buttonSchema4.setText(&quot;Select &quot; + event.getSchemas()[1].getFace(Side.BACK).getName());
        buttonSchema1.setDisable(false);
        buttonSchema2.setDisable(false);
        buttonSchema3.setDisable(false);
        buttonSchema4.setDisable(false);
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxdhIYB2EeiyN7Yq9bqbrA" name="setActive" specification="_JxdhIIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    FXMLLoader loader = new FXMLLoader(getClass().getClassLoader().getResource(&quot;gui/SelectSchemaCardFace.fxml&quot;));
    try {
        root = loader.load();
    } catch (IOException e) {
        e.printStackTrace();
    }
    Platform.runLater(() -> {
        Stage secondStage = new Stage();
        secondStage.setResizable(false);
        Scene scene = new Scene(root);
        secondStage.setScene(scene);
        secondStage.show();
        buttonSchema1 = (Button) scene.lookup(&quot;#buttonSchema1&quot;);
        buttonSchema2 = (Button) scene.lookup(&quot;#buttonSchema2&quot;);
        buttonSchema3 = (Button) scene.lookup(&quot;#buttonSchema3&quot;);
        buttonSchema4 = (Button) scene.lookup(&quot;#buttonSchema4&quot;);
        box1 = (VBox) scene.lookup(&quot;#box1&quot;);
        box2 = (VBox) scene.lookup(&quot;#box2&quot;);
        box3 = (VBox) scene.lookup(&quot;#box3&quot;);
        box4 = (VBox) scene.lookup(&quot;#box4&quot;);
        playerPrivateObjectiveBox = (VBox) scene.lookup(&quot;#playerPrivateObjective&quot;);
        remainingSeconds = (Label) scene.lookup(&quot;#remainingSeconds&quot;);
        buttonSchema1.setText(&quot;Wait...&quot;);
        buttonSchema2.setText(&quot;Wait...&quot;);
        buttonSchema3.setText(&quot;Wait...&quot;);
        buttonSchema4.setText(&quot;Wait...&quot;);
        buttonSchema1.setDisable(true);
        buttonSchema2.setDisable(true);
        buttonSchema3.setDisable(true);
        buttonSchema4.setDisable(true);
        schemaPanel1 = new SchemaPanel(null);
        schemaPanel2 = new SchemaPanel(null);
        schemaPanel3 = new SchemaPanel(null);
        schemaPanel4 = new SchemaPanel(null);
        objectiveView = new ObjectiveView();
        VBox.setVgrow(schemaPanel1, Priority.ALWAYS);
        VBox.setVgrow(schemaPanel2, Priority.ALWAYS);
        VBox.setVgrow(schemaPanel3, Priority.ALWAYS);
        VBox.setVgrow(schemaPanel4, Priority.ALWAYS);
        VBox.setVgrow(objectiveView, Priority.ALWAYS);
        box1.getChildren().add(schemaPanel1);
        box2.getChildren().add(schemaPanel2);
        box3.getChildren().add(schemaPanel3);
        box4.getChildren().add(schemaPanel4);
        playerPrivateObjectiveBox.getChildren().add(objectiveView);
        buttonSchema1.setOnAction(GUISelectSchemaCardFace.this);
        buttonSchema2.setOnAction(GUISelectSchemaCardFace.this);
        buttonSchema3.setOnAction(GUISelectSchemaCardFace.this);
        buttonSchema4.setOnAction(GUISelectSchemaCardFace.this);
        logsPanel = (ScrollPane) scene.lookup(&quot;#logs&quot;);
        remainingSeconds.setText(&quot;Waiting for game to start...&quot;);
        renderEventLog();
        root.setStyle(&quot;-fx-background-image: url('/gui/background.jpg');\n&quot; + &quot;    -fx-background-repeat: repeat;&quot;);
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxevQIB2EeiyN7Yq9bqbrA" name="setInactive" specification="_JxeIMIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root == null)
        return;
    Platform.runLater(() -> {
        Stage stage = (Stage) root.getScene().getWindow();
        stage.close();
    });
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxfWUoB2EeiyN7Yq9bqbrA" name="renderPrivateObjective" specification="_JxfWUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root == null)
        return;
    Platform.runLater(() -> objectiveView.setObjective(privateObjective));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxgkcYB2EeiyN7Yq9bqbrA" name="handle" specification="_Jxf9YIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (event.getSource().equals(buttonSchema1)) {
        selectFace(0, Side.FRONT);
    } else if (event.getSource().equals(buttonSchema2)) {
        selectFace(0, Side.BACK);
    } else if (event.getSource().equals(buttonSchema3)) {
        selectFace(1, Side.FRONT);
    } else if (event.getSource().equals(buttonSchema4)) {
        selectFace(1, Side.BACK);
    }
    buttonSchema1.setDisable(true);
    buttonSchema2.setDisable(true);
    buttonSchema3.setDisable(true);
    buttonSchema4.setDisable(true);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxhLgYB2EeiyN7Yq9bqbrA" name="renderSecondsRemaining" specification="_JxhLgIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    if (root == null)
        return;
    Platform.runLater(() -> remainingSeconds.setText(&quot;Remaining seconds: &quot; + getSecondsRemaining()));
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JxhykYB2EeiyN7Yq9bqbrA" name="renderEventLog" specification="_JxhykIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    ArrayList&lt;LogEvent> pastEvents = getPastEvents();
    Platform.runLater(() -> {
        VBox events = new VBox();
        if (pastEvents.isEmpty()) {
            events.getChildren().add(new Label(&quot;No recent events.&quot;));
            logsPanel.setContent(events);
            return;
        } else {
            for (int i = 0; i &lt; pastEvents.size(); i++) {
                events.getChildren().add(new Label(pastEvents.get(i).getMessage()));
            }
            logsPanel.setContent(events);
        }
    });
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jxad0IB2EeiyN7Yq9bqbrA" name="GUISelectSchemaCardFace" visibility="public" method="_JxcTAIB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jxbr8YB2EeiyN7Yq9bqbrA" name="view" type="_JUUSIIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jxc6EIB2EeiyN7Yq9bqbrA" name="showSchemaCardFaceSelection" visibility="public" method="_Jxc6EoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_Jxc6EYB2EeiyN7Yq9bqbrA" name="event" type="_Iu0YYIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxdhIIB2EeiyN7Yq9bqbrA" name="setActive" visibility="public" method="_JxdhIYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxeIMIB2EeiyN7Yq9bqbrA" name="setInactive" visibility="public" method="_JxevQIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxfWUIB2EeiyN7Yq9bqbrA" name="renderPrivateObjective" visibility="public" method="_JxfWUoB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxfWUYB2EeiyN7Yq9bqbrA" name="privateObjective" type="_Izy_AYB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_Jxf9YIB2EeiyN7Yq9bqbrA" name="handle" visibility="public" method="_JxgkcYB2EeiyN7Yq9bqbrA">
                    <ownedParameter xmi:type="uml:Parameter" xmi:id="_JxgkcIB2EeiyN7Yq9bqbrA" name="event" type="_Jn1EAIB2EeiyN7Yq9bqbrA"/>
                  </ownedOperation>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxhLgIB2EeiyN7Yq9bqbrA" name="renderSecondsRemaining" visibility="protected" method="_JxhLgYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JxhykIB2EeiyN7Yq9bqbrA" name="renderEventLog" visibility="public" method="_JxhykYB2EeiyN7Yq9bqbrA"/>
                </packagedElement>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_IufBMIB2EeiyN7Yq9bqbrA" name="network">
              <packagedElement xmi:type="uml:Class" xmi:id="_IufBMYB2EeiyN7Yq9bqbrA" name="LocalProxy" visibility="public" isAbstract="true">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JObskIB2EeiyN7Yq9bqbrA" name="view" visibility="private" type="_JObFgIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOdhwYB2EeiyN7Yq9bqbrA" name="dispatchEventToVirtualView" specification="_JOc6sYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (event.getPlayerName().equals(view.getPlayer())) {
        view.dispatchProxyEvent(event);
    } else {
        Log.w(&quot;Listener for player &quot; + view.getPlayer() + &quot; received an event for &quot; + event.getPlayerName() + &quot;, so strange, this motherfather il trying to hack the game...&quot;);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOev4YB2EeiyN7Yq9bqbrA" name="getView" specification="_JOeI0IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return view;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOf-AYB2EeiyN7Yq9bqbrA" name="setView" specification="_JOfW8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.view = view;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOcToIB2EeiyN7Yq9bqbrA" name="sendEventToClient" visibility="public" isAbstract="true">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JOc6sIB2EeiyN7Yq9bqbrA" name="event" type="_IvMy4YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOc6sYB2EeiyN7Yq9bqbrA" name="dispatchEventToVirtualView" visibility="public" method="_JOdhwYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JOdhwIB2EeiyN7Yq9bqbrA" name="event" type="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOeI0IB2EeiyN7Yq9bqbrA" name="getView" visibility="public" method="_JOev4YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JOev4IB2EeiyN7Yq9bqbrA" type="_JObFgIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOfW8IB2EeiyN7Yq9bqbrA" name="setView" visibility="public" method="_JOf-AYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JOf-AIB2EeiyN7Yq9bqbrA" name="view" type="_JObFgIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JIDXwIB2EeiyN7Yq9bqbrA" name="LocalProxySocket" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_JID-0IB2EeiyN7Yq9bqbrA" general="_IufBMYB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JIGbEIB2EeiyN7Yq9bqbrA" name="remoteConnection" visibility="private" type="_JIEl4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JII3UIB2EeiyN7Yq9bqbrA" name="objectInputStream" visibility="private" type="_JIHCIIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JIKsgIB2EeiyN7Yq9bqbrA" name="objectOutputStream" visibility="private" type="_JIJeYIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JILTkYB2EeiyN7Yq9bqbrA" name="listenerThread" visibility="private" type="_JILTkIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JIOW4IB2EeiyN7Yq9bqbrA" name="LocalProxySocket" specification="_JIL6oIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.remoteConnection = remoteConnection;
    // In this specific order or it does not work!
    objectOutputStream = new ObjectOutputStream(remoteConnection.getOutputStream());
    objectInputStream = new ObjectInputStream(remoteConnection.getInputStream());
    listenerThread = new ListenerThread();
    listenerThread.start();
/*while (true){
            sendEventToClient(new TurnChangedEvent(&quot;LOCAL&quot;, &quot;LOCALPLAYER&quot;, 0));
            try {
                Thread.sleep(2000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }*/
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JIRaMYB2EeiyN7Yq9bqbrA" name="sendEventToClient" specification="_JIO98IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    //check if this event is for me
    if (// Message is for me.
    event.getReceiver().equals(getView().getPlayer()) || // Message is for everyone.
    event.getReceiver().equals(&quot;&quot;)) {
        try {
            objectOutputStream.writeObject(event);
            objectOutputStream.flush();
        } catch (IOException e) {
            Log.d(e.getMessage());
            this.getView().disconnect();
            Log.e(&quot;Unable to send an event to the client, client disconnected!&quot;);
        }
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JIVEkYB2EeiyN7Yq9bqbrA" name="closeConnection" specification="_JIVEkIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    listenerThread.kill();
    try {
        objectOutputStream.close();
        remoteConnection.close();
    } catch (IOException e) {
        Log.e(&quot;Error during stram closing: &quot; + e.getMessage());
    }
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JIL6oIB2EeiyN7Yq9bqbrA" name="LocalProxySocket" visibility="public" method="_JIOW4IB2EeiyN7Yq9bqbrA" raisedException="_ItQSIIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JINv0IB2EeiyN7Yq9bqbrA" name="remoteConnection" type="_JIEl4YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JIO98IB2EeiyN7Yq9bqbrA" name="sendEventToClient" visibility="public" method="_JIRaMYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JIRaMIB2EeiyN7Yq9bqbrA" name="event" type="_IvMy4YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JIVEkIB2EeiyN7Yq9bqbrA" name="closeConnection" visibility="public" method="_JIVEkYB2EeiyN7Yq9bqbrA"/>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_JILTkIB2EeiyN7Yq9bqbrA" name="ListenerThread">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JISoUIB2EeiyN7Yq9bqbrA" general="_It_5AIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JISoUYB2EeiyN7Yq9bqbrA" name="goAhead" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JITPYIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>true</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JIT2cIB2EeiyN7Yq9bqbrA" name="run" specification="_JITPYYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(&quot;Listener thread started for &quot; + LocalProxySocket.this.remoteConnection.getInetAddress());
    ViewEvent event;
    try {
        while (goAhead &amp;&amp; !LocalProxySocket.this.remoteConnection.isClosed()) {
            try {
                event = (ViewEvent) objectInputStream.readObject();
                Log.d(&quot;Received &quot; + event);
                LocalProxySocket.this.dispatchEventToVirtualView(event);
            } catch (ClassNotFoundExceptionClassCastException |  e) {
                Log.e(&quot;Invalid event received: &quot; + e.getMessage());
            }
        }
    } catch (IOException e) {
        Log.d(&quot;ListenerThread: IOException: &quot; + e.getMessage());
    }
    Log.d(&quot;Client disconnected!&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JIUdgIB2EeiyN7Yq9bqbrA" name="kill" specification="_JIT2cYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    goAhead = false;
    try {
        objectInputStream.close();
    } catch (IOException e) {
        Log.e(&quot;Error during stram closing: &quot; + e.getMessage());
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JITPYYB2EeiyN7Yq9bqbrA" name="run" visibility="public" method="_JIT2cIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JIT2cYB2EeiyN7Yq9bqbrA" name="kill" visibility="private" method="_JIUdgIB2EeiyN7Yq9bqbrA"/>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_JIVroIB2EeiyN7Yq9bqbrA" name="ServerInterface" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_JIYH4IB2EeiyN7Yq9bqbrA" general="_JIWSsIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JIYu8IB2EeiyN7Yq9bqbrA" name="connectRMIClient" visibility="public" raisedException="_ItBBkIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JIYu8YB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JIZWAIB2EeiyN7Yq9bqbrA" name="remoteProxyRMI" type="_JLJIAIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JIZ9EIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_JLJIAIB2EeiyN7Yq9bqbrA" name="RemoteProxyRMIInterface" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_JLJvEIB2EeiyN7Yq9bqbrA" general="_JIWSsIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JLKWIIB2EeiyN7Yq9bqbrA" name="sendEventToClient" visibility="public" raisedException="_ItBBkIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JLKWIYB2EeiyN7Yq9bqbrA" name="event" type="_IvMy4YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JLLkQIB2EeiyN7Yq9bqbrA" name="setServer" visibility="public" raisedException="_ItBBkIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JLLkQYB2EeiyN7Yq9bqbrA" name="localProxyRMI" type="_JNZx0IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_JNZx0IB2EeiyN7Yq9bqbrA" name="LocalProxyRMIInterface" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_JNaY4IB2EeiyN7Yq9bqbrA" general="_JIWSsIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JNaY4YB2EeiyN7Yq9bqbrA" name="sendEventToServer" visibility="public" raisedException="_ItBBkIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JNa_8IB2EeiyN7Yq9bqbrA" name="event" type="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JLMyYIB2EeiyN7Yq9bqbrA" name="RemoteProxySocket" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_JLNZcYB2EeiyN7Yq9bqbrA" general="_JLNZcIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JLOAgIB2EeiyN7Yq9bqbrA" name="remoteConnection" visibility="private" type="_JIEl4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JLOnkIB2EeiyN7Yq9bqbrA" name="objectInputStream" visibility="private" type="_JIHCIIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JLPOoIB2EeiyN7Yq9bqbrA" name="objectOutputStream" visibility="private" type="_JIJeYIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JLRq4IB2EeiyN7Yq9bqbrA" name="listenerThread" visibility="private" type="_JLP1sYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JLUuMIB2EeiyN7Yq9bqbrA" name="RemoteProxySocket" specification="_JLSR8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.remoteConnection = remoteConnection;
    // In this specific order or it does not work!
    objectOutputStream = new ObjectOutputStream(remoteConnection.getOutputStream());
    objectInputStream = new ObjectInputStream(remoteConnection.getInputStream());
    listenerThread = new RemoteProxySocket.ListenerThread();
    listenerThread.start();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JLV8UIB2EeiyN7Yq9bqbrA" name="sendEventToServer" specification="_JLVVQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    try {
        objectOutputStream.writeObject(event);
    } catch (IOException e) {
        Log.e(&quot;Unable to send an event to the server!&quot;);
        System.exit(-1);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JLWjYYB2EeiyN7Yq9bqbrA" name="closeConnection" specification="_JLWjYIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    listenerThread.kill();
    try {
        objectOutputStream.close();
        remoteConnection.close();
    } catch (IOException e) {
        Log.e(&quot;Error during stram closing: &quot; + e.getMessage());
    }
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JLSR8IB2EeiyN7Yq9bqbrA" name="RemoteProxySocket" visibility="private" method="_JLUuMIB2EeiyN7Yq9bqbrA" raisedException="_ItQSIIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JLUHIIB2EeiyN7Yq9bqbrA" name="remoteConnection" type="_JIEl4YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JLVVQIB2EeiyN7Yq9bqbrA" name="sendEventToServer" visibility="private" method="_JLV8UIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JLVVQYB2EeiyN7Yq9bqbrA" name="event" type="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JLWjYIB2EeiyN7Yq9bqbrA" name="closeConnection" visibility="public" method="_JLWjYYB2EeiyN7Yq9bqbrA"/>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_JLXKcIB2EeiyN7Yq9bqbrA" name="ListenerThread">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JLXxgIB2EeiyN7Yq9bqbrA" general="_It_5AIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JLXxgYB2EeiyN7Yq9bqbrA" name="goAhead" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JLYYkIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>true</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JLY_oIB2EeiyN7Yq9bqbrA" name="run" specification="_JLYYkYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(&quot;Listener thread started for &quot; + RemoteProxySocket.this.remoteConnection.getInetAddress());
    Event event;
    try {
        while (goAhead &amp;&amp; !RemoteProxySocket.this.remoteConnection.isClosed()) {
            try {
                event = (Event) objectInputStream.readObject();
                /*Log.d(&quot;Received &quot; + event);*/
                RemoteProxySocket.this.dispatchEventToRemoteView(event);
            } catch (ClassNotFoundExceptionClassCastException |  e) {
                Log.e(&quot;Invalid event received: &quot; + e.getMessage());
                e.printStackTrace();
            }
        }
    } catch (IOException e) {
        Log.d(&quot;ListenerThread: IOException: &quot; + e.getMessage());
    }
    Log.d(&quot;Disconnected!&quot;);
    System.exit(-1);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JLZmsYB2EeiyN7Yq9bqbrA" name="kill" specification="_JLZmsIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    goAhead = false;
    try {
        objectInputStream.close();
    } catch (IOException e) {
        Log.e(&quot;Error during stram closing: &quot; + e.getMessage());
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JLYYkYB2EeiyN7Yq9bqbrA" name="run" visibility="public" method="_JLY_oIB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JLZmsIB2EeiyN7Yq9bqbrA" name="kill" visibility="private" method="_JLZmsYB2EeiyN7Yq9bqbrA"/>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JLNZcIB2EeiyN7Yq9bqbrA" name="RemoteProxy" visibility="public" isAbstract="true">
                <generalization xmi:type="uml:Generalization" xmi:id="_JOhMIIB2EeiyN7Yq9bqbrA" general="_I0kbEIB2EeiyN7Yq9bqbrA"/>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JOhzMYB2EeiyN7Yq9bqbrA" name="RemoteProxy implements Observer" client="_JLNZcIB2EeiyN7Yq9bqbrA" supplier="_JOhzMIB2EeiyN7Yq9bqbrA" contract="_JOhzMIB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOjBUIB2EeiyN7Yq9bqbrA" name="dispatchEventToRemoteView" specification="_JOiaQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    notify(event);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOk2gYB2EeiyN7Yq9bqbrA" name="update" specification="_JOkPcIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    sendEventToServer(message);
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOiaQIB2EeiyN7Yq9bqbrA" name="dispatchEventToRemoteView" visibility="protected" method="_JOjBUIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JOiaQYB2EeiyN7Yq9bqbrA" name="event" type="_IvMy4YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOjoYIB2EeiyN7Yq9bqbrA" name="sendEventToServer" visibility="private" isAbstract="true">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JOjoYYB2EeiyN7Yq9bqbrA" name="event" type="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOkPcIB2EeiyN7Yq9bqbrA" name="update" visibility="public" method="_JOk2gYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JOk2gIB2EeiyN7Yq9bqbrA" name="message" type="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JNbnAIB2EeiyN7Yq9bqbrA" name="RemoteProxyRMI" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_JNcOEIB2EeiyN7Yq9bqbrA" general="_JLNZcIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JNc1IIB2EeiyN7Yq9bqbrA" name="localProxyRMI" visibility="private" type="_JNZx0IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JNcOEYB2EeiyN7Yq9bqbrA" name="RemoteProxyRMI implements RemoteProxyRMIInterface" client="_JNbnAIB2EeiyN7Yq9bqbrA" supplier="_JLJIAIB2EeiyN7Yq9bqbrA" contract="_JLJIAIB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JNeDQIB2EeiyN7Yq9bqbrA" name="sendEventToServer" specification="_JNdcMIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    try {
        localProxyRMI.sendEventToServer(event);
    } catch (RemoteException e) {
        Log.e(&quot;Failed to send Event to server: &quot; + e.getMessage());
        System.exit(-1);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JNfRYIB2EeiyN7Yq9bqbrA" name="sendEventToClient" specification="_JNeqUIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    // This method is called from server side when an modelEvent occurs on the server.
    this.dispatchEventToRemoteView(event);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JNgfgYB2EeiyN7Yq9bqbrA" name="getServer" specification="_JNf4cIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return localProxyRMI;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JNhtoIB2EeiyN7Yq9bqbrA" name="setServer" specification="_JNhGkIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.localProxyRMI = localProxyRMI;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JNdcMIB2EeiyN7Yq9bqbrA" name="sendEventToServer" visibility="private" method="_JNeDQIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JNdcMYB2EeiyN7Yq9bqbrA" name="event" type="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JNeqUIB2EeiyN7Yq9bqbrA" name="sendEventToClient" visibility="public" method="_JNfRYIB2EeiyN7Yq9bqbrA" raisedException="_ItBBkIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JNeqUYB2EeiyN7Yq9bqbrA" name="event" type="_IvMy4YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JNf4cIB2EeiyN7Yq9bqbrA" name="getServer" visibility="public" method="_JNgfgYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JNgfgIB2EeiyN7Yq9bqbrA" type="_JNZx0IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JNhGkIB2EeiyN7Yq9bqbrA" name="setServer" visibility="public" method="_JNhtoIB2EeiyN7Yq9bqbrA" raisedException="_ItBBkIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JNhGkYB2EeiyN7Yq9bqbrA" name="localProxyRMI" type="_JNZx0IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JNi7wIB2EeiyN7Yq9bqbrA" name="RemoteProxySocketString" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_JNji0IB2EeiyN7Yq9bqbrA" general="_JLNZcIB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JNkJ4IB2EeiyN7Yq9bqbrA" name="remoteConnection" visibility="private" type="_JIEl4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JNl_EYB2EeiyN7Yq9bqbrA" name="objectInputStream" visibility="private" type="_JNkw8IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JNobUIB2EeiyN7Yq9bqbrA" name="objectOutputStream" visibility="private" type="_JNmmIIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JNq3kIB2EeiyN7Yq9bqbrA" name="listenerThread" visibility="private" type="_JNpCYYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JNvJAIB2EeiyN7Yq9bqbrA" name="RemoteProxySocketString" specification="_JNreoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.remoteConnection = remoteConnection;
    // In this specific order or it does not work!
    objectOutputStream = new OutputStreamWriter(new BufferedOutputStream(remoteConnection.getOutputStream()));
    objectInputStream = new InputStreamReader(new BufferedInputStream(remoteConnection.getInputStream()));
    listenerThread = new RemoteProxySocketString.ListenerThread();
    listenerThread.start();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JNwXIIB2EeiyN7Yq9bqbrA" name="sendEventToServer" specification="_JNvwEIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    try {
        objectOutputStream.write(event.toJSON().toString());
        objectOutputStream.write(Settings.SOCKET_EOM);
        objectOutputStream.flush();
    } catch (IOException e) {
        Log.e(&quot;Unable to send an event to the server!&quot;);
        System.exit(-1);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JNw-MYB2EeiyN7Yq9bqbrA" name="closeConnection" specification="_JNw-MIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    listenerThread.kill();
    try {
        objectOutputStream.close();
        remoteConnection.close();
    } catch (IOException e) {
        Log.e(&quot;Error during stram closing: &quot; + e.getMessage());
    }
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JNreoIB2EeiyN7Yq9bqbrA" name="RemoteProxySocketString" visibility="private" method="_JNvJAIB2EeiyN7Yq9bqbrA" raisedException="_JNtT0YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JNtT0IB2EeiyN7Yq9bqbrA" name="remoteConnection" type="_JIEl4YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JNvwEIB2EeiyN7Yq9bqbrA" name="sendEventToServer" visibility="private" method="_JNwXIIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JNvwEYB2EeiyN7Yq9bqbrA" name="event" type="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JNw-MIB2EeiyN7Yq9bqbrA" name="closeConnection" visibility="public" method="_JNw-MYB2EeiyN7Yq9bqbrA"/>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_JNxlQIB2EeiyN7Yq9bqbrA" name="ListenerThread">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JNyMUIB2EeiyN7Yq9bqbrA" general="_It_5AIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JNyMUYB2EeiyN7Yq9bqbrA" name="goAhead" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JNyzYIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>true</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JN0okYB2EeiyN7Yq9bqbrA" name="builder" visibility="private" type="_JNzacIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JN1PoIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new StringBuilder()</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JN12sIB2EeiyN7Yq9bqbrA" name="buffer" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JN2dwIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new char[256]</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JN3E0IB2EeiyN7Yq9bqbrA" name="run" specification="_JN2dwYB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(&quot;Listener thread started for &quot; + RemoteProxySocketString.this.remoteConnection.getInetAddress());
    Event event;
    try {
        while (goAhead &amp;&amp; !RemoteProxySocketString.this.remoteConnection.isClosed()) {
            try {
                int characterReaded = objectInputStream.read(buffer);
                builder.append(buffer, 0, characterReaded);
                while (builder.indexOf(Settings.SOCKET_EOM) != -1) {
                    String jsonMessage = builder.substring(0, builder.indexOf(Settings.SOCKET_EOM));
                    System.out.println(jsonMessage);
                    event = Event.decodeJSON(jsonMessage);
                    RemoteProxySocketString.this.dispatchEventToRemoteView(event);
                    builder.delete(0, builder.indexOf(Settings.SOCKET_EOM) + Settings.SOCKET_EOM.length());
                }
            } catch (ClassNotFoundExceptionClassCastException |  e) {
                Log.e(&quot;Invalid event received: &quot; + e.getMessage());
                e.printStackTrace();
            }
        }
    } catch (IOException e) {
        Log.d(&quot;ListenerThread: IOException: &quot; + e.getMessage());
    }
    Log.d(&quot;Disconnected!&quot;);
    System.exit(-1);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JN3r4YB2EeiyN7Yq9bqbrA" name="kill" specification="_JN3r4IB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    goAhead = false;
    try {
        objectInputStream.close();
    } catch (IOException e) {
        Log.e(&quot;Error during stram closing: &quot; + e.getMessage());
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JN2dwYB2EeiyN7Yq9bqbrA" name="run" visibility="public" method="_JN3E0IB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JN3r4IB2EeiyN7Yq9bqbrA" name="kill" visibility="private" method="_JN3r4YB2EeiyN7Yq9bqbrA"/>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JNkw8IB2EeiyN7Yq9bqbrA" name="InputStreamReader"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JNmmIIB2EeiyN7Yq9bqbrA" name="OutputStreamWriter"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JNtT0YB2EeiyN7Yq9bqbrA" name="IOException"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JNzacIB2EeiyN7Yq9bqbrA" name="StringBuilder"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JN5hEIB2EeiyN7Yq9bqbrA" name="LocalProxySocketString" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_JN5hEYB2EeiyN7Yq9bqbrA" general="_IufBMYB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JN6IIIB2EeiyN7Yq9bqbrA" name="remoteConnection" visibility="private" type="_JIEl4YB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JN6vMIB2EeiyN7Yq9bqbrA" name="objectInputStream" visibility="private" type="_JNkw8IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JN7WQIB2EeiyN7Yq9bqbrA" name="objectOutputStream" visibility="private" type="_JNmmIIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JN79UYB2EeiyN7Yq9bqbrA" name="listenerThread" visibility="private" type="_JN79UIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JN_AoIB2EeiyN7Yq9bqbrA" name="LocalProxySocketString" specification="_JN8kYIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.remoteConnection = remoteConnection;
    // In this specific order or it does not work!
    objectOutputStream = new OutputStreamWriter(new BufferedOutputStream(remoteConnection.getOutputStream()));
    objectInputStream = new InputStreamReader(new BufferedInputStream(remoteConnection.getInputStream()));
    listenerThread = new ListenerThread();
    listenerThread.start();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOBc4YB2EeiyN7Yq9bqbrA" name="sendEventToClient" specification="_JN_nsIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    //check if this event is for me
    if (// Message is for me.
    event.getReceiver().equals(getView().getPlayer()) || // Message is for everyone.
    event.getReceiver().equals(&quot;&quot;)) {
        try {
            objectOutputStream.write(event.toJSON().toString());
            objectOutputStream.write(Settings.SOCKET_EOM);
            objectOutputStream.flush();
        } catch (IOException e) {
            Log.d(e.getMessage());
            this.getView().disconnect();
            Log.e(&quot;Unable to send an event to the client, client disconnected!&quot;);
        }
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOHjgYB2EeiyN7Yq9bqbrA" name="closeConnection" specification="_JOHjgIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    listenerThread.kill();
    try {
        objectOutputStream.close();
        remoteConnection.close();
    } catch (IOException e) {
        Log.e(&quot;Error during stram closing: &quot; + e.getMessage());
    }
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JN8kYIB2EeiyN7Yq9bqbrA" name="LocalProxySocketString" visibility="public" method="_JN_AoIB2EeiyN7Yq9bqbrA" raisedException="_JNtT0YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JN-ZkIB2EeiyN7Yq9bqbrA" name="remoteConnection" type="_JIEl4YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JN_nsIB2EeiyN7Yq9bqbrA" name="sendEventToClient" visibility="public" method="_JOBc4YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JOBc4IB2EeiyN7Yq9bqbrA" name="event" type="_IvMy4YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOHjgIB2EeiyN7Yq9bqbrA" name="closeConnection" visibility="public" method="_JOHjgYB2EeiyN7Yq9bqbrA"/>
                <nestedClassifier xmi:type="uml:Class" xmi:id="_JN79UIB2EeiyN7Yq9bqbrA" name="ListenerThread">
                  <generalization xmi:type="uml:Generalization" xmi:id="_JOCrAIB2EeiyN7Yq9bqbrA" general="_It_5AIB2EeiyN7Yq9bqbrA"/>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JOCrAYB2EeiyN7Yq9bqbrA" name="goAhead" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JODSEIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>true</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JOD5IIB2EeiyN7Yq9bqbrA" name="builder" visibility="private" type="_JNzacIB2EeiyN7Yq9bqbrA" isUnique="false">
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JOEgMIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new StringBuilder()</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedAttribute xmi:type="uml:Property" xmi:id="_JOEgMYB2EeiyN7Yq9bqbrA" name="buffer" visibility="private" isUnique="false">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
                    <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JOFHQIB2EeiyN7Yq9bqbrA" name="defaultValue">
                      <language>JAVA</language>
                      <body>new char[256]</body>
                    </defaultValue>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOFuUYB2EeiyN7Yq9bqbrA" name="run" specification="_JOFuUIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    Log.d(&quot;Listener thread started for &quot; + LocalProxySocketString.this.remoteConnection.getInetAddress());
    ViewEvent event;
    try {
        while (goAhead &amp;&amp; !LocalProxySocketString.this.remoteConnection.isClosed()) {
            try {
                int characterReaded = objectInputStream.read(buffer);
                builder.append(buffer, 0, characterReaded);
                while (builder.indexOf(Settings.SOCKET_EOM) != -1) {
                    String message = builder.substring(0, builder.indexOf(Settings.SOCKET_EOM));
                    System.out.println(&quot;JSON: &quot; + message);
                    event = (ViewEvent) Event.decodeJSON(message);
                    LocalProxySocketString.this.dispatchEventToVirtualView(event);
                    builder.delete(0, builder.indexOf(Settings.SOCKET_EOM) + Settings.SOCKET_EOM.length());
                }
            } catch (ClassNotFoundExceptionClassCastException |  e) {
                Log.e(&quot;Invalid event received: &quot; + e.getMessage());
            }
        }
    } catch (IOException e) {
        Log.d(&quot;ListenerThread: IOException: &quot; + e.getMessage());
    }
    Log.d(&quot;Client disconnected!&quot;);
</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOG8cIB2EeiyN7Yq9bqbrA" name="kill" specification="_JOGVYIB2EeiyN7Yq9bqbrA">
                    <language>JAVA</language>
                    <body>
    goAhead = false;
    try {
        objectInputStream.close();
    } catch (IOException e) {
        Log.e(&quot;Error during stram closing: &quot; + e.getMessage());
    }
</body>
                  </ownedBehavior>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JOFuUIB2EeiyN7Yq9bqbrA" name="run" visibility="public" method="_JOFuUYB2EeiyN7Yq9bqbrA"/>
                  <ownedOperation xmi:type="uml:Operation" xmi:id="_JOGVYIB2EeiyN7Yq9bqbrA" name="kill" visibility="private" method="_JOG8cIB2EeiyN7Yq9bqbrA"/>
                </nestedClassifier>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JOJYsIB2EeiyN7Yq9bqbrA" name="Client" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOJ_wIB2EeiyN7Yq9bqbrA" name="host" visibility="private" isStatic="true" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOKm0IB2EeiyN7Yq9bqbrA" name="name" visibility="private" isStatic="true" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOLN4IB2EeiyN7Yq9bqbrA" name="graphics" visibility="private" isStatic="true" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOL08IB2EeiyN7Yq9bqbrA" name="port" visibility="private" isStatic="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JONDEYB2EeiyN7Yq9bqbrA" name="connectRMI" specification="_JOMcAIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    try {
        Registry registry = LocateRegistry.getRegistry(host, port);
        ServerInterface server = (ServerInterface) registry.lookup(&quot;SagradaServer&quot;);
        RemoteProxyRMI remoteRMI = new RemoteProxyRMI();
        RemoteProxyRMIInterface remoteProxyRMIInterface = (RemoteProxyRMIInterface) UnicastRemoteObject.exportObject(remoteRMI, 0);
        if (server.connectRMIClient(remoteProxyRMIInterface, name)) {
            Log.d(&quot;Connected!&quot;);
            Log.i(&quot;Hello &quot; + name + &quot;! Nice to meet you!&quot;);
        } else {
            Log.e(&quot;Error during connection... Duplicate name or the maximum number of players is already reached.&quot;);
            System.exit(-1);
        }
        return remoteRMI;
    } catch (NotBoundExceptionRemoteException |  e) {
        Log.e(&quot;Cannot connect to server: &quot; + e.getMessage());
        System.exit(-1);
    }
    return null;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOO4QIB2EeiyN7Yq9bqbrA" name="connectSocket" specification="_JONqIIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    try {
        Log.d(&quot;Connecting...&quot;);
        Socket socket = new Socket(host, port);
        Log.d(&quot;Sending name...&quot;);
        ObjectOutputStream objectOutputStream = new ObjectOutputStream(socket.getOutputStream());
        objectOutputStream.writeObject(name);
        objectOutputStream.flush();
        //objectOutputStream.close();
        Log.d(&quot;Registering proxy...&quot;);
        RemoteProxySocket remoteProxySocket = new RemoteProxySocket(socket);
        Log.d(&quot;Connected!&quot;);
        return remoteProxySocket;
    } catch (IllegalArgumentExceptionIOException |  e) {
        Log.e(&quot;Cannot connect to server: &quot; + e.getMessage());
        System.exit(-1);
    }
    return null;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JORUgIB2EeiyN7Yq9bqbrA" name="Client" specification="_JOPfUIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    super();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOR7kIB2EeiyN7Yq9bqbrA" name="startClient" specification="_JORUgYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    CLIPrinter.setup();
    Scanner scanner = new Scanner(System.in);
    CLIPrinter.printQuestion(&quot;Connection method? [rmi]&quot;);
    String method = scanner.nextLine();
    method = (method.equals(&quot;&quot;) || (!method.equalsIgnoreCase(&quot;rmi&quot;) &amp;&amp; !method.equalsIgnoreCase(&quot;socket&quot;) &amp;&amp; !method.equalsIgnoreCase(&quot;json&quot;))) ? &quot;rmi&quot; : method;
    int defaultPort = method.equalsIgnoreCase(&quot;rmi&quot;) || (!method.equalsIgnoreCase(&quot;rmi&quot;) &amp;&amp; !method.equalsIgnoreCase(&quot;socket&quot;)) ? 1099 : 2099;
    if (method.equalsIgnoreCase(&quot;json&quot;)) {
        defaultPort = 2100;
    }
    CLIPrinter.printQuestion(&quot;ip [localhost]: &quot;);
    host = scanner.nextLine();
    host = host.equals(&quot;&quot;) ? &quot;localhost&quot; : host;
    CLIPrinter.printQuestion(&quot;port&quot; + &quot;[&quot; + defaultPort + &quot;]: &quot;);
    try {
        port = Integer.parseInt(scanner.nextLine());
    } catch (RuntimeException e) {
        port = defaultPort;
    }
    CLIPrinter.printQuestion(&quot;Name: &quot;);
    while ((name = scanner.nextLine()).equals(&quot;&quot;)) {
        CLIPrinter.printError(&quot;Invalid name&quot;);
    }
    CLIPrinter.printQuestion(&quot;GUI or CLI? [CLI]&quot;);
    graphics = scanner.nextLine();
    graphics = (graphics.equals(&quot;&quot;) || (!graphics.equalsIgnoreCase(&quot;cli&quot;) &amp;&amp; !graphics.equalsIgnoreCase(&quot;gui&quot;))) ? &quot;CLI&quot; : graphics;
    RemoteProxy remoteProxy = null;
    if (method.equalsIgnoreCase(&quot;RMI&quot;)) {
        remoteProxy = connectRMI();
    } else if (method.equalsIgnoreCase(&quot;socket&quot;)) {
        remoteProxy = connectSocket();
    } else if (method.equalsIgnoreCase(&quot;json&quot;)) {
        remoteProxy = connectJSON();
    } else {
        Log.w(&quot;Connection method &quot; + method + &quot; not implemented.&quot;);
    }
    if (remoteProxy == null) {
        Log.e(&quot;Connection error!&quot;);
        return;
    }
    RemoteView remoteView;
    if (graphics.equalsIgnoreCase(&quot;gui&quot;)) {
        remoteView = new RemoteView(name, RemoteView.Graphics.GUI);
    } else {
        remoteView = new RemoteView(name, RemoteView.Graphics.CLI);
    }
    remoteProxy.register(remoteView);
    remoteView.register(remoteProxy);
    remoteView.start();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOTJsIB2EeiyN7Yq9bqbrA" name="connectJSON" specification="_JOSioIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    try {
        Log.d(&quot;Connecting via json...&quot; + port);
        Socket socket = new Socket(host, port);
        Log.d(&quot;Sending name...&quot;);
        OutputStreamWriter outStream = new OutputStreamWriter(socket.getOutputStream());
        outStream.write(name + Settings.SOCKET_EOM);
        outStream.flush();
        //objectOutputStream.close();
        Log.d(&quot;Registering proxy...&quot;);
        RemoteProxySocketString remoteProxySocket = new RemoteProxySocketString(socket);
        Log.d(&quot;Connected!&quot;);
        return remoteProxySocket;
    } catch (IllegalArgumentExceptionIOException |  e) {
        Log.e(&quot;Cannot connect to server: &quot; + e.getMessage());
        System.exit(-1);
    }
    return null;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOMcAIB2EeiyN7Yq9bqbrA" name="connectRMI" visibility="private" isStatic="true" method="_JONDEYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JONDEIB2EeiyN7Yq9bqbrA" type="_JLNZcIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JONqIIB2EeiyN7Yq9bqbrA" name="connectSocket" visibility="private" isStatic="true" method="_JOO4QIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JOORMIB2EeiyN7Yq9bqbrA" type="_JLNZcIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOPfUIB2EeiyN7Yq9bqbrA" name="Client" visibility="public" method="_JORUgIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JORUgYB2EeiyN7Yq9bqbrA" name="startClient" visibility="public" isStatic="true" method="_JOR7kIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOSioIB2EeiyN7Yq9bqbrA" name="connectJSON" visibility="private" isStatic="true" method="_JOTJsIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JOSioYB2EeiyN7Yq9bqbrA" type="_JLNZcIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JOUX0IB2EeiyN7Yq9bqbrA" name="LocalProxyRMI" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_JOUX0YB2EeiyN7Yq9bqbrA" general="_IufBMYB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOVl8IB2EeiyN7Yq9bqbrA" name="client" visibility="private" type="_JLJIAIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JOU-4IB2EeiyN7Yq9bqbrA" name="LocalProxyRMI implements LocalProxyRMIInterface" client="_JOUX0IB2EeiyN7Yq9bqbrA" supplier="_JNZx0IB2EeiyN7Yq9bqbrA" contract="_JNZx0IB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOWNAYB2EeiyN7Yq9bqbrA" name="sendEventToClient" specification="_JOVl8YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (// Message is for me
    event.getReceiver().equals(getView().getPlayer()) || // Message is for everyone.
    event.getReceiver().equals(&quot;&quot;)) {
        try {
            //Log.d(&quot;[RMI::sendEventToClient]&quot; + event.toString());
            client.sendEventToClient(event);
        } catch (RemoteException e) {
            Log.d(e.getMessage());
            this.getView().disconnect();
            Log.e(&quot;Unable to send an event to the client, client disconnected!&quot;);
        }
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOYCMIB2EeiyN7Yq9bqbrA" name="sendEventToServer" specification="_JOW0EIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.dispatchEventToVirtualView(event);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOYpQoB2EeiyN7Yq9bqbrA" name="getClient" specification="_JOYpQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return client;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JOZ3YYB2EeiyN7Yq9bqbrA" name="setClient" specification="_JOZQUIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.client = client;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOVl8YB2EeiyN7Yq9bqbrA" name="sendEventToClient" visibility="public" method="_JOWNAYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JOWNAIB2EeiyN7Yq9bqbrA" name="event" type="_IvMy4YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOW0EIB2EeiyN7Yq9bqbrA" name="sendEventToServer" visibility="public" method="_JOYCMIB2EeiyN7Yq9bqbrA" raisedException="_ItBBkIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JOXbIIB2EeiyN7Yq9bqbrA" name="event" type="_IuSz8YB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOYpQIB2EeiyN7Yq9bqbrA" name="getClient" visibility="public" method="_JOYpQoB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JOYpQYB2EeiyN7Yq9bqbrA" type="_JLJIAIB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JOZQUIB2EeiyN7Yq9bqbrA" name="setClient" visibility="public" method="_JOZ3YYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JOZ3YIB2EeiyN7Yq9bqbrA" name="client" type="_JLJIAIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JOnSwIB2EeiyN7Yq9bqbrA" name="Server" visibility="public">
                <generalization xmi:type="uml:Generalization" xmi:id="_JOpH8YB2EeiyN7Yq9bqbrA" general="_JOn50YB2EeiyN7Yq9bqbrA"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOqWEIB2EeiyN7Yq9bqbrA" name="virtualViews" visibility="private" type="_ItydoIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JOqWEYB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JOq9IIB2EeiyN7Yq9bqbrA" value="*"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JOq9IYB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new ArrayList&lt;>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOsyUIB2EeiyN7Yq9bqbrA" name="serverSocket" visibility="private" type="_JOrkMIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOtZYIB2EeiyN7Yq9bqbrA" name="listenerThread" visibility="private" type="_It_5AIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOuAcIB2EeiyN7Yq9bqbrA" name="gameStarted" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOungIB2EeiyN7Yq9bqbrA" name="timeoutThread" visibility="private" type="_It_5AIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOvOkIB2EeiyN7Yq9bqbrA" name="serverTimeout" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_8heigBydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOv1oIB2EeiyN7Yq9bqbrA" name="actionTimeout" visibility="private" isLeaf="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_8heigBydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOwcsIB2EeiyN7Yq9bqbrA" name="customSchemaCardPath" visibility="private" isLeaf="true" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOxDwIB2EeiyN7Yq9bqbrA" name="beginTime" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_8heigBydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOxq0IB2EeiyN7Yq9bqbrA" name="RMI_PORT" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JOyR4IB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>1099</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOyR4YB2EeiyN7Yq9bqbrA" name="SOCKET_PORT" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JOy48IB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>2099</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JOzgAIB2EeiyN7Yq9bqbrA" name="SOCKETSTRING_PORT" visibility="private" isLeaf="true" isStatic="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JO0HEIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>2100</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JO0uIIB2EeiyN7Yq9bqbrA" name="ip" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JO1VMIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>&quot;127.0.0.1&quot;</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JO1VMYB2EeiyN7Yq9bqbrA" name="controller" visibility="private" type="_ItgJwIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JPCwkIB2EeiyN7Yq9bqbrA" name="serverSocketString" visibility="private" type="_JOrkMIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JPCwkYB2EeiyN7Yq9bqbrA" name="listenerThreadString" visibility="private" type="_It_5AIB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JOpvAIB2EeiyN7Yq9bqbrA" name="Server implements ServerInterface" client="_JOnSwIB2EeiyN7Yq9bqbrA" supplier="_JIVroIB2EeiyN7Yq9bqbrA" contract="_JIVroIB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPIQIIB2EeiyN7Yq9bqbrA" name="Server" specification="_JPD-sIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.serverTimeout = serverTimeout * 1000L;
    this.actionTimeout = actionTimeout * 1000L;
    this.customSchemaCardPath = customSchemaCardPath;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPJeQIB2EeiyN7Yq9bqbrA" name="startServer" specification="_JPI3MIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    try (final DatagramSocket socket = new DatagramSocket()) {
        socket.connect(InetAddress.getByName(&quot;8.8.8.8&quot;), 10002);
        ip = socket.getLocalAddress().getHostAddress();
    } catch (UnknownHostExceptionSocketException |  e) {
        Log.w(&quot;Cannot auto determine the ip address for the current server. Falling back to default.&quot;);
    }
    setupRMI();
    setupSocket();
    setupSocketString();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPKsYIB2EeiyN7Yq9bqbrA" name="setupSocket" specification="_JPKFUIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    try {
        serverSocket = new ServerSocket(SOCKET_PORT);
        Log.i(&quot;Socket server listening on &quot; + ip + &quot;:&quot; + SOCKET_PORT);
        listenerThread = new Thread(() -> {
            try {
                while (virtualViews.size() &lt; 4) {
                    Socket clientConnection = serverSocket.accept();
                    ObjectInputStream inputStream = new ObjectInputStream(clientConnection.getInputStream());
                    String playerName = null;
                    try {
                        playerName = (String) inputStream.readObject();
                    } catch (ClassNotFoundExceptionClassCastException |  e) {
                        Log.w(&quot;Cannot determine player's name. Disconnecting...&quot;);
                        clientConnection.close();
                    }
                    if (playerName != null) {
                        Log.i(&quot;Hello &quot; + playerName + &quot;! Nice to meet you!&quot;);
                        if (this.controller != null &amp;&amp; this.controller.isPlayerDisconnected(playerName)) {
                            this.controller.reconnectPlayer(new LocalProxySocket(clientConnection), playerName);
                        } else {
                            for (View el : virtualViews) {
                                if (el.getPlayer().equals(playerName)) {
                                    Log.w(&quot;A player with an already existent name tried to join this match!&quot;);
                                    clientConnection.close();
                                }
                            }
                            if (!clientConnection.isClosed()) {
                                //inputStream.close();
                                LocalProxySocket localProxySocket = new LocalProxySocket(clientConnection);
                                addClient(localProxySocket, playerName);
                                Log.d(&quot;Connected!&quot;);
                            }
                        }
                    }
                }
                Log.w(&quot;No more player are allowed as the maximum of 4 players is already reached.&quot;);
            } catch (IOException e) {
                e.printStackTrace();
            }
        });
        listenerThread.start();
    } catch (IOException e) {
        e.printStackTrace();
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPL6gIB2EeiyN7Yq9bqbrA" name="setupSocketString" specification="_JPLTcIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    try {
        serverSocketString = new ServerSocket(SOCKETSTRING_PORT);
        Log.i(&quot;SocketString server listening on &quot; + ip + &quot;:&quot; + SOCKETSTRING_PORT);
        listenerThreadString = new Thread(() -> {
            try {
                //TODO: controllare qui, puo' causare problemi di riconnessione???
                while (virtualViews.size() &lt; 4) {
                    Socket clientConnection = serverSocketString.accept();
                    InputStreamReader inputStream = new InputStreamReader(clientConnection.getInputStream());
                    String playerName = null;
                    StringBuilder builder = new StringBuilder();
                    while (builder.indexOf(Settings.SOCKET_EOM) == -1) {
                        char[] buffer = new char[256];
                        int readed = inputStream.read(buffer, 0, 256);
                        builder.append(buffer, 0, readed);
                    }
                    playerName = builder.substring(0, builder.indexOf(Settings.SOCKET_EOM));
                    if (playerName != null) {
                        Log.i(&quot;Hello &quot; + playerName + &quot;! Nice to meet you!&quot;);
                        if (this.controller != null &amp;&amp; this.controller.isPlayerDisconnected(playerName)) {
                            this.controller.reconnectPlayer(new LocalProxySocketString(clientConnection), playerName);
                        } else {
                            for (View el : virtualViews) {
                                if (el.getPlayer().equals(playerName)) {
                                    Log.w(&quot;A player with an already existent name tried to join this match!&quot;);
                                    clientConnection.close();
                                }
                            }
                            if (!clientConnection.isClosed()) {
                                //inputStream.close();
                                LocalProxySocketString localProxySocket = new LocalProxySocketString(clientConnection);
                                addClient(localProxySocket, playerName);
                                Log.d(&quot;Connected!&quot;);
                            }
                        }
                    }
                }
                Log.w(&quot;No more player are allowed as the maximum of 4 players is already reached.&quot;);
            } catch (IOException e) {
                e.printStackTrace();
            }
        });
        listenerThreadString.start();
    } catch (IOException e) {
        e.printStackTrace();
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPMhkYB2EeiyN7Yq9bqbrA" name="startTimeout" specification="_JPMhkIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.timeoutThread = new Thread(() -> {
        Log.d(&quot;Starting timeout with timeout of &quot; + this.serverTimeout / 1000L + &quot; seconds&quot;);
        this.beginTime = System.currentTimeMillis();
        while ((System.currentTimeMillis() - this.beginTime) &lt; this.serverTimeout &amp;&amp; !gameStarted) {
            try {
                Thread.sleep(1000);
                Log.d(&quot;[CONNECTION] Remaining &quot; + (this.serverTimeout / 1000L - this.getTimeout()) + &quot; seconds&quot;);
            } catch (InterruptedException ignored) {
            }
        }
        if (virtualViews.size() &lt; 4 &amp;&amp; virtualViews.size() > 1 &amp;&amp; !gameStarted)
            this.startGame();
    });
    this.timeoutThread.start();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPOWwIB2EeiyN7Yq9bqbrA" name="getTimeout" specification="_JPNIoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return (int) ((System.currentTimeMillis() - this.beginTime) / 1000L);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPO90YB2EeiyN7Yq9bqbrA" name="setupRMI" specification="_JPO90IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    try {
        System.setProperty(&quot;java.rmi.server.hostname&quot;, ip);
        LocateRegistry.createRegistry(RMI_PORT);
    } catch (RemoteException e) {
        Log.e(&quot;Cannot create RMI server: &quot; + e.getMessage());
    }
    try {
        Naming.rebind(&quot;SagradaServer&quot;, this);
        Log.i(&quot;RMI Server exposed up on &quot; + ip + &quot;:&quot; + RMI_PORT);
    } catch (MalformedURLExceptionRemoteException |  e) {
        Log.e(&quot;Cannot register RMI server!&quot;);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPRaEIB2EeiyN7Yq9bqbrA" name="connectRMIClient" specification="_JPQL8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (virtualViews.size() >= 4)
        return false;
    if (this.controller != null &amp;&amp; this.controller.isPlayerDisconnected(player)) {
        LocalProxyRMI localProxyRMI = new LocalProxyRMI();
        LocalProxyRMIInterface localProxyRMIInterface = (LocalProxyRMIInterface) UnicastRemoteObject.exportObject(localProxyRMI, 0);
        localProxyRMI.setClient(remoteProxyRMI);
        remoteProxyRMI.setServer(localProxyRMIInterface);
        this.controller.reconnectPlayer(localProxyRMI, player);
        Log.i(&quot;Client with name &quot; + player + &quot; reconnected!&quot;);
        return true;
    }
    for (View el : virtualViews) {
        if (el.getPlayer().equals(player)) {
            Log.w(&quot;A player with an already existent name tried to join this match!&quot;);
            return false;
        }
    }
    LocalProxyRMI localProxyRMI = new LocalProxyRMI();
    LocalProxyRMIInterface localProxyRMIInterface = (LocalProxyRMIInterface) UnicastRemoteObject.exportObject(localProxyRMI, 0);
    localProxyRMI.setClient(remoteProxyRMI);
    remoteProxyRMI.setServer(localProxyRMIInterface);
    Log.i(&quot;Client with name &quot; + player + &quot; connected!&quot;);
    addClient(localProxyRMI, player);
    return true;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPT2UYB2EeiyN7Yq9bqbrA" name="addClient" specification="_JPSoMIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    VirtualView virtualView = new VirtualView(player, localProxy);
    localProxy.setView(virtualView);
    virtualViews.add(virtualView);
    if (virtualViews.size() == 4 &amp;&amp; !gameStarted) {
        startGame();
        return;
    }
    if (virtualViews.size() == 2)
        this.startTimeout();
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPVEcIB2EeiyN7Yq9bqbrA" name="startGame" specification="_JPUdYIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    // TODO: a futura memoria
    gameStarted = true;
    this.controller = new Controller(virtualViews, this.actionTimeout);
    this.controller.start();
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPD-sIB2EeiyN7Yq9bqbrA" name="Server" visibility="public" method="_JPIQIIB2EeiyN7Yq9bqbrA" raisedException="_ItBBkIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPGa8IB2EeiyN7Yq9bqbrA" name="serverTimeout">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPHCAIB2EeiyN7Yq9bqbrA" name="actionTimeout">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPHpEIB2EeiyN7Yq9bqbrA" name="customSchemaCardPath" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPI3MIB2EeiyN7Yq9bqbrA" name="startServer" visibility="public" method="_JPJeQIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPKFUIB2EeiyN7Yq9bqbrA" name="setupSocket" visibility="private" method="_JPKsYIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPLTcIB2EeiyN7Yq9bqbrA" name="setupSocketString" visibility="private" method="_JPL6gIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPMhkIB2EeiyN7Yq9bqbrA" name="startTimeout" visibility="private" method="_JPMhkYB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPNIoIB2EeiyN7Yq9bqbrA" name="getTimeout" visibility="private" method="_JPOWwIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPNvsIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPO90IB2EeiyN7Yq9bqbrA" name="setupRMI" visibility="private" method="_JPO90YB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPQL8IB2EeiyN7Yq9bqbrA" name="connectRMIClient" visibility="public" method="_JPRaEIB2EeiyN7Yq9bqbrA" raisedException="_ItBBkIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPQL8YB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPQL8oB2EeiyN7Yq9bqbrA" name="remoteProxyRMI" type="_JLJIAIB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPQzAIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPSoMIB2EeiyN7Yq9bqbrA" name="addClient" visibility="private" method="_JPT2UYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPTPQIB2EeiyN7Yq9bqbrA" name="localProxy" type="_IufBMYB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPT2UIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPUdYIB2EeiyN7Yq9bqbrA" name="startGame" visibility="private" method="_JPVEcIB2EeiyN7Yq9bqbrA"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JOrkMIB2EeiyN7Yq9bqbrA" name="ServerSocket"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_IvMy4IB2EeiyN7Yq9bqbrA" name="utils">
              <packagedElement xmi:type="uml:Class" xmi:id="_IvMy4YB2EeiyN7Yq9bqbrA" name="Event" visibility="public" isAbstract="true">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQb3sIB2EeiyN7Yq9bqbrA" name="player" visibility="private" isLeaf="true" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQdF0IB2EeiyN7Yq9bqbrA" name="emitter" visibility="private" isLeaf="true" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQds4IB2EeiyN7Yq9bqbrA" name="receiver" visibility="private" isLeaf="true" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JQbQoIB2EeiyN7Yq9bqbrA" name="Event implements Serializable" client="_IvMy4YB2EeiyN7Yq9bqbrA" supplier="_I4hG8IB2EeiyN7Yq9bqbrA" contract="_I4hG8IB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQjzgYB2EeiyN7Yq9bqbrA" name="Event" specification="_JQe7AIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.emitter = emitter;
    this.player = player;
    this.receiver = receiver;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQoE8IB2EeiyN7Yq9bqbrA" name="Event" specification="_JQkakIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    player = new JSONObject(json).getString(&quot;playerName&quot;);
    emitter = new JSONObject(json).getString(&quot;emitterName&quot;);
    receiver = new JSONObject(json).getString(&quot;receiver&quot;);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQpTEYB2EeiyN7Yq9bqbrA" name="getEmitterName" specification="_JQosAIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return emitter;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQrIQIB2EeiyN7Yq9bqbrA" name="getPlayerName" specification="_JQp6IIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return player;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQtkgIB2EeiyN7Yq9bqbrA" name="filter" specification="_JQrvUIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return this;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQuyoIB2EeiyN7Yq9bqbrA" name="toString" specification="_JQuLkIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return &quot;Event{&quot; + &quot;player='&quot; + player + '\'' + &quot;, emitter='&quot; + emitter + '\'' + &quot;, receiver='&quot; + receiver + '\'' + &quot;, class='&quot; + getClass().getSimpleName() + '\'' + '}';
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQwn0IB2EeiyN7Yq9bqbrA" name="toJSON" specification="_JQvZsIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    JSONObject jsonObject = new JSONObject(this);
    jsonObject.put(&quot;class&quot;, this.getClass().getCanonicalName());
    return jsonObject;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQ2ucIB2EeiyN7Yq9bqbrA" name="decodeJSON" specification="_JQwn0YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    Class&lt;? extends Event> c = (Class&lt;? extends Event>) Class.forName(new JSONObject(json).getString(&quot;class&quot;));
    try {
        Constructor&lt;? extends Event> constructor = c.getConstructor(String.class);
        Event event = constructor.newInstance(json);
        return event;
    } catch (NoSuchMethodExceptionIllegalAccessException | InstantiationException | InvocationTargetException |  e) {
        e.printStackTrace();
        throw new ClassNotFoundException(&quot;Cannot reconstruct class&quot;, e);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQ38kYB2EeiyN7Yq9bqbrA" name="getReceiver" specification="_JQ3VgIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return receiver;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQe7AIB2EeiyN7Yq9bqbrA" name="Event" visibility="protected" method="_JQjzgYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQh-UIB2EeiyN7Yq9bqbrA" name="emitter" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQilYIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQjzgIB2EeiyN7Yq9bqbrA" name="receiver" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQkakIB2EeiyN7Yq9bqbrA" name="Event" visibility="public" method="_JQoE8IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQnd4IB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQosAIB2EeiyN7Yq9bqbrA" name="getEmitterName" visibility="public" method="_JQpTEYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQpTEIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQp6IIB2EeiyN7Yq9bqbrA" name="getPlayerName" visibility="public" method="_JQrIQIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQqhMIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQrvUIB2EeiyN7Yq9bqbrA" name="filter" visibility="public" method="_JQtkgIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQsWYIB2EeiyN7Yq9bqbrA" type="_IvMy4YB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQs9cIB2EeiyN7Yq9bqbrA" name="playername" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQuLkIB2EeiyN7Yq9bqbrA" name="toString" visibility="public" method="_JQuyoIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQuLkYB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQvZsIB2EeiyN7Yq9bqbrA" name="toJSON" visibility="public" method="_JQwn0IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQwAwIB2EeiyN7Yq9bqbrA" type="_IvIhcoB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQwn0YB2EeiyN7Yq9bqbrA" name="decodeJSON" visibility="public" isStatic="true" method="_JQ2ucIB2EeiyN7Yq9bqbrA" raisedException="_JQydAIB2EeiyN7Yq9bqbrA _JQ0SMIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQxO4IB2EeiyN7Yq9bqbrA" type="_IvMy4YB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQx18IB2EeiyN7Yq9bqbrA" name="json" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQ3VgIB2EeiyN7Yq9bqbrA" name="getReceiver" visibility="public" method="_JQ38kYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQ38kIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_IvYZEIB2EeiyN7Yq9bqbrA" name="ScoreHolder" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JPZV4oB2EeiyN7Yq9bqbrA" name="player" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JPZ88IB2EeiyN7Yq9bqbrA" name="privateObjectivePoints" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JPZ88YB2EeiyN7Yq9bqbrA" name="tokenPoints" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JPZ88oB2EeiyN7Yq9bqbrA" name="orderInFinalRound" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JPakAIB2EeiyN7Yq9bqbrA" name="publicObjectivePoints" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JPakAYB2EeiyN7Yq9bqbrA" name="missing" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JPZV4IB2EeiyN7Yq9bqbrA" name="ScoreHolder implements Comparable" client="_IvYZEIB2EeiyN7Yq9bqbrA" supplier="_JPW5oIB2EeiyN7Yq9bqbrA" contract="_JPW5oIB2EeiyN7Yq9bqbrA"/>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JPZV4YB2EeiyN7Yq9bqbrA" name="ScoreHolder implements Serializable" client="_IvYZEIB2EeiyN7Yq9bqbrA" supplier="_I4hG8IB2EeiyN7Yq9bqbrA" contract="_I4hG8IB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPgDkIB2EeiyN7Yq9bqbrA" name="ScoreHolder" specification="_JPakAoB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (tokenPoints &lt; 0 || privateObjectivePoints &lt; 0 || publicObjectivePoints &lt; 0 || missing &lt; 0 || orderInFinalRound &lt; 0)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: None of the attributes can be negative&quot;);
    this.player = player;
    this.privateObjectivePoints = privateObjectivePoints;
    this.tokenPoints = tokenPoints;
    this.orderInFinalRound = orderInFinalRound;
    this.publicObjectivePoints = publicObjectivePoints;
    this.missing = missing;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPjt8YB2EeiyN7Yq9bqbrA" name="ScoreHolder" specification="_JPgqoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this(obj.getString(&quot;playerName&quot;), obj.getInt(&quot;privateObjectivePoints&quot;), obj.getInt(&quot;publicObjectivePoints&quot;), obj.getInt(&quot;tokenPoints&quot;), obj.getInt(&quot;missing&quot;), obj.getInt(&quot;orderInFinalRound&quot;));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPljIIB2EeiyN7Yq9bqbrA" name="getTotalScore" specification="_JPk8EIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return this.privateObjectivePoints + this.publicObjectivePoints + this.tokenPoints - this.missing;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPmxQYB2EeiyN7Yq9bqbrA" name="getTokenPoints" specification="_JPmKMIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return tokenPoints;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPomcIB2EeiyN7Yq9bqbrA" name="getOrderInFinalRound" specification="_JPnYUIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return orderInFinalRound;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPp0kYB2EeiyN7Yq9bqbrA" name="toString" specification="_JPpNgIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return &quot;ScoreHolder{&quot; + &quot;player='&quot; + player + '\'' + &quot;, privateObjectivePoints=&quot; + privateObjectivePoints + &quot;, tokenPoints=&quot; + tokenPoints + &quot;, orderInFinalRound=&quot; + orderInFinalRound + &quot;, publicObjectivePoints=&quot; + publicObjectivePoints + &quot;, missing=&quot; + missing + '}';
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPrpwIB2EeiyN7Yq9bqbrA" name="getPublicObjectivePoints" specification="_JPqboIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return publicObjectivePoints;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPs34YB2EeiyN7Yq9bqbrA" name="getPlayerName" specification="_JPsQ0IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return player;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPutEYB2EeiyN7Yq9bqbrA" name="compareTo" specification="_JPte8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (o == null)
        throw new NullPointerException();
    if (this.equals(o))
        return 0;
    if (this.getTotalScore() > o.getTotalScore())
        return 1;
    if (this.getTotalScore() == o.getTotalScore()) {
        if (this.getPublicObjectivePoints() > o.getPublicObjectivePoints())
            return 1;
        if (this.getPublicObjectivePoints() == o.getPublicObjectivePoints()) {
            if (this.getTokenPoints() > o.getTokenPoints())
                return 1;
            if (this.getTokenPoints() == o.getTokenPoints()) {
                if (this.getOrderInFinalRound() > o.getOrderInFinalRound())
                    return 1;
            }
        }
    }
    return -1;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPwiQIB2EeiyN7Yq9bqbrA" name="getPrivateObjectivePoints" specification="_JPvUIIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return privateObjectivePoints;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JPxwYIB2EeiyN7Yq9bqbrA" name="getMissing" specification="_JPxJUIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return missing;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPakAoB2EeiyN7Yq9bqbrA" name="ScoreHolder" visibility="public" method="_JPgDkIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPdnUIB2EeiyN7Yq9bqbrA" name="player" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPeOYIB2EeiyN7Yq9bqbrA" name="privateObjectivePoints">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPeOYYB2EeiyN7Yq9bqbrA" name="publicObjectivePoints">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPe1cIB2EeiyN7Yq9bqbrA" name="tokenPoints">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPfcgIB2EeiyN7Yq9bqbrA" name="missing">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPfcgYB2EeiyN7Yq9bqbrA" name="orderInFinalRound">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPgqoIB2EeiyN7Yq9bqbrA" name="ScoreHolder" visibility="public" method="_JPjt8YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPjt8IB2EeiyN7Yq9bqbrA" name="obj" type="_IvIhcoB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPk8EIB2EeiyN7Yq9bqbrA" name="getTotalScore" visibility="public" method="_JPljIIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPk8EYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPmKMIB2EeiyN7Yq9bqbrA" name="getTokenPoints" visibility="public" method="_JPmxQYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPmxQIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPnYUIB2EeiyN7Yq9bqbrA" name="getOrderInFinalRound" visibility="public" method="_JPomcIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPn_YIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPpNgIB2EeiyN7Yq9bqbrA" name="toString" visibility="public" method="_JPp0kYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPp0kIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPqboIB2EeiyN7Yq9bqbrA" name="getPublicObjectivePoints" visibility="public" method="_JPrpwIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPrCsIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPsQ0IB2EeiyN7Yq9bqbrA" name="getPlayerName" visibility="public" method="_JPs34YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPs34IB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPte8IB2EeiyN7Yq9bqbrA" name="compareTo" visibility="public" method="_JPutEYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPuGAIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPutEIB2EeiyN7Yq9bqbrA" name="o" type="_IvYZEIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPvUIIB2EeiyN7Yq9bqbrA" name="getPrivateObjectivePoints" visibility="public" method="_JPwiQIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPv7MIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPxJUIB2EeiyN7Yq9bqbrA" name="getMissing" visibility="public" method="_JPxwYIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JPxJUYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_I0kbEIB2EeiyN7Yq9bqbrA" name="Observable" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQ5xwIB2EeiyN7Yq9bqbrA" name="observers" visibility="private" isLeaf="true" type="_JOhzMIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JQ6Y0IB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JQ6_4IB2EeiyN7Yq9bqbrA" value="*"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JQ6_4YB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>new ArrayList&lt;Observer&lt;T>>()</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQ8OAIB2EeiyN7Yq9bqbrA" name="register" specification="_JQ7m8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    synchronized (observers) {
        observers.add(observer);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQ9cIIB2EeiyN7Yq9bqbrA" name="deregister" specification="_JQ81EIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    synchronized (observers) {
        observers.remove(observer);
    }
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQ_RUIB2EeiyN7Yq9bqbrA" name="notify" specification="_JQ-DMIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    synchronized (observers) {
        for (Observer&lt;T> observer : observers) {
            observer.update(message);
        }
    }
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQ7m8IB2EeiyN7Yq9bqbrA" name="register" visibility="public" method="_JQ8OAIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQ7m8YB2EeiyN7Yq9bqbrA" name="observer" type="_JOhzMIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQ81EIB2EeiyN7Yq9bqbrA" name="deregister" visibility="public" method="_JQ9cIIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQ81EYB2EeiyN7Yq9bqbrA" name="observer" type="_JOhzMIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQ-DMIB2EeiyN7Yq9bqbrA" name="notify" visibility="protected" method="_JQ_RUIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQ-qQIB2EeiyN7Yq9bqbrA" name="message" type="_JQW_MIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_JOhzMIB2EeiyN7Yq9bqbrA" name="Observer" visibility="public">
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQZbcIB2EeiyN7Yq9bqbrA" name="update" visibility="public">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQZbcYB2EeiyN7Yq9bqbrA" name="message" type="_JQW_MIB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_JPW5oIB2EeiyN7Yq9bqbrA" name="Comparable"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JPy-gIB2EeiyN7Yq9bqbrA" name="Utils" visibility="public">
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JP2o4YB2EeiyN7Yq9bqbrA" name="decodePosition" specification="_JPzlkIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return new Point(pointJson.getInt(&quot;x&quot;), pointJson.getInt(&quot;y&quot;));
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JPzlkIB2EeiyN7Yq9bqbrA" name="decodePosition" visibility="public" isStatic="true" method="_JP2o4YB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JP2B0IB2EeiyN7Yq9bqbrA" type="_JP0MoIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JP2o4IB2EeiyN7Yq9bqbrA" name="pointJson" type="_IvIhcoB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JP0MoIB2EeiyN7Yq9bqbrA" name="Point"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JP33AIB2EeiyN7Yq9bqbrA" name="Log" visibility="public">
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JP5sMYB2EeiyN7Yq9bqbrA" name="i" specification="_JP4eEIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    System.out.println(ansi().fg(Ansi.Color.GREEN).a(&quot;[INFO] &quot; + message).reset());
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JP7hYYB2EeiyN7Yq9bqbrA" name="w" specification="_JP66UIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    System.out.println(ansi().fg(Ansi.Color.YELLOW).a(&quot;[WARNING] &quot; + message).reset());
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JP99oIB2EeiyN7Yq9bqbrA" name="d" specification="_JP8vgIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    System.out.println(&quot;[DEBUG] &quot; + message);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JP_LwYB2EeiyN7Yq9bqbrA" name="e" specification="_JP-ksIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    System.out.println(ansi().fg(Ansi.Color.RED).a(&quot;[ERROR] &quot; + message).reset());
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JP4eEIB2EeiyN7Yq9bqbrA" name="i" visibility="public" isStatic="true" method="_JP5sMYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JP5sMIB2EeiyN7Yq9bqbrA" name="message" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JP66UIB2EeiyN7Yq9bqbrA" name="w" visibility="public" isStatic="true" method="_JP7hYYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JP7hYIB2EeiyN7Yq9bqbrA" name="message" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JP8vgIB2EeiyN7Yq9bqbrA" name="d" visibility="public" isStatic="true" method="_JP99oIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JP9WkIB2EeiyN7Yq9bqbrA" name="message" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JP-ksIB2EeiyN7Yq9bqbrA" name="e" visibility="public" isStatic="true" method="_JP_LwYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JP_LwIB2EeiyN7Yq9bqbrA" name="message" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JQBA8IB2EeiyN7Yq9bqbrA" name="Settings" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQBoAIB2EeiyN7Yq9bqbrA" name="CARD_WIDTH" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JQBoAYB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>5</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQCPEIB2EeiyN7Yq9bqbrA" name="CARD_HEIGHT" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JQC2IIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>4</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQDdMIB2EeiyN7Yq9bqbrA" name="MAX_DICE_PER_COLOR" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JQEEQIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>18</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQErUIB2EeiyN7Yq9bqbrA" name="TURNS" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JQFSYIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>10</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQF5cIB2EeiyN7Yq9bqbrA" name="MAX_NUM_PLAYERS" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JQHHkIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>4</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQHHkYB2EeiyN7Yq9bqbrA" name="MIN_NUM_PLAYERS" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JQIVsIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>2</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQI8wIB2EeiyN7Yq9bqbrA" name="TOOLCARDS_N" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JQJj0IB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>3</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQKK4IB2EeiyN7Yq9bqbrA" name="POBJECTIVES_N" visibility="public" isLeaf="true" isStatic="true" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JQKx8IB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>3</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQLZAIB2EeiyN7Yq9bqbrA" name="SOCKET_EOM" visibility="public" isLeaf="true" isStatic="true" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JQMAEIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>&quot;#$$EOM$$#&quot;</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQNOMIB2EeiyN7Yq9bqbrA" name="defaultSchemaCardDatabase" visibility="private" isStatic="true" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JQN1QIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>&quot;schemaCards/schemaCardBase.scf&quot;</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JQOcUIB2EeiyN7Yq9bqbrA" name="customSchemaCardDatabase" visibility="private" isStatic="true" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false">
                  <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_JQPDYIB2EeiyN7Yq9bqbrA" name="defaultValue">
                    <language>JAVA</language>
                    <body>&quot;&quot;</body>
                  </defaultValue>
                </ownedAttribute>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQRfoIB2EeiyN7Yq9bqbrA" name="Settings" specification="_JQPDYYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
//This constructor must be private because the class should not be instantiated from the outside
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQTU0IB2EeiyN7Yq9bqbrA" name="getSchemaCardDatabase" specification="_JQSGsIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return customSchemaCardDatabase;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQVKAYB2EeiyN7Yq9bqbrA" name="setSchemaCardDatabase" specification="_JQT74IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (customSchemaCardPath == null || customSchemaCardPath.equals(&quot;&quot;))
        return;
    customSchemaCardDatabase = customSchemaCardPath;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JQVxEYB2EeiyN7Yq9bqbrA" name="getDefaultSchemaCardDatabase" specification="_JQVKAoB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return defaultSchemaCardDatabase;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQPDYYB2EeiyN7Yq9bqbrA" name="Settings" visibility="private" method="_JQRfoIB2EeiyN7Yq9bqbrA"/>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQSGsIB2EeiyN7Yq9bqbrA" name="getSchemaCardDatabase" visibility="public" isStatic="true" method="_JQTU0IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQStwIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQT74IB2EeiyN7Yq9bqbrA" name="setSchemaCardDatabase" visibility="public" isStatic="true" method="_JQVKAYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQVKAIB2EeiyN7Yq9bqbrA" name="customSchemaCardPath" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JQVKAoB2EeiyN7Yq9bqbrA" name="getDefaultSchemaCardDatabase" visibility="public" isStatic="true" method="_JQVxEYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JQVxEIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_JQW_MIB2EeiyN7Yq9bqbrA" name="T"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JQydAIB2EeiyN7Yq9bqbrA" name="ClassNotFoundException"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_JQ0SMIB2EeiyN7Yq9bqbrA" name="ClassCastException"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_IztfcIB2EeiyN7Yq9bqbrA" name="model_view">
              <packagedElement xmi:type="uml:Class" xmi:id="_IztfcYB2EeiyN7Yq9bqbrA" name="DraftBoardImmutable" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JHhzUYB2EeiyN7Yq9bqbrA" name="drawnDices" visibility="private" type="_Ixi8QIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JHiaYIB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JHiaYYB2EeiyN7Yq9bqbrA" value="*"/>
                </ownedAttribute>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JHhzUIB2EeiyN7Yq9bqbrA" name="DraftBoardImmutable implements Serializable" client="_IztfcYB2EeiyN7Yq9bqbrA" supplier="_I4hG8IB2EeiyN7Yq9bqbrA" contract="_I4hG8IB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHmEwYB2EeiyN7Yq9bqbrA" name="DraftBoardImmutable" specification="_JHjogIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.drawnDices = drawnDices;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHn58IB2EeiyN7Yq9bqbrA" name="fromJson" specification="_JHmr0IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    JSONArray dices = draftBoardImmutable.getJSONArray(&quot;dices&quot;);
    DiceFace[] drawnDices = new DiceFace[dices.length()];
    for (int i = 0; i &lt; dices.length(); i++) {
        drawnDices[i] = DiceFace.fromJson(dices.getJSONObject(i));
    }
    return new DraftBoardImmutable(drawnDices);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHpIEYB2EeiyN7Yq9bqbrA" name="getDices" specification="_JHn58YB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return drawnDices;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JHjogIB2EeiyN7Yq9bqbrA" name="DraftBoardImmutable" visibility="public" method="_JHmEwYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHldsIB2EeiyN7Yq9bqbrA" name="drawnDices" type="_Ixi8QIB2EeiyN7Yq9bqbrA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JHldsYB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JHmEwIB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JHmr0IB2EeiyN7Yq9bqbrA" name="fromJson" visibility="public" isStatic="true" method="_JHn58IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHmr0YB2EeiyN7Yq9bqbrA" type="_IztfcYB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHnS4IB2EeiyN7Yq9bqbrA" name="draftBoardImmutable" type="_IvIhcoB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JHn58YB2EeiyN7Yq9bqbrA" name="getDices" visibility="public" method="_JHpIEYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHohAIB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JHohAYB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JHpIEIB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_Iz9-IYB2EeiyN7Yq9bqbrA" name="PlayerImmutable" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JHWNIIB2EeiyN7Yq9bqbrA" name="name" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JHWNIYB2EeiyN7Yq9bqbrA" name="token" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JHW0MIB2EeiyN7Yq9bqbrA" name="privateObjective" visibility="private" type="_Izy_AYB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JHU_AIB2EeiyN7Yq9bqbrA" name="PlayerImmutable implements Serializable" client="_Iz9-IYB2EeiyN7Yq9bqbrA" supplier="_I4hG8IB2EeiyN7Yq9bqbrA" contract="_I4hG8IB2EeiyN7Yq9bqbrA"/>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JHVmEYB2EeiyN7Yq9bqbrA" name="PlayerImmutable implements Cloneable" client="_Iz9-IYB2EeiyN7Yq9bqbrA" supplier="_JHVmEIB2EeiyN7Yq9bqbrA" contract="_JHVmEIB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHaekIB2EeiyN7Yq9bqbrA" name="PlayerImmutable" specification="_JHXbQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.name = name;
    this.token = token;
    this.privateObjective = privateObjective;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHbssYB2EeiyN7Yq9bqbrA" name="fromJSON" specification="_JHbFoIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return new PlayerImmutable(jsonObject.getString(&quot;name&quot;), jsonObject.getInt(&quot;token&quot;), PrivateObjective.fromJSON(jsonObject.optJSONObject(&quot;privateObjective&quot;)));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHc60IB2EeiyN7Yq9bqbrA" name="getName" specification="_JHcTwIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return name;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHeI8IB2EeiyN7Yq9bqbrA" name="getPrivateObjective" specification="_JHdh4IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return privateObjective;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHfXEIB2EeiyN7Yq9bqbrA" name="getToken" specification="_JHewAIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return token;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHf-IYB2EeiyN7Yq9bqbrA" name="obtainFilteredInstance" specification="_JHfXEYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    PlayerImmutable toReturn = null;
    try {
        toReturn = (PlayerImmutable) clone();
        toReturn.privateObjective = null;
    } catch (CloneNotSupportedException e) {
        e.printStackTrace();
    }
    return toReturn;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JHXbQIB2EeiyN7Yq9bqbrA" name="PlayerImmutable" visibility="public" method="_JHaekIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHZQcIB2EeiyN7Yq9bqbrA" name="name" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHZ3gIB2EeiyN7Yq9bqbrA" name="token">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHZ3gYB2EeiyN7Yq9bqbrA" name="privateObjective" type="_Izy_AYB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JHbFoIB2EeiyN7Yq9bqbrA" name="fromJSON" visibility="public" isStatic="true" method="_JHbssYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHbFoYB2EeiyN7Yq9bqbrA" type="_Iz9-IYB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHbssIB2EeiyN7Yq9bqbrA" name="jsonObject" type="_IvIhcoB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JHcTwIB2EeiyN7Yq9bqbrA" name="getName" visibility="public" method="_JHc60IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHcTwYB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JHdh4IB2EeiyN7Yq9bqbrA" name="getPrivateObjective" visibility="public" method="_JHeI8IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHdh4YB2EeiyN7Yq9bqbrA" type="_Izy_AYB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JHewAIB2EeiyN7Yq9bqbrA" name="getToken" visibility="public" method="_JHfXEIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHewAYB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JHfXEYB2EeiyN7Yq9bqbrA" name="obtainFilteredInstance" visibility="public" method="_JHf-IYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHf-IIB2EeiyN7Yq9bqbrA" type="_Iz9-IYB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_I0N1wIB2EeiyN7Yq9bqbrA" name="DiceHolderImmutable" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JHq9QIB2EeiyN7Yq9bqbrA" name="turnHolder" visibility="private" type="_Ixi8QIB2EeiyN7Yq9bqbrA" isUnique="false">
                  <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JHrkUIB2EeiyN7Yq9bqbrA"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JHrkUYB2EeiyN7Yq9bqbrA" value="*"/>
                </ownedAttribute>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JHqWMIB2EeiyN7Yq9bqbrA" name="DiceHolderImmutable implements Serializable" client="_I0N1wIB2EeiyN7Yq9bqbrA" supplier="_I4hG8IB2EeiyN7Yq9bqbrA" contract="_I4hG8IB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHvOsIB2EeiyN7Yq9bqbrA" name="DiceHolderImmutable" specification="_JHsLYIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (turnHolder == null)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: turnHolder Cannot be null.&quot;);
    this.turnHolder = turnHolder;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHxD4IB2EeiyN7Yq9bqbrA" name="fromJSON" specification="_JHv1wIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    int doneTurns = diceHolderImmutable.getInt(&quot;doneTurns&quot;);
    JSONArray turns = diceHolderImmutable.getJSONArray(&quot;holder&quot;);
    DiceFace[][] turnHolder = new DiceFace[doneTurns][];
    for (int turnino = 0; turnino &lt; doneTurns; turnino++) {
        JSONArray singleTurn = turns.getJSONArray(turnino);
        turnHolder[turnino] = new DiceFace[singleTurn.length()];
        for (int x = 0; x &lt; singleTurn.length(); x++) {
            turnHolder[turnino][x] = DiceFace.fromJson(singleTurn.getJSONObject(x));
        }
    }
    return new DiceHolderImmutable(turnHolder);
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JHySAIB2EeiyN7Yq9bqbrA" name="getDoneTurns" specification="_JHxq8IB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return this.turnHolder.length;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JH0HMYB2EeiyN7Yq9bqbrA" name="getDiceFaces" specification="_JHy5EIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    if (turn &lt; 0 || turn >= this.turnHolder.length)
        throw new IllegalArgumentException(this.getClass().getCanonicalName() + &quot;: Trying to access an illegal turn&quot;);
    return this.turnHolder[turn];
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JH1VUYB2EeiyN7Yq9bqbrA" name="toJSON" specification="_JH0uQIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    JSONObject jsonObject = new JSONObject();
    jsonObject.put(&quot;doneTurns&quot;, getDoneTurns());
    JSONArray turns = new JSONArray();
    for (int turnino = 0; turnino &lt; turnHolder.length; turnino++) {
        JSONArray singleTurn = new JSONArray();
        for (DiceFace df : getDiceFaces(turnino)) {
            singleTurn.put(df.toJSON());
        }
        turns.put(singleTurn);
    }
    jsonObject.put(&quot;holder&quot;, turns);
    return jsonObject;
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JHsLYIB2EeiyN7Yq9bqbrA" name="DiceHolderImmutable" visibility="public" method="_JHvOsIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHuAkIB2EeiyN7Yq9bqbrA" name="turnHolder" type="_Ixi8QIB2EeiyN7Yq9bqbrA">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JHuAkYB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JHunoIB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JHv1wIB2EeiyN7Yq9bqbrA" name="fromJSON" visibility="public" isStatic="true" method="_JHxD4IB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHwc0IB2EeiyN7Yq9bqbrA" type="_I0N1wIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHwc0YB2EeiyN7Yq9bqbrA" name="diceHolderImmutable" type="_IvIhcoB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JHxq8IB2EeiyN7Yq9bqbrA" name="getDoneTurns" visibility="public" method="_JHySAIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHxq8YB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JHy5EIB2EeiyN7Yq9bqbrA" name="getDiceFaces" visibility="public" method="_JH0HMYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JHy5EYB2EeiyN7Yq9bqbrA" type="_Ixi8QIB2EeiyN7Yq9bqbrA" direction="return">
                    <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_JHzgIIB2EeiyN7Yq9bqbrA"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_JHzgIYB2EeiyN7Yq9bqbrA" value="*"/>
                  </ownedParameter>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JH0HMIB2EeiyN7Yq9bqbrA" name="turn">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JH0uQIB2EeiyN7Yq9bqbrA" name="toJSON" visibility="public" method="_JH1VUYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JH1VUIB2EeiyN7Yq9bqbrA" type="_IvIhcoB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_I0bRIIB2EeiyN7Yq9bqbrA" name="ToolCardImmutable" visibility="public">
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JH3KgIB2EeiyN7Yq9bqbrA" name="name" visibility="private" type="_IptO4IB2EeiyN7Yq9bqbrA" isUnique="false"/>
                <ownedAttribute xmi:type="uml:Property" xmi:id="_JH4YoIB2EeiyN7Yq9bqbrA" name="token" visibility="private" isUnique="false">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                </ownedAttribute>
                <interfaceRealization xmi:type="uml:InterfaceRealization" xmi:id="_JH2jcIB2EeiyN7Yq9bqbrA" name="ToolCardImmutable implements Serializable" client="_I0bRIIB2EeiyN7Yq9bqbrA" supplier="_I4hG8IB2EeiyN7Yq9bqbrA" contract="_I4hG8IB2EeiyN7Yq9bqbrA"/>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JH8DAIB2EeiyN7Yq9bqbrA" name="ToolCardImmutable" specification="_JH4_sIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    this.name = name;
    this.token = token;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JH94MIB2EeiyN7Yq9bqbrA" name="fromJSON" specification="_JH8qEIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return new ToolCardImmutable(toolCardImmutableJson.getString(&quot;name&quot;), toolCardImmutableJson.getInt(&quot;token&quot;));
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JH_GUIB2EeiyN7Yq9bqbrA" name="getName" specification="_JH94MYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return name;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JH_tYYB2EeiyN7Yq9bqbrA" name="getToken" specification="_JH_GUYB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return token;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JIA7gYB2EeiyN7Yq9bqbrA" name="getNeededTokens" specification="_JIAUcIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return token > 0 ? 2 : 1;
</body>
                </ownedBehavior>
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_JICJoYB2EeiyN7Yq9bqbrA" name="toString" specification="_JIBikIB2EeiyN7Yq9bqbrA">
                  <language>JAVA</language>
                  <body>
    return &quot;ToolCardImmutable{&quot; + &quot;name='&quot; + name + '\'' + &quot;, token=&quot; + token + '}';
</body>
                </ownedBehavior>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JH4_sIB2EeiyN7Yq9bqbrA" name="ToolCardImmutable" visibility="public" method="_JH8DAIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JH604IB2EeiyN7Yq9bqbrA" name="name" type="_IptO4IB2EeiyN7Yq9bqbrA"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JH7b8IB2EeiyN7Yq9bqbrA" name="token">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JH8qEIB2EeiyN7Yq9bqbrA" name="fromJSON" visibility="public" isStatic="true" method="_JH94MIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JH8qEYB2EeiyN7Yq9bqbrA" type="_I0bRIIB2EeiyN7Yq9bqbrA" direction="return"/>
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JH9RIIB2EeiyN7Yq9bqbrA" name="toolCardImmutableJson" type="_IvIhcoB2EeiyN7Yq9bqbrA"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JH94MYB2EeiyN7Yq9bqbrA" name="getName" visibility="public" method="_JH_GUIB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JH-fQIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JH_GUYB2EeiyN7Yq9bqbrA" name="getToken" visibility="public" method="_JH_tYYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JH_tYIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JIAUcIB2EeiyN7Yq9bqbrA" name="getNeededTokens" visibility="public" method="_JIA7gYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JIA7gIB2EeiyN7Yq9bqbrA" direction="return">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusJava_LIBRARIES/JavaLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
                  </ownedParameter>
                </ownedOperation>
                <ownedOperation xmi:type="uml:Operation" xmi:id="_JIBikIB2EeiyN7Yq9bqbrA" name="toString" visibility="public" method="_JICJoYB2EeiyN7Yq9bqbrA">
                  <ownedParameter xmi:type="uml:Parameter" xmi:id="_JICJoIB2EeiyN7Yq9bqbrA" type="_IptO4IB2EeiyN7Yq9bqbrA" direction="return"/>
                </ownedOperation>
              </packagedElement>
              <packagedElement xmi:type="uml:Interface" xmi:id="_JHVmEIB2EeiyN7Yq9bqbrA" name="Cloneable"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_IprZsIB2EeiyN7Yq9bqbrA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_Ipsn0IB2EeiyN7Yq9bqbrA" name="java">
        <packagedElement xmi:type="uml:Package" xmi:id="_Ipsn0YB2EeiyN7Yq9bqbrA" name="lang">
          <packagedElement xmi:type="uml:Class" xmi:id="_IptO4IB2EeiyN7Yq9bqbrA" name="String"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_It_5AIB2EeiyN7Yq9bqbrA" name="Thread"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_JEd4QIB2EeiyN7Yq9bqbrA" name="Throwable"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_JrVD8IB2EeiyN7Yq9bqbrA" name="Object"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_ItAagIB2EeiyN7Yq9bqbrA" name="rmi">
          <packagedElement xmi:type="uml:Class" xmi:id="_ItBBkIB2EeiyN7Yq9bqbrA" name="RemoteException"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_JIWSsIB2EeiyN7Yq9bqbrA" name="Remote"/>
          <packagedElement xmi:type="uml:Package" xmi:id="_JOn50IB2EeiyN7Yq9bqbrA" name="server">
            <packagedElement xmi:type="uml:Class" xmi:id="_JOn50YB2EeiyN7Yq9bqbrA" name="UnicastRemoteObject"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_ItPrEIB2EeiyN7Yq9bqbrA" name="io">
          <packagedElement xmi:type="uml:Interface" xmi:id="_ItQSIIB2EeiyN7Yq9bqbrA" name="IOException"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_I4hG8IB2EeiyN7Yq9bqbrA" name="Serializable"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_JIHCIIB2EeiyN7Yq9bqbrA" name="ObjectInputStream"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_JIJeYIB2EeiyN7Yq9bqbrA" name="ObjectOutputStream"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_It2IAIB2EeiyN7Yq9bqbrA" name="util">
          <packagedElement xmi:type="uml:Package" xmi:id="_It2vEIB2EeiyN7Yq9bqbrA" name="concurrent">
            <packagedElement xmi:type="uml:Class" xmi:id="_It3WIIB2EeiyN7Yq9bqbrA" name="ConcurrentLinkedQueue"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_IyEgsIB2EeiyN7Yq9bqbrA" name="HashMap"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_I0BogIB2EeiyN7Yq9bqbrA" name="ArrayList"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_I5PfsIB2EeiyN7Yq9bqbrA" name="EnumMap"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_I54Y4IB2EeiyN7Yq9bqbrA" name="Random"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_JiIEoIB2EeiyN7Yq9bqbrA" name="Scanner"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_JxTJEYB2EeiyN7Yq9bqbrA" name="ResourceBundle"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_JIEl4IB2EeiyN7Yq9bqbrA" name="net">
          <packagedElement xmi:type="uml:Class" xmi:id="_JIEl4YB2EeiyN7Yq9bqbrA" name="Socket"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_JxU-QIB2EeiyN7Yq9bqbrA" name="URL"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_JUhGcIB2EeiyN7Yq9bqbrA" name="awt">
          <packagedElement xmi:type="uml:Class" xmi:id="_JUhGcYB2EeiyN7Yq9bqbrA" name="Point"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_IvH6YIB2EeiyN7Yq9bqbrA" name="importedTypes">
      <packagedElement xmi:type="uml:Package" xmi:id="_IvIhcIB2EeiyN7Yq9bqbrA" name="org">
        <packagedElement xmi:type="uml:Package" xmi:id="_IvIhcYB2EeiyN7Yq9bqbrA" name="json">
          <packagedElement xmi:type="uml:Class" xmi:id="_IvIhcoB2EeiyN7Yq9bqbrA" name="JSONObject"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_JBHpUIB2EeiyN7Yq9bqbrA" name="JSONException"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Iyf-gIB2EeiyN7Yq9bqbrA" name="SchemaCardFace">
        <packagedElement xmi:type="uml:Class" xmi:id="_IyglkIB2EeiyN7Yq9bqbrA" name="Ignore"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_JAEgdIB2EeiyN7Yq9bqbrA" name="Ansi">
        <packagedElement xmi:type="uml:Class" xmi:id="_JAFHgIB2EeiyN7Yq9bqbrA" name="Color"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_JLP1sIB2EeiyN7Yq9bqbrA" name="RemoteProxySocket">
        <packagedElement xmi:type="uml:Class" xmi:id="_JLP1sYB2EeiyN7Yq9bqbrA" name="ListenerThread"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_JNpCYIB2EeiyN7Yq9bqbrA" name="RemoteProxySocketString">
        <packagedElement xmi:type="uml:Class" xmi:id="_JNpCYYB2EeiyN7Yq9bqbrA" name="ListenerThread"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_JdsQkYB2EeiyN7Yq9bqbrA" name="InputListenerThread">
        <packagedElement xmi:type="uml:Interface" xmi:id="_Jds3oIB2EeiyN7Yq9bqbrA" name="InputListener"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_JkuFoYB2EeiyN7Yq9bqbrA" name="javafx">
        <packagedElement xmi:type="uml:Package" xmi:id="_JkuFooB2EeiyN7Yq9bqbrA" name="scene">
          <packagedElement xmi:type="uml:Package" xmi:id="_JkussIB2EeiyN7Yq9bqbrA" name="layout">
            <packagedElement xmi:type="uml:Class" xmi:id="_JkussYB2EeiyN7Yq9bqbrA" name="StackPane"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_JnS4gYB2EeiyN7Yq9bqbrA" name="VBox"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_JnVUwIB2EeiyN7Yq9bqbrA" name="HBox"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_Jtu3sYB2EeiyN7Yq9bqbrA" name="GridPane"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_Jkv60YB2EeiyN7Yq9bqbrA" name="image">
            <packagedElement xmi:type="uml:Class" xmi:id="_Jkwh4IB2EeiyN7Yq9bqbrA" name="ImageView"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_JlBAkIB2EeiyN7Yq9bqbrA" name="control">
            <packagedElement xmi:type="uml:Class" xmi:id="_JlBnoIB2EeiyN7Yq9bqbrA" name="Label"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_JnWi4YB2EeiyN7Yq9bqbrA" name="Button"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_JtzwMIB2EeiyN7Yq9bqbrA" name="ScrollPane"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_JoWBYYB2EeiyN7Yq9bqbrA" name="input">
            <packagedElement xmi:type="uml:Class" xmi:id="_JoWocIB2EeiyN7Yq9bqbrA" name="MouseEvent"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_Jng68YB2EeiyN7Yq9bqbrA" name="event">
          <packagedElement xmi:type="uml:Interface" xmi:id="_Jng68oB2EeiyN7Yq9bqbrA" name="EventHandler"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_Jn1EAIB2EeiyN7Yq9bqbrA" name="ActionEvent"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_Jq7bUYB2EeiyN7Yq9bqbrA" name="application">
          <packagedElement xmi:type="uml:Class" xmi:id="_Jq7bUoB2EeiyN7Yq9bqbrA" name="Application"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_Jq9QgYB2EeiyN7Yq9bqbrA" name="stage">
          <packagedElement xmi:type="uml:Class" xmi:id="_Jq9QgoB2EeiyN7Yq9bqbrA" name="Stage"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_JuAkgIB2EeiyN7Yq9bqbrA" name="Window"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Jnfs0IB2EeiyN7Yq9bqbrA" name="DraftBoard">
        <packagedElement xmi:type="uml:Interface" xmi:id="_Jnfs0YB2EeiyN7Yq9bqbrA" name="OnDiceSelectedListener"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_O9_3cIB2EeiyN7Yq9bqbrA" name="Class8"/>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_IoWkAIB2EeiyN7Yq9bqbrA">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_IobcgIB2EeiyN7Yq9bqbrA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/PapyrusJava/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://PapyrusJava_PROFILES/PapyrusJava.profile.uml#_j9REUByGEduN1bTiWJ0lyw"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_Io3hYIB2EeiyN7Yq9bqbrA">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_Io4IcIB2EeiyN7Yq9bqbrA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/Codegen/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://Codegen_PROFILES/Codegen.profile.uml#_fPDsIBa-EearhdjjJ6cVzQ"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_Io5WkIB2EeiyN7Yq9bqbrA">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_Io59oIB2EeiyN7Yq9bqbrA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <PapyrusJava:External xmi:id="_Is4esIB2EeiyN7Yq9bqbrA" name="java.lang.String" base_Classifier="_IptO4IB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_ItEr8IB2EeiyN7Yq9bqbrA" name="java.rmi.RemoteException" base_Classifier="_ItBBkIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_ItTVcIB2EeiyN7Yq9bqbrA" name="java.io.IOException" base_Classifier="_ItQSIIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_It6ZcIB2EeiyN7Yq9bqbrA" name="java.util.concurrent.ConcurrentLinkedQueue" base_Classifier="_It3WIIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_IuDjYIB2EeiyN7Yq9bqbrA" name="java.lang.Thread" base_Classifier="_It_5AIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IuH00IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IuExgYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IuoyMIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IumV8IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Iuu40IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IusckIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Iu538IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Iu20o4B2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IvAloIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Iu-wcIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_IvKWoIB2EeiyN7Yq9bqbrA" name="org.json.JSONObject" base_Classifier="_IvIhcoB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IvQdQIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IvOoEIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IvUHoIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IvSScoB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Iva1UIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IvZnMIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IvhjAIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IvfGwIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IvsiIIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Ivqs8oB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IvwzkIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IvvlcIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Iv4vYIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Iv26MIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Iv-O8IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Iv8ZwIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IwHY4IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IwGKwIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IwMRYIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IwLDQIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IwWCYIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IwU0QIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IwcJAIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IwaT0IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Iwi2sIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IwhokIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IwoWQIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IwmhEIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Iw1xoIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Iw0jgIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Iw7RMIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Iw5cAIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IxG3YIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IxFpQIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IxbAcIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IxZyUYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IxlYgIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IxkKYIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Ixyz4IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Ixw-sIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_IyFu0IB2EeiyN7Yq9bqbrA" name="java.util.HashMap" base_Classifier="_IyEgsIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IyL1cIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IyKAQIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_IyhzsIB2EeiyN7Yq9bqbrA" name="SchemaCardFace.Ignore" base_Classifier="_IyglkIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Iy3x8IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Iy2j04B2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IzF0YIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IzEmQIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_IzW6IIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_IzVsAIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Iz1bQIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Iz0NIIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_I0C2oIB2EeiyN7Yq9bqbrA" name="java.util.ArrayList" base_Classifier="_I0BogIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I0F58IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I0Er0YB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I0VKgIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I0T8YIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_I0uzIIB2EeiyN7Yq9bqbrA" name="ArrayList" base_Classifier="_I0s98IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I0ydgIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I0woUIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_I1H0sIB2EeiyN7Yq9bqbrA" name="Point" base_Classifier="_I1F_gIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_I2GFEIB2EeiyN7Yq9bqbrA" name="T" base_Classifier="_I2E28IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I2MywIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I2K9kIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I2REMIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I2P2EIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I2efkIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I2dRcIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I2jYEIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I2iJ8IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I2yBkIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I2wzcIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I22TAIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I21E4IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I3B5MIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I3ArEIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I3FjkIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I3E8gIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I3RJwIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I3P7oIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I3U0IIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I3TmAIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I3ZsoIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I3ZFkIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I3d-EIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I3cv8IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I3oWIIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I3mg8YB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I3t1sIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I3snkIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I3z8UIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I3yuMIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I34NwIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I32_oIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I4FCEIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I4DM4IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I4OMAIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I4MW0IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I4VgwIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I4TrkIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_I4ZyMIB2EeiyN7Yq9bqbrA" name="Point" base_Classifier="_I4YkEIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_I4iVEIB2EeiyN7Yq9bqbrA" name="java.io.Serializable" base_Classifier="_I4hG8IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I4l_cIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I4kKQIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I4stIIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I4q38YB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I4yzwIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I4w-kYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I46IgIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I43sQYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I5CrYIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I5APIIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I5NDcIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I5LOQYB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_I5Qt0IB2EeiyN7Yq9bqbrA" name="java.util.EnumMap" base_Classifier="_I5PfsIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I5VmUIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I5UYMIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I5cUAIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I5bF4IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I5ohQIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I5msEYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I5xEIIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I5vO8IB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_I56OEIB2EeiyN7Yq9bqbrA" name="java.util.Random" base_Classifier="_I54Y4IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_I58qUIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_I561I4B2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JAGVoIB2EeiyN7Yq9bqbrA" name="Ansi.Color" base_Classifier="_JAFHgIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JAKAAIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JAIK0IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JAUYEIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JASi4IB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JAZ3oIB2EeiyN7Yq9bqbrA" name="Point" base_Classifier="_JAXbYYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JA0uYIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JAy5MIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JBA7oIB2EeiyN7Yq9bqbrA" name="Serializable" base_Classifier="_JA_GcIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JBCw0IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JBBis4B2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JBHCQIB2EeiyN7Yq9bqbrA" name="FileNotFoundException" base_Classifier="_JBF0IYB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JBI3cIB2EeiyN7Yq9bqbrA" name="org.json.JSONException" base_Classifier="_JBHpUIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JBL6wIB2EeiyN7Yq9bqbrA" name="IllegalArgumentException" base_Classifier="_JBKsooB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JEY_wIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JEXxoIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JEcDEIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JEaN4IB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JEfGYIB2EeiyN7Yq9bqbrA" name="java.lang.Throwable" base_Classifier="_JEd4QIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JEg7kIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JEftcIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JEj-4IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JEjX0IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JEtv4IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JEshwIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JEwzMIB2EeiyN7Yq9bqbrA" name="Point" base_Classifier="_JEvlEIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JE0dkIB2EeiyN7Yq9bqbrA" name="Ignore" base_Classifier="_JHJ_4IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JHO4YIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JHNqQIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JHYpYIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JHXbQIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JHk2oIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JHjogIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JHtZgIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JHsLYIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JH6N0IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JH4_sIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JIF0AIB2EeiyN7Yq9bqbrA" name="java.net.Socket" base_Classifier="_JIEl4YB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JIIQQIB2EeiyN7Yq9bqbrA" name="java.io.ObjectInputStream" base_Classifier="_JIHCIIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JIKFcIB2EeiyN7Yq9bqbrA" name="java.io.ObjectOutputStream" base_Classifier="_JIJeYIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JINIwIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JIL6oIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:Synchronized xmi:id="_JIQzIIB2EeiyN7Yq9bqbrA" base_Operation="_JIO98IB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JIXg0IB2EeiyN7Yq9bqbrA" name="java.rmi.Remote" base_Classifier="_JIWSsIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JLRD0IB2EeiyN7Yq9bqbrA" name="RemoteProxySocket.ListenerThread" base_Classifier="_JLP1sYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JLTgEIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JLSR8IB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JNl_EIB2EeiyN7Yq9bqbrA" name="InputStreamReader" base_Classifier="_JNkw8IB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JNn0QIB2EeiyN7Yq9bqbrA" name="OutputStreamWriter" base_Classifier="_JNmmIIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JNqQgIB2EeiyN7Yq9bqbrA" name="RemoteProxySocketString.ListenerThread" base_Classifier="_JNpCYYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JNsswIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JNreoIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JNuh8IB2EeiyN7Yq9bqbrA" name="IOException" base_Classifier="_JNtT0YB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JN0okIB2EeiyN7Yq9bqbrA" name="StringBuilder" base_Classifier="_JNzacIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JN9ygIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JN8kYIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:Synchronized xmi:id="_JOA10IB2EeiyN7Yq9bqbrA" base_Operation="_JN_nsIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JOQtcIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JOPfUIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JOpH8IB2EeiyN7Yq9bqbrA" name="java.rmi.server.UnicastRemoteObject" base_Classifier="_JOn50YB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JOsLQIB2EeiyN7Yq9bqbrA" name="ServerSocket" base_Classifier="_JOrkMIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JPFM0IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JPD-sIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JPYu0IB2EeiyN7Yq9bqbrA" name="Comparable" base_Classifier="_JPW5oIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JPcZMIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JPakAoB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JPif0IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JPgqoIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JP1awIB2EeiyN7Yq9bqbrA" name="Point" base_Classifier="_JP0MoIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JQQ4kIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JQPDYYB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JQY0YIB2EeiyN7Yq9bqbrA" name="T" base_Classifier="_JQW_MIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JQgwMIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JQe7AIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JQmPwIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JQkakIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JQzrIIB2EeiyN7Yq9bqbrA" name="ClassNotFoundException" base_Classifier="_JQydAIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JQ2HYIB2EeiyN7Yq9bqbrA" name="ClassCastException" base_Classifier="_JQ0SMIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JRavIIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JRZhAIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JRluQIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JRkgIIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JRxUcIB2EeiyN7Yq9bqbrA" name="InternalState" base_Classifier="_JUQAsIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JR1l4IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JR0XwIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JR6eYIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JR4pMIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JSJu8IB2EeiyN7Yq9bqbrA" name="Point" base_Classifier="_JSH5wIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JUf4UIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JUeqMYB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JUiUkIB2EeiyN7Yq9bqbrA" name="java.awt.Point" base_Classifier="_JUhGcYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JVYpIIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JVXbAIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JVnSoIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JVdhoIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JVuAUIB2EeiyN7Yq9bqbrA" name="Graphics" base_Classifier="_JXwnsIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JVyRwIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JVxDoIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JX1gMIB2EeiyN7Yq9bqbrA" name="RuntimeException" base_Classifier="_JX0SEYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JX3VYIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JX2HQIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JX9cAIB2EeiyN7Yq9bqbrA" name="Times" base_Classifier="_JaRJIIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JX_4QIB2EeiyN7Yq9bqbrA" name="ActionState" base_Classifier="_Jchy8IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JYCUgIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JYBGYIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JYF-4IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JYEwwIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JcogoIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JcmrcIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JcxDgIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jcv1YYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jc5mYIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jc4YQIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JdCJQIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JdBiMIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JdIP4IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JdHBwYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JdQLsIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JdO9kYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JdeOIIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JddAAYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JdmJ8IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jdk70IB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JdtesIB2EeiyN7Yq9bqbrA" name="InputListenerThread.InputListener" base_Classifier="_Jds3oIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JdxJEIB2EeiyN7Yq9bqbrA" name="CLISelectSchemaSubState" base_Classifier="_Jfu38IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JdzlUIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JdyXMYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JfyiUIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jfx7QIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jf4B4IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jf2zwoB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JgdQsIB2EeiyN7Yq9bqbrA" name="Point" base_Classifier="_JgcCkIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JgzO8IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JgyA0IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jg-OEIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jg8Y4IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JhTlQIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JhSXIIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JhYdwIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JhXPoIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jhjc4IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JhhnsIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jhsm0IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JhqxoYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jh0ioIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JhzUgIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_Jh73YIB2EeiyN7Yq9bqbrA" name="Times" base_Classifier="_Jh6pQYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jh9FgIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jh73YYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JiAI0IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jh_hwIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JiJSwIB2EeiyN7Yq9bqbrA" name="java.util.Scanner" base_Classifier="_JiIEoIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JiKg4IB2EeiyN7Yq9bqbrA" name="InputListener" base_Classifier="_Jkh4YIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JiM9IIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JiMWEIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:Synchronized xmi:id="_JkkUoIB2EeiyN7Yq9bqbrA" base_Operation="_JkjGgYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jkn_AIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JkmJ0YB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JkvTwIB2EeiyN7Yq9bqbrA" name="javafx.scene.layout.StackPane" base_Classifier="_JkussYB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JkxwAIB2EeiyN7Yq9bqbrA" name="javafx.scene.image.ImageView" base_Classifier="_Jkwh4IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jk0zUIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JkzlMIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_Jk6S4IB2EeiyN7Yq9bqbrA" name="GridPane" base_Classifier="_Jk4dsYB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_Jk_LYIB2EeiyN7Yq9bqbrA" name="Pane" base_Classifier="_Jk99QIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JlC1wIB2EeiyN7Yq9bqbrA" name="javafx.scene.control.Label" base_Classifier="_JlBnoIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JlFSAIB2EeiyN7Yq9bqbrA" name="HBox" base_Classifier="_JlDc0IB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JlIVUIB2EeiyN7Yq9bqbrA" name="SchemaPanel.OnSchemaInteractionListener" base_Classifier="_JnQcQIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JlKKgIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JlI8YIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JlOb8IB2EeiyN7Yq9bqbrA" name="Point" base_Classifier="_JlNN0YB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JnUGoIB2EeiyN7Yq9bqbrA" name="javafx.scene.layout.VBox" base_Classifier="_JnS4gYB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JnV70IB2EeiyN7Yq9bqbrA" name="javafx.scene.layout.HBox" base_Classifier="_JnVUwIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JnXJ8IB2EeiyN7Yq9bqbrA" name="javafx.scene.control.Button" base_Classifier="_JnWi4YB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JnY_IIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JnYYEIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JngT4IB2EeiyN7Yq9bqbrA" name="DraftBoard.OnDiceSelectedListener" base_Classifier="_Jnfs0YB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JniJEIB2EeiyN7Yq9bqbrA" name="javafx.event.EventHandler" base_Classifier="_Jng68oB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jno2wIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JnnooYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JnshIIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JnrTAIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_Jn2SIIB2EeiyN7Yq9bqbrA" name="javafx.event.ActionEvent" base_Classifier="_Jn1EAIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JoFisIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JoEUkIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JoRI4IB2EeiyN7Yq9bqbrA" name="DiceHolderView.OnTurnHolderInteractionListener" base_Classifier="_JqgkkIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JoSXAIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JoRv8IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JoUMMIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JoS-EYB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JoXPgIB2EeiyN7Yq9bqbrA" name="javafx.scene.input.MouseEvent" base_Classifier="_JoWocIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JqldEIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JqkO8YB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JqunAIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JqtY4IB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_Jq8pcIB2EeiyN7Yq9bqbrA" name="javafx.application.Application" base_Classifier="_Jq7bUoB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_Jq-eoIB2EeiyN7Yq9bqbrA" name="javafx.stage.Stage" base_Classifier="_Jq9QgoB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JrCwEIB2EeiyN7Yq9bqbrA" name="Times" base_Classifier="_JrBh8YB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JrElQIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JrCwEYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JrHokIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JrGacIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JrOWQIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JrNIIoB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JrT10IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JrSnsIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JrWSEIB2EeiyN7Yq9bqbrA" name="java.lang.Object" base_Classifier="_JrVD8IB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JreN4IB2EeiyN7Yq9bqbrA" name="PlayerBoard.OnPlayerBoardAction" base_Classifier="_JtmU0IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JrgDEIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jre08IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JtqmQIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JtpYIYB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JtwF0IB2EeiyN7Yq9bqbrA" name="javafx.scene.layout.GridPane" base_Classifier="_Jtu3sYB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_Jt0XQIB2EeiyN7Yq9bqbrA" name="javafx.scene.control.ScrollPane" base_Classifier="_JtzwMIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jt520IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jt4osoB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JuBLkIB2EeiyN7Yq9bqbrA" name="javafx.stage.Window" base_Classifier="_JuAkgIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JuJHYIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JuH5QYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JuRDMIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JuP1E4B2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JuXw4IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JuXJ0IB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JuaNIIB2EeiyN7Yq9bqbrA" name="OnDiceSelectedListener" base_Classifier="_Jw4SUIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JucCUIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JubbQIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jud3gIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JudQcIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JxNpgIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jw78s4B2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JxUXMIB2EeiyN7Yq9bqbrA" name="java.util.ResourceBundle" base_Classifier="_JxTJEYB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JxVlUIB2EeiyN7Yq9bqbrA" name="java.net.URL" base_Classifier="_JxU-QIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jxbr8IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jxad0IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jxk14IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JxjnwIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jxn5MIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JxnSIIB2EeiyN7Yq9bqbrA"/>
  <PapyrusJava:External xmi:id="_JxsxsIB2EeiyN7Yq9bqbrA" name="Point" base_Classifier="_JxsKoIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jxum4IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JxtYwIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JxyRQIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JxxqMIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jx17oIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jx1UkIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jx4-8IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jx3w0IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jx8CQIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jx7bMIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jx_soIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jx-egYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JyDXAIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JyCI4IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JyFMMIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JyElIIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JyKEsIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JyI2kIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JyMg8IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JyLS04B2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JyQLUIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JyPkQIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JyTOoIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JySAgYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JyZVQIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JyYHIYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jyc_oIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JycYkIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jyh4IIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JygqAYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JykUYIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JyjGQYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jyn-wIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JynXsIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JyrpIIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JyqbAYB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jyv6kIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JyvTgIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jyzk8IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jyy94IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jy-kEIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_Jy9V8YB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JzBAUIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JzAZQIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JzHG8IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JzGf4IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JzJjMIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JzI8IIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JzObsIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JzNNkIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JzQ38IB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JzQQ4IB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_Jzb3EIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JzVJYIB2EeiyN7Yq9bqbrA"/>
  <standard:Create xmi:id="_JzdsQIB2EeiyN7Yq9bqbrA" base_BehavioralFeature="_JzdFMIB2EeiyN7Yq9bqbrA"/>
</xmi:XMI>
